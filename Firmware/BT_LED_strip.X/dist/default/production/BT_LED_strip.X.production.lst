

Microchip Technology PIC PRO Macro Assembler V1.33 build 59893 
                                                                                               Wed Jan 28 16:24:47 2015

Microchip Technology Omniscient Code Generator (PRO mode) build 59893
     1                           	processor	12F1822
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	swtext1,local,class=CONST,delta=2
    13                           	psect	swtext2,local,class=CONST,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	swtext3,local,class=CONST,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	pa_nodes,global,class=CODE,delta=2
    38                           	dabs	1,0x7E,2
    39  0000                     	;# 
    40  0001                     	;# 
    41  0002                     	;# 
    42  0003                     	;# 
    43  0004                     	;# 
    44  0005                     	;# 
    45  0006                     	;# 
    46  0007                     	;# 
    47  0008                     	;# 
    48  0009                     	;# 
    49  000A                     	;# 
    50  000B                     	;# 
    51  000C                     	;# 
    52  0011                     	;# 
    53  0012                     	;# 
    54  0015                     	;# 
    55  0016                     	;# 
    56  0016                     	;# 
    57  0017                     	;# 
    58  0018                     	;# 
    59  0019                     	;# 
    60  001A                     	;# 
    61  001B                     	;# 
    62  001C                     	;# 
    63  001E                     	;# 
    64  001F                     	;# 
    65  008C                     	;# 
    66  0091                     	;# 
    67  0092                     	;# 
    68  0095                     	;# 
    69  0096                     	;# 
    70  0097                     	;# 
    71  0098                     	;# 
    72  0099                     	;# 
    73  009A                     	;# 
    74  009B                     	;# 
    75  009B                     	;# 
    76  009C                     	;# 
    77  009D                     	;# 
    78  009E                     	;# 
    79  010C                     	;# 
    80  0111                     	;# 
    81  0112                     	;# 
    82  0115                     	;# 
    83  0116                     	;# 
    84  0117                     	;# 
    85  0118                     	;# 
    86  0119                     	;# 
    87  011A                     	;# 
    88  011B                     	;# 
    89  011D                     	;# 
    90  011D                     	;# 
    91  018C                     	;# 
    92  0191                     	;# 
    93  0191                     	;# 
    94  0192                     	;# 
    95  0193                     	;# 
    96  0193                     	;# 
    97  0193                     	;# 
    98  0194                     	;# 
    99  0195                     	;# 
   100  0196                     	;# 
   101  0199                     	;# 
   102  019A                     	;# 
   103  019B                     	;# 
   104  019B                     	;# 
   105  019B                     	;# 
   106  019B                     	;# 
   107  019C                     	;# 
   108  019C                     	;# 
   109  019D                     	;# 
   110  019E                     	;# 
   111  019F                     	;# 
   112  020C                     	;# 
   113  0211                     	;# 
   114  0211                     	;# 
   115  0212                     	;# 
   116  0212                     	;# 
   117  0213                     	;# 
   118  0213                     	;# 
   119  0214                     	;# 
   120  0214                     	;# 
   121  0215                     	;# 
   122  0215                     	;# 
   123  0215                     	;# 
   124  0216                     	;# 
   125  0216                     	;# 
   126  0217                     	;# 
   127  0217                     	;# 
   128  0291                     	;# 
   129  0291                     	;# 
   130  0292                     	;# 
   131  0293                     	;# 
   132  0294                     	;# 
   133  0295                     	;# 
   134  0295                     	;# 
   135  0296                     	;# 
   136  0391                     	;# 
   137  0392                     	;# 
   138  0393                     	;# 
   139  039A                     	;# 
   140  039C                     	;# 
   141  039D                     	;# 
   142  039E                     	;# 
   143  039F                     	;# 
   144  0FE4                     	;# 
   145  0FE5                     	;# 
   146  0FE6                     	;# 
   147  0FE7                     	;# 
   148  0FE8                     	;# 
   149  0FE9                     	;# 
   150  0FEA                     	;# 
   151  0FEB                     	;# 
   152  0FED                     	;# 
   153  0FEE                     	;# 
   154  0FEF                     	;# 
   155  0000                     	;# 
   156  0001                     	;# 
   157  0002                     	;# 
   158  0003                     	;# 
   159  0004                     	;# 
   160  0005                     	;# 
   161  0006                     	;# 
   162  0007                     	;# 
   163  0008                     	;# 
   164  0009                     	;# 
   165  000A                     	;# 
   166  000B                     	;# 
   167  000C                     	;# 
   168  0011                     	;# 
   169  0012                     	;# 
   170  0015                     	;# 
   171  0016                     	;# 
   172  0016                     	;# 
   173  0017                     	;# 
   174  0018                     	;# 
   175  0019                     	;# 
   176  001A                     	;# 
   177  001B                     	;# 
   178  001C                     	;# 
   179  001E                     	;# 
   180  001F                     	;# 
   181  008C                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  010C                     	;# 
   196  0111                     	;# 
   197  0112                     	;# 
   198  0115                     	;# 
   199  0116                     	;# 
   200  0117                     	;# 
   201  0118                     	;# 
   202  0119                     	;# 
   203  011A                     	;# 
   204  011B                     	;# 
   205  011D                     	;# 
   206  011D                     	;# 
   207  018C                     	;# 
   208  0191                     	;# 
   209  0191                     	;# 
   210  0192                     	;# 
   211  0193                     	;# 
   212  0193                     	;# 
   213  0193                     	;# 
   214  0194                     	;# 
   215  0195                     	;# 
   216  0196                     	;# 
   217  0199                     	;# 
   218  019A                     	;# 
   219  019B                     	;# 
   220  019B                     	;# 
   221  019B                     	;# 
   222  019B                     	;# 
   223  019C                     	;# 
   224  019C                     	;# 
   225  019D                     	;# 
   226  019E                     	;# 
   227  019F                     	;# 
   228  020C                     	;# 
   229  0211                     	;# 
   230  0211                     	;# 
   231  0212                     	;# 
   232  0212                     	;# 
   233  0213                     	;# 
   234  0213                     	;# 
   235  0214                     	;# 
   236  0214                     	;# 
   237  0215                     	;# 
   238  0215                     	;# 
   239  0215                     	;# 
   240  0216                     	;# 
   241  0216                     	;# 
   242  0217                     	;# 
   243  0217                     	;# 
   244  0291                     	;# 
   245  0291                     	;# 
   246  0292                     	;# 
   247  0293                     	;# 
   248  0294                     	;# 
   249  0295                     	;# 
   250  0295                     	;# 
   251  0296                     	;# 
   252  0391                     	;# 
   253  0392                     	;# 
   254  0393                     	;# 
   255  039A                     	;# 
   256  039C                     	;# 
   257  039D                     	;# 
   258  039E                     	;# 
   259  039F                     	;# 
   260  0FE4                     	;# 
   261  0FE5                     	;# 
   262  0FE6                     	;# 
   263  0FE7                     	;# 
   264  0FE8                     	;# 
   265  0FE9                     	;# 
   266  0FEA                     	;# 
   267  0FEB                     	;# 
   268  0FED                     	;# 
   269  0FEE                     	;# 
   270  0FEF                     	;# 
   271  0000                     	;# 
   272  0001                     	;# 
   273  0002                     	;# 
   274  0003                     	;# 
   275  0004                     	;# 
   276  0005                     	;# 
   277  0006                     	;# 
   278  0007                     	;# 
   279  0008                     	;# 
   280  0009                     	;# 
   281  000A                     	;# 
   282  000B                     	;# 
   283  000C                     	;# 
   284  0011                     	;# 
   285  0012                     	;# 
   286  0015                     	;# 
   287  0016                     	;# 
   288  0016                     	;# 
   289  0017                     	;# 
   290  0018                     	;# 
   291  0019                     	;# 
   292  001A                     	;# 
   293  001B                     	;# 
   294  001C                     	;# 
   295  001E                     	;# 
   296  001F                     	;# 
   297  008C                     	;# 
   298  0091                     	;# 
   299  0092                     	;# 
   300  0095                     	;# 
   301  0096                     	;# 
   302  0097                     	;# 
   303  0098                     	;# 
   304  0099                     	;# 
   305  009A                     	;# 
   306  009B                     	;# 
   307  009B                     	;# 
   308  009C                     	;# 
   309  009D                     	;# 
   310  009E                     	;# 
   311  010C                     	;# 
   312  0111                     	;# 
   313  0112                     	;# 
   314  0115                     	;# 
   315  0116                     	;# 
   316  0117                     	;# 
   317  0118                     	;# 
   318  0119                     	;# 
   319  011A                     	;# 
   320  011B                     	;# 
   321  011D                     	;# 
   322  011D                     	;# 
   323  018C                     	;# 
   324  0191                     	;# 
   325  0191                     	;# 
   326  0192                     	;# 
   327  0193                     	;# 
   328  0193                     	;# 
   329  0193                     	;# 
   330  0194                     	;# 
   331  0195                     	;# 
   332  0196                     	;# 
   333  0199                     	;# 
   334  019A                     	;# 
   335  019B                     	;# 
   336  019B                     	;# 
   337  019B                     	;# 
   338  019B                     	;# 
   339  019C                     	;# 
   340  019C                     	;# 
   341  019D                     	;# 
   342  019E                     	;# 
   343  019F                     	;# 
   344  020C                     	;# 
   345  0211                     	;# 
   346  0211                     	;# 
   347  0212                     	;# 
   348  0212                     	;# 
   349  0213                     	;# 
   350  0213                     	;# 
   351  0214                     	;# 
   352  0214                     	;# 
   353  0215                     	;# 
   354  0215                     	;# 
   355  0215                     	;# 
   356  0216                     	;# 
   357  0216                     	;# 
   358  0217                     	;# 
   359  0217                     	;# 
   360  0291                     	;# 
   361  0291                     	;# 
   362  0292                     	;# 
   363  0293                     	;# 
   364  0294                     	;# 
   365  0295                     	;# 
   366  0295                     	;# 
   367  0296                     	;# 
   368  0391                     	;# 
   369  0392                     	;# 
   370  0393                     	;# 
   371  039A                     	;# 
   372  039C                     	;# 
   373  039D                     	;# 
   374  039E                     	;# 
   375  039F                     	;# 
   376  0FE4                     	;# 
   377  0FE5                     	;# 
   378  0FE6                     	;# 
   379  0FE7                     	;# 
   380  0FE8                     	;# 
   381  0FE9                     	;# 
   382  0FEA                     	;# 
   383  0FEB                     	;# 
   384  0FED                     	;# 
   385  0FEE                     	;# 
   386  0FEF                     	;# 
   387  0000                     	;# 
   388  0001                     	;# 
   389  0002                     	;# 
   390  0003                     	;# 
   391  0004                     	;# 
   392  0005                     	;# 
   393  0006                     	;# 
   394  0007                     	;# 
   395  0008                     	;# 
   396  0009                     	;# 
   397  000A                     	;# 
   398  000B                     	;# 
   399  000C                     	;# 
   400  0011                     	;# 
   401  0012                     	;# 
   402  0015                     	;# 
   403  0016                     	;# 
   404  0016                     	;# 
   405  0017                     	;# 
   406  0018                     	;# 
   407  0019                     	;# 
   408  001A                     	;# 
   409  001B                     	;# 
   410  001C                     	;# 
   411  001E                     	;# 
   412  001F                     	;# 
   413  008C                     	;# 
   414  0091                     	;# 
   415  0092                     	;# 
   416  0095                     	;# 
   417  0096                     	;# 
   418  0097                     	;# 
   419  0098                     	;# 
   420  0099                     	;# 
   421  009A                     	;# 
   422  009B                     	;# 
   423  009B                     	;# 
   424  009C                     	;# 
   425  009D                     	;# 
   426  009E                     	;# 
   427  010C                     	;# 
   428  0111                     	;# 
   429  0112                     	;# 
   430  0115                     	;# 
   431  0116                     	;# 
   432  0117                     	;# 
   433  0118                     	;# 
   434  0119                     	;# 
   435  011A                     	;# 
   436  011B                     	;# 
   437  011D                     	;# 
   438  011D                     	;# 
   439  018C                     	;# 
   440  0191                     	;# 
   441  0191                     	;# 
   442  0192                     	;# 
   443  0193                     	;# 
   444  0193                     	;# 
   445  0193                     	;# 
   446  0194                     	;# 
   447  0195                     	;# 
   448  0196                     	;# 
   449  0199                     	;# 
   450  019A                     	;# 
   451  019B                     	;# 
   452  019B                     	;# 
   453  019B                     	;# 
   454  019B                     	;# 
   455  019C                     	;# 
   456  019C                     	;# 
   457  019D                     	;# 
   458  019E                     	;# 
   459  019F                     	;# 
   460  020C                     	;# 
   461  0211                     	;# 
   462  0211                     	;# 
   463  0212                     	;# 
   464  0212                     	;# 
   465  0213                     	;# 
   466  0213                     	;# 
   467  0214                     	;# 
   468  0214                     	;# 
   469  0215                     	;# 
   470  0215                     	;# 
   471  0215                     	;# 
   472  0216                     	;# 
   473  0216                     	;# 
   474  0217                     	;# 
   475  0217                     	;# 
   476  0291                     	;# 
   477  0291                     	;# 
   478  0292                     	;# 
   479  0293                     	;# 
   480  0294                     	;# 
   481  0295                     	;# 
   482  0295                     	;# 
   483  0296                     	;# 
   484  0391                     	;# 
   485  0392                     	;# 
   486  0393                     	;# 
   487  039A                     	;# 
   488  039C                     	;# 
   489  039D                     	;# 
   490  039E                     	;# 
   491  039F                     	;# 
   492  0FE4                     	;# 
   493  0FE5                     	;# 
   494  0FE6                     	;# 
   495  0FE7                     	;# 
   496  0FE8                     	;# 
   497  0FE9                     	;# 
   498  0FEA                     	;# 
   499  0FEB                     	;# 
   500  0FED                     	;# 
   501  0FEE                     	;# 
   502  0FEF                     	;# 
   503  0000                     	;# 
   504  0001                     	;# 
   505  0002                     	;# 
   506  0003                     	;# 
   507  0004                     	;# 
   508  0005                     	;# 
   509  0006                     	;# 
   510  0007                     	;# 
   511  0008                     	;# 
   512  0009                     	;# 
   513  000A                     	;# 
   514  000B                     	;# 
   515  000C                     	;# 
   516  0011                     	;# 
   517  0012                     	;# 
   518  0015                     	;# 
   519  0016                     	;# 
   520  0016                     	;# 
   521  0017                     	;# 
   522  0018                     	;# 
   523  0019                     	;# 
   524  001A                     	;# 
   525  001B                     	;# 
   526  001C                     	;# 
   527  001E                     	;# 
   528  001F                     	;# 
   529  008C                     	;# 
   530  0091                     	;# 
   531  0092                     	;# 
   532  0095                     	;# 
   533  0096                     	;# 
   534  0097                     	;# 
   535  0098                     	;# 
   536  0099                     	;# 
   537  009A                     	;# 
   538  009B                     	;# 
   539  009B                     	;# 
   540  009C                     	;# 
   541  009D                     	;# 
   542  009E                     	;# 
   543  010C                     	;# 
   544  0111                     	;# 
   545  0112                     	;# 
   546  0115                     	;# 
   547  0116                     	;# 
   548  0117                     	;# 
   549  0118                     	;# 
   550  0119                     	;# 
   551  011A                     	;# 
   552  011B                     	;# 
   553  011D                     	;# 
   554  011D                     	;# 
   555  018C                     	;# 
   556  0191                     	;# 
   557  0191                     	;# 
   558  0192                     	;# 
   559  0193                     	;# 
   560  0193                     	;# 
   561  0193                     	;# 
   562  0194                     	;# 
   563  0195                     	;# 
   564  0196                     	;# 
   565  0199                     	;# 
   566  019A                     	;# 
   567  019B                     	;# 
   568  019B                     	;# 
   569  019B                     	;# 
   570  019B                     	;# 
   571  019C                     	;# 
   572  019C                     	;# 
   573  019D                     	;# 
   574  019E                     	;# 
   575  019F                     	;# 
   576  020C                     	;# 
   577  0211                     	;# 
   578  0211                     	;# 
   579  0212                     	;# 
   580  0212                     	;# 
   581  0213                     	;# 
   582  0213                     	;# 
   583  0214                     	;# 
   584  0214                     	;# 
   585  0215                     	;# 
   586  0215                     	;# 
   587  0215                     	;# 
   588  0216                     	;# 
   589  0216                     	;# 
   590  0217                     	;# 
   591  0217                     	;# 
   592  0291                     	;# 
   593  0291                     	;# 
   594  0292                     	;# 
   595  0293                     	;# 
   596  0294                     	;# 
   597  0295                     	;# 
   598  0295                     	;# 
   599  0296                     	;# 
   600  0391                     	;# 
   601  0392                     	;# 
   602  0393                     	;# 
   603  039A                     	;# 
   604  039C                     	;# 
   605  039D                     	;# 
   606  039E                     	;# 
   607  039F                     	;# 
   608  0FE4                     	;# 
   609  0FE5                     	;# 
   610  0FE6                     	;# 
   611  0FE7                     	;# 
   612  0FE8                     	;# 
   613  0FE9                     	;# 
   614  0FEA                     	;# 
   615  0FEB                     	;# 
   616  0FED                     	;# 
   617  0FEE                     	;# 
   618  0FEF                     	;# 
   619  0000                     	;# 
   620  0001                     	;# 
   621  0002                     	;# 
   622  0003                     	;# 
   623  0004                     	;# 
   624  0005                     	;# 
   625  0006                     	;# 
   626  0007                     	;# 
   627  0008                     	;# 
   628  0009                     	;# 
   629  000A                     	;# 
   630  000B                     	;# 
   631  000C                     	;# 
   632  0011                     	;# 
   633  0012                     	;# 
   634  0015                     	;# 
   635  0016                     	;# 
   636  0016                     	;# 
   637  0017                     	;# 
   638  0018                     	;# 
   639  0019                     	;# 
   640  001A                     	;# 
   641  001B                     	;# 
   642  001C                     	;# 
   643  001E                     	;# 
   644  001F                     	;# 
   645  008C                     	;# 
   646  0091                     	;# 
   647  0092                     	;# 
   648  0095                     	;# 
   649  0096                     	;# 
   650  0097                     	;# 
   651  0098                     	;# 
   652  0099                     	;# 
   653  009A                     	;# 
   654  009B                     	;# 
   655  009B                     	;# 
   656  009C                     	;# 
   657  009D                     	;# 
   658  009E                     	;# 
   659  010C                     	;# 
   660  0111                     	;# 
   661  0112                     	;# 
   662  0115                     	;# 
   663  0116                     	;# 
   664  0117                     	;# 
   665  0118                     	;# 
   666  0119                     	;# 
   667  011A                     	;# 
   668  011B                     	;# 
   669  011D                     	;# 
   670  011D                     	;# 
   671  018C                     	;# 
   672  0191                     	;# 
   673  0191                     	;# 
   674  0192                     	;# 
   675  0193                     	;# 
   676  0193                     	;# 
   677  0193                     	;# 
   678  0194                     	;# 
   679  0195                     	;# 
   680  0196                     	;# 
   681  0199                     	;# 
   682  019A                     	;# 
   683  019B                     	;# 
   684  019B                     	;# 
   685  019B                     	;# 
   686  019B                     	;# 
   687  019C                     	;# 
   688  019C                     	;# 
   689  019D                     	;# 
   690  019E                     	;# 
   691  019F                     	;# 
   692  020C                     	;# 
   693  0211                     	;# 
   694  0211                     	;# 
   695  0212                     	;# 
   696  0212                     	;# 
   697  0213                     	;# 
   698  0213                     	;# 
   699  0214                     	;# 
   700  0214                     	;# 
   701  0215                     	;# 
   702  0215                     	;# 
   703  0215                     	;# 
   704  0216                     	;# 
   705  0216                     	;# 
   706  0217                     	;# 
   707  0217                     	;# 
   708  0291                     	;# 
   709  0291                     	;# 
   710  0292                     	;# 
   711  0293                     	;# 
   712  0294                     	;# 
   713  0295                     	;# 
   714  0295                     	;# 
   715  0296                     	;# 
   716  0391                     	;# 
   717  0392                     	;# 
   718  0393                     	;# 
   719  039A                     	;# 
   720  039C                     	;# 
   721  039D                     	;# 
   722  039E                     	;# 
   723  039F                     	;# 
   724  0FE4                     	;# 
   725  0FE5                     	;# 
   726  0FE6                     	;# 
   727  0FE7                     	;# 
   728  0FE8                     	;# 
   729  0FE9                     	;# 
   730  0FEA                     	;# 
   731  0FEB                     	;# 
   732  0FED                     	;# 
   733  0FEE                     	;# 
   734  0FEF                     	;# 
   735  0000                     	;# 
   736  0001                     	;# 
   737  0002                     	;# 
   738  0003                     	;# 
   739  0004                     	;# 
   740  0005                     	;# 
   741  0006                     	;# 
   742  0007                     	;# 
   743  0008                     	;# 
   744  0009                     	;# 
   745  000A                     	;# 
   746  000B                     	;# 
   747  000C                     	;# 
   748  0011                     	;# 
   749  0012                     	;# 
   750  0015                     	;# 
   751  0016                     	;# 
   752  0016                     	;# 
   753  0017                     	;# 
   754  0018                     	;# 
   755  0019                     	;# 
   756  001A                     	;# 
   757  001B                     	;# 
   758  001C                     	;# 
   759  001E                     	;# 
   760  001F                     	;# 
   761  008C                     	;# 
   762  0091                     	;# 
   763  0092                     	;# 
   764  0095                     	;# 
   765  0096                     	;# 
   766  0097                     	;# 
   767  0098                     	;# 
   768  0099                     	;# 
   769  009A                     	;# 
   770  009B                     	;# 
   771  009B                     	;# 
   772  009C                     	;# 
   773  009D                     	;# 
   774  009E                     	;# 
   775  010C                     	;# 
   776  0111                     	;# 
   777  0112                     	;# 
   778  0115                     	;# 
   779  0116                     	;# 
   780  0117                     	;# 
   781  0118                     	;# 
   782  0119                     	;# 
   783  011A                     	;# 
   784  011B                     	;# 
   785  011D                     	;# 
   786  011D                     	;# 
   787  018C                     	;# 
   788  0191                     	;# 
   789  0191                     	;# 
   790  0192                     	;# 
   791  0193                     	;# 
   792  0193                     	;# 
   793  0193                     	;# 
   794  0194                     	;# 
   795  0195                     	;# 
   796  0196                     	;# 
   797  0199                     	;# 
   798  019A                     	;# 
   799  019B                     	;# 
   800  019B                     	;# 
   801  019B                     	;# 
   802  019B                     	;# 
   803  019C                     	;# 
   804  019C                     	;# 
   805  019D                     	;# 
   806  019E                     	;# 
   807  019F                     	;# 
   808  020C                     	;# 
   809  0211                     	;# 
   810  0211                     	;# 
   811  0212                     	;# 
   812  0212                     	;# 
   813  0213                     	;# 
   814  0213                     	;# 
   815  0214                     	;# 
   816  0214                     	;# 
   817  0215                     	;# 
   818  0215                     	;# 
   819  0215                     	;# 
   820  0216                     	;# 
   821  0216                     	;# 
   822  0217                     	;# 
   823  0217                     	;# 
   824  0291                     	;# 
   825  0291                     	;# 
   826  0292                     	;# 
   827  0293                     	;# 
   828  0294                     	;# 
   829  0295                     	;# 
   830  0295                     	;# 
   831  0296                     	;# 
   832  0391                     	;# 
   833  0392                     	;# 
   834  0393                     	;# 
   835  039A                     	;# 
   836  039C                     	;# 
   837  039D                     	;# 
   838  039E                     	;# 
   839  039F                     	;# 
   840  0FE4                     	;# 
   841  0FE5                     	;# 
   842  0FE6                     	;# 
   843  0FE7                     	;# 
   844  0FE8                     	;# 
   845  0FE9                     	;# 
   846  0FEA                     	;# 
   847  0FEB                     	;# 
   848  0FED                     	;# 
   849  0FEE                     	;# 
   850  0FEF                     	;# 
   851  0000                     	;# 
   852  0001                     	;# 
   853  0002                     	;# 
   854  0003                     	;# 
   855  0004                     	;# 
   856  0005                     	;# 
   857  0006                     	;# 
   858  0007                     	;# 
   859  0008                     	;# 
   860  0009                     	;# 
   861  000A                     	;# 
   862  000B                     	;# 
   863  000C                     	;# 
   864  0011                     	;# 
   865  0012                     	;# 
   866  0015                     	;# 
   867  0016                     	;# 
   868  0016                     	;# 
   869  0017                     	;# 
   870  0018                     	;# 
   871  0019                     	;# 
   872  001A                     	;# 
   873  001B                     	;# 
   874  001C                     	;# 
   875  001E                     	;# 
   876  001F                     	;# 
   877  008C                     	;# 
   878  0091                     	;# 
   879  0092                     	;# 
   880  0095                     	;# 
   881  0096                     	;# 
   882  0097                     	;# 
   883  0098                     	;# 
   884  0099                     	;# 
   885  009A                     	;# 
   886  009B                     	;# 
   887  009B                     	;# 
   888  009C                     	;# 
   889  009D                     	;# 
   890  009E                     	;# 
   891  010C                     	;# 
   892  0111                     	;# 
   893  0112                     	;# 
   894  0115                     	;# 
   895  0116                     	;# 
   896  0117                     	;# 
   897  0118                     	;# 
   898  0119                     	;# 
   899  011A                     	;# 
   900  011B                     	;# 
   901  011D                     	;# 
   902  011D                     	;# 
   903  018C                     	;# 
   904  0191                     	;# 
   905  0191                     	;# 
   906  0192                     	;# 
   907  0193                     	;# 
   908  0193                     	;# 
   909  0193                     	;# 
   910  0194                     	;# 
   911  0195                     	;# 
   912  0196                     	;# 
   913  0199                     	;# 
   914  019A                     	;# 
   915  019B                     	;# 
   916  019B                     	;# 
   917  019B                     	;# 
   918  019B                     	;# 
   919  019C                     	;# 
   920  019C                     	;# 
   921  019D                     	;# 
   922  019E                     	;# 
   923  019F                     	;# 
   924  020C                     	;# 
   925  0211                     	;# 
   926  0211                     	;# 
   927  0212                     	;# 
   928  0212                     	;# 
   929  0213                     	;# 
   930  0213                     	;# 
   931  0214                     	;# 
   932  0214                     	;# 
   933  0215                     	;# 
   934  0215                     	;# 
   935  0215                     	;# 
   936  0216                     	;# 
   937  0216                     	;# 
   938  0217                     	;# 
   939  0217                     	;# 
   940  0291                     	;# 
   941  0291                     	;# 
   942  0292                     	;# 
   943  0293                     	;# 
   944  0294                     	;# 
   945  0295                     	;# 
   946  0295                     	;# 
   947  0296                     	;# 
   948  0391                     	;# 
   949  0392                     	;# 
   950  0393                     	;# 
   951  039A                     	;# 
   952  039C                     	;# 
   953  039D                     	;# 
   954  039E                     	;# 
   955  039F                     	;# 
   956  0FE4                     	;# 
   957  0FE5                     	;# 
   958  0FE6                     	;# 
   959  0FE7                     	;# 
   960  0FE8                     	;# 
   961  0FE9                     	;# 
   962  0FEA                     	;# 
   963  0FEB                     	;# 
   964  0FED                     	;# 
   965  0FEE                     	;# 
   966  0FEF                     	;# 
   967  0000                     	;# 
   968  0001                     	;# 
   969  0002                     	;# 
   970  0003                     	;# 
   971  0004                     	;# 
   972  0005                     	;# 
   973  0006                     	;# 
   974  0007                     	;# 
   975  0008                     	;# 
   976  0009                     	;# 
   977  000A                     	;# 
   978  000B                     	;# 
   979  000C                     	;# 
   980  0011                     	;# 
   981  0012                     	;# 
   982  0015                     	;# 
   983  0016                     	;# 
   984  0016                     	;# 
   985  0017                     	;# 
   986  0018                     	;# 
   987  0019                     	;# 
   988  001A                     	;# 
   989  001B                     	;# 
   990  001C                     	;# 
   991  001E                     	;# 
   992  001F                     	;# 
   993  008C                     	;# 
   994  0091                     	;# 
   995  0092                     	;# 
   996  0095                     	;# 
   997  0096                     	;# 
   998  0097                     	;# 
   999  0098                     	;# 
  1000  0099                     	;# 
  1001  009A                     	;# 
  1002  009B                     	;# 
  1003  009B                     	;# 
  1004  009C                     	;# 
  1005  009D                     	;# 
  1006  009E                     	;# 
  1007  010C                     	;# 
  1008  0111                     	;# 
  1009  0112                     	;# 
  1010  0115                     	;# 
  1011  0116                     	;# 
  1012  0117                     	;# 
  1013  0118                     	;# 
  1014  0119                     	;# 
  1015  011A                     	;# 
  1016  011B                     	;# 
  1017  011D                     	;# 
  1018  011D                     	;# 
  1019  018C                     	;# 
  1020  0191                     	;# 
  1021  0191                     	;# 
  1022  0192                     	;# 
  1023  0193                     	;# 
  1024  0193                     	;# 
  1025  0193                     	;# 
  1026  0194                     	;# 
  1027  0195                     	;# 
  1028  0196                     	;# 
  1029  0199                     	;# 
  1030  019A                     	;# 
  1031  019B                     	;# 
  1032  019B                     	;# 
  1033  019B                     	;# 
  1034  019B                     	;# 
  1035  019C                     	;# 
  1036  019C                     	;# 
  1037  019D                     	;# 
  1038  019E                     	;# 
  1039  019F                     	;# 
  1040  020C                     	;# 
  1041  0211                     	;# 
  1042  0211                     	;# 
  1043  0212                     	;# 
  1044  0212                     	;# 
  1045  0213                     	;# 
  1046  0213                     	;# 
  1047  0214                     	;# 
  1048  0214                     	;# 
  1049  0215                     	;# 
  1050  0215                     	;# 
  1051  0215                     	;# 
  1052  0216                     	;# 
  1053  0216                     	;# 
  1054  0217                     	;# 
  1055  0217                     	;# 
  1056  0291                     	;# 
  1057  0291                     	;# 
  1058  0292                     	;# 
  1059  0293                     	;# 
  1060  0294                     	;# 
  1061  0295                     	;# 
  1062  0295                     	;# 
  1063  0296                     	;# 
  1064  0391                     	;# 
  1065  0392                     	;# 
  1066  0393                     	;# 
  1067  039A                     	;# 
  1068  039C                     	;# 
  1069  039D                     	;# 
  1070  039E                     	;# 
  1071  039F                     	;# 
  1072  0FE4                     	;# 
  1073  0FE5                     	;# 
  1074  0FE6                     	;# 
  1075  0FE7                     	;# 
  1076  0FE8                     	;# 
  1077  0FE9                     	;# 
  1078  0FEA                     	;# 
  1079  0FEB                     	;# 
  1080  0FED                     	;# 
  1081  0FEE                     	;# 
  1082  0FEF                     	;# 
  1083  0000                     	;# 
  1084  0001                     	;# 
  1085  0002                     	;# 
  1086  0003                     	;# 
  1087  0004                     	;# 
  1088  0005                     	;# 
  1089  0006                     	;# 
  1090  0007                     	;# 
  1091  0008                     	;# 
  1092  0009                     	;# 
  1093  000A                     	;# 
  1094  000B                     	;# 
  1095  000C                     	;# 
  1096  0011                     	;# 
  1097  0012                     	;# 
  1098  0015                     	;# 
  1099  0016                     	;# 
  1100  0016                     	;# 
  1101  0017                     	;# 
  1102  0018                     	;# 
  1103  0019                     	;# 
  1104  001A                     	;# 
  1105  001B                     	;# 
  1106  001C                     	;# 
  1107  001E                     	;# 
  1108  001F                     	;# 
  1109  008C                     	;# 
  1110  0091                     	;# 
  1111  0092                     	;# 
  1112  0095                     	;# 
  1113  0096                     	;# 
  1114  0097                     	;# 
  1115  0098                     	;# 
  1116  0099                     	;# 
  1117  009A                     	;# 
  1118  009B                     	;# 
  1119  009B                     	;# 
  1120  009C                     	;# 
  1121  009D                     	;# 
  1122  009E                     	;# 
  1123  010C                     	;# 
  1124  0111                     	;# 
  1125  0112                     	;# 
  1126  0115                     	;# 
  1127  0116                     	;# 
  1128  0117                     	;# 
  1129  0118                     	;# 
  1130  0119                     	;# 
  1131  011A                     	;# 
  1132  011B                     	;# 
  1133  011D                     	;# 
  1134  011D                     	;# 
  1135  018C                     	;# 
  1136  0191                     	;# 
  1137  0191                     	;# 
  1138  0192                     	;# 
  1139  0193                     	;# 
  1140  0193                     	;# 
  1141  0193                     	;# 
  1142  0194                     	;# 
  1143  0195                     	;# 
  1144  0196                     	;# 
  1145  0199                     	;# 
  1146  019A                     	;# 
  1147  019B                     	;# 
  1148  019B                     	;# 
  1149  019B                     	;# 
  1150  019B                     	;# 
  1151  019C                     	;# 
  1152  019C                     	;# 
  1153  019D                     	;# 
  1154  019E                     	;# 
  1155  019F                     	;# 
  1156  020C                     	;# 
  1157  0211                     	;# 
  1158  0211                     	;# 
  1159  0212                     	;# 
  1160  0212                     	;# 
  1161  0213                     	;# 
  1162  0213                     	;# 
  1163  0214                     	;# 
  1164  0214                     	;# 
  1165  0215                     	;# 
  1166  0215                     	;# 
  1167  0215                     	;# 
  1168  0216                     	;# 
  1169  0216                     	;# 
  1170  0217                     	;# 
  1171  0217                     	;# 
  1172  0291                     	;# 
  1173  0291                     	;# 
  1174  0292                     	;# 
  1175  0293                     	;# 
  1176  0294                     	;# 
  1177  0295                     	;# 
  1178  0295                     	;# 
  1179  0296                     	;# 
  1180  0391                     	;# 
  1181  0392                     	;# 
  1182  0393                     	;# 
  1183  039A                     	;# 
  1184  039C                     	;# 
  1185  039D                     	;# 
  1186  039E                     	;# 
  1187  039F                     	;# 
  1188  0FE4                     	;# 
  1189  0FE5                     	;# 
  1190  0FE6                     	;# 
  1191  0FE7                     	;# 
  1192  0FE8                     	;# 
  1193  0FE9                     	;# 
  1194  0FEA                     	;# 
  1195  0FEB                     	;# 
  1196  0FED                     	;# 
  1197  0FEE                     	;# 
  1198  0FEF                     	;# 
  1199                           
  1200                           	psect	stringtext
  1201  0200                     __pstringtext:	
  1202  0200                     _CMD_SET_STARRY:	
  1203  0200  3453               	retlw	83
  1204  0201  3465               	retlw	101
  1205  0202  3474               	retlw	116
  1206  0203  344C               	retlw	76
  1207  0204  3445               	retlw	69
  1208  0205  3444               	retlw	68
  1209  0206  3420               	retlw	32
  1210  0207  3453               	retlw	83
  1211  0208  3454               	retlw	84
  1212  0209  3441               	retlw	65
  1213  020A  3452               	retlw	82
  1214  020B  3452               	retlw	82
  1215  020C  3459               	retlw	89
  1216  020D  340D               	retlw	13
  1217  020E  340A               	retlw	10
  1218  020F  3400               	retlw	0
  1219  0210                     __end_of_CMD_SET_STARRY:	
  1220  0210                     _CMD_SET_PARTY:	
  1221  0210  3453               	retlw	83
  1222  0211  3465               	retlw	101
  1223  0212  3474               	retlw	116
  1224  0213  344C               	retlw	76
  1225  0214  3445               	retlw	69
  1226  0215  3444               	retlw	68
  1227  0216  3420               	retlw	32
  1228  0217  3450               	retlw	80
  1229  0218  3441               	retlw	65
  1230  0219  3452               	retlw	82
  1231  021A  3454               	retlw	84
  1232  021B  3459               	retlw	89
  1233  021C  340D               	retlw	13
  1234  021D  340A               	retlw	10
  1235  021E  3400               	retlw	0
  1236  021F                     __end_of_CMD_SET_PARTY:	
  1237  021F                     _CMD_GET_STATE:	
  1238  021F  3447               	retlw	71
  1239  0220  3465               	retlw	101
  1240  0221  3474               	retlw	116
  1241  0222  344C               	retlw	76
  1242  0223  3445               	retlw	69
  1243  0224  3444               	retlw	68
  1244  0225  3453               	retlw	83
  1245  0226  3474               	retlw	116
  1246  0227  3461               	retlw	97
  1247  0228  3474               	retlw	116
  1248  0229  3465               	retlw	101
  1249  022A  340D               	retlw	13
  1250  022B  340A               	retlw	10
  1251  022C  3400               	retlw	0
  1252  022D                     __end_of_CMD_GET_STATE:	
  1253  022D                     _CMD_SET_XMAS:	
  1254  022D  3453               	retlw	83
  1255  022E  3465               	retlw	101
  1256  022F  3474               	retlw	116
  1257  0230  344C               	retlw	76
  1258  0231  3445               	retlw	69
  1259  0232  3444               	retlw	68
  1260  0233  3420               	retlw	32
  1261  0234  3458               	retlw	88
  1262  0235  344D               	retlw	77
  1263  0236  3441               	retlw	65
  1264  0237  3453               	retlw	83
  1265  0238  340D               	retlw	13
  1266  0239  340A               	retlw	10
  1267  023A  3400               	retlw	0
  1268  023B                     __end_of_CMD_SET_XMAS:	
  1269  023B                     _CMD_SET_OFF:	
  1270  023B  3453               	retlw	83
  1271  023C  3465               	retlw	101
  1272  023D  3474               	retlw	116
  1273  023E  344C               	retlw	76
  1274  023F  3445               	retlw	69
  1275  0240  3444               	retlw	68
  1276  0241  3420               	retlw	32
  1277  0242  344F               	retlw	79
  1278  0243  3466               	retlw	102
  1279  0244  3466               	retlw	102
  1280  0245  340D               	retlw	13
  1281  0246  340A               	retlw	10
  1282  0247  3400               	retlw	0
  1283  0248                     __end_of_CMD_SET_OFF:	
  1284  0248                     _CMD_SET_COLOR:	
  1285  0248  3453               	retlw	83
  1286  0249  3465               	retlw	101
  1287  024A  3474               	retlw	116
  1288  024B  3452               	retlw	82
  1289  024C  3447               	retlw	71
  1290  024D  3442               	retlw	66
  1291  024E  340D               	retlw	13
  1292  024F  340A               	retlw	10
  1293  0250  3400               	retlw	0
  1294  0251                     __end_of_CMD_SET_COLOR:	
  1295  000B                     _INTCONbits	set	11
  1296  0011                     _PIR1bits	set	17
  1297  0012                     _PIR2bits	set	18
  1298  0018                     _T1CON	set	24
  1299  0018                     _T1CONbits	set	24
  1300  0019                     _T1GCON	set	25
  1301  0017                     _TMR1H	set	23
  1302  0016                     _TMR1L	set	22
  1303  005F                     _GIE	set	95
  1304  0095                     _OPTION_REGbits	set	149
  1305  0099                     _OSCCON	set	153
  1306  009A                     _OSCSTAT	set	154
  1307  0098                     _OSCTUNE	set	152
  1308  0091                     _PIE1bits	set	145
  1309  0092                     _PIE2bits	set	146
  1310  008C                     _TRISA	set	140
  1311  04D6                     _PLLR	set	1238
  1312  011D                     _APFCON	set	285
  1313  0111                     _CM1CON0	set	273
  1314  0112                     _CM1CON1	set	274
  1315  0117                     _FVRCON	set	279
  1316  010C                     _LATA	set	268
  1317  0862                     _LATA2	set	2146
  1318  018C                     _ANSELA	set	396
  1319  019F                     _BAUDCON	set	415
  1320  0199                     _RCREG	set	409
  1321  019D                     _RCSTA	set	413
  1322  019D                     _RCSTAbits	set	413
  1323  019C                     _SPBRGH	set	412
  1324  019B                     _SPBRGL	set	411
  1325  019A                     _TXREG	set	410
  1326  019E                     _TXSTA	set	414
  1327  020C                     _WPUA	set	524
  1328  0251                     __stringdata:	
  1329  0251                     STR_7:	
  1330  0251  3449               	retlw	73	;'I'
  1331  0252  346E               	retlw	110	;'n'
  1332  0253  3476               	retlw	118	;'v'
  1333  0254  3461               	retlw	97	;'a'
  1334  0255  346C               	retlw	108	;'l'
  1335  0256  3469               	retlw	105	;'i'
  1336  0257  3464               	retlw	100	;'d'
  1337  0258  3420               	retlw	32	;' '
  1338  0259  3443               	retlw	67	;'C'
  1339  025A  346F               	retlw	111	;'o'
  1340  025B  346D               	retlw	109	;'m'
  1341  025C  346D               	retlw	109	;'m'
  1342  025D  3461               	retlw	97	;'a'
  1343  025E  346E               	retlw	110	;'n'
  1344  025F  3464               	retlw	100	;'d'
  1345  0260  3420               	retlw	32	;' '
  1346  0261  340D               	retlw	13
  1347  0262  340A               	retlw	10
  1348  0263  3400               	retlw	0
  1349  0264                     STR_2:	
  1350  0264  3444               	retlw	68	;'D'
  1351  0265  3469               	retlw	105	;'i'
  1352  0266  3472               	retlw	114	;'r'
  1353  0267  3465               	retlw	101	;'e'
  1354  0268  3463               	retlw	99	;'c'
  1355  0269  3474               	retlw	116	;'t'
  1356  026A  3420               	retlw	32	;' '
  1357  026B  3463               	retlw	99	;'c'
  1358  026C  346F               	retlw	111	;'o'
  1359  026D  346C               	retlw	108	;'l'
  1360  026E  346F               	retlw	111	;'o'
  1361  026F  3472               	retlw	114	;'r'
  1362  0270  340D               	retlw	13
  1363  0271  340A               	retlw	10
  1364  0272  3400               	retlw	0
  1365  0273                     STR_1:	
  1366  0273  344C               	retlw	76	;'L'
  1367  0274  3445               	retlw	69	;'E'
  1368  0275  3444               	retlw	68	;'D'
  1369  0276  3420               	retlw	32	;' '
  1370  0277  3469               	retlw	105	;'i'
  1371  0278  3473               	retlw	115	;'s'
  1372  0279  3420               	retlw	32	;' '
  1373  027A  344F               	retlw	79	;'O'
  1374  027B  3446               	retlw	70	;'F'
  1375  027C  3446               	retlw	70	;'F'
  1376  027D  340D               	retlw	13
  1377  027E  340A               	retlw	10
  1378  027F  3400               	retlw	0
  1379  0280                     STR_3:	
  1380  0280  3453               	retlw	83	;'S'
  1381  0281  3474               	retlw	116	;'t'
  1382  0282  3461               	retlw	97	;'a'
  1383  0283  3472               	retlw	114	;'r'
  1384  0284  3472               	retlw	114	;'r'
  1385  0285  3479               	retlw	121	;'y'
  1386  0286  340D               	retlw	13
  1387  0287  340A               	retlw	10
  1388  0288  3400               	retlw	0
  1389  0289                     STR_8:	
  1390  0289  3444               	retlw	68	;'D'
  1391  028A  344F               	retlw	79	;'O'
  1392  028B  344E               	retlw	78	;'N'
  1393  028C  3445               	retlw	69	;'E'
  1394  028D  3421               	retlw	33	;'!'
  1395  028E  340D               	retlw	13
  1396  028F  340A               	retlw	10
  1397  0290  3400               	retlw	0
  1398  0291                     STR_6:	
  1399  0291  3445               	retlw	69	;'E'
  1400  0292  3452               	retlw	82	;'R'
  1401  0293  3452               	retlw	82	;'R'
  1402  0294  344F               	retlw	79	;'O'
  1403  0295  3452               	retlw	82	;'R'
  1404  0296  340D               	retlw	13
  1405  0297  340A               	retlw	10
  1406  0298  3400               	retlw	0
  1407  0299                     STR_5:	
  1408  0299  3450               	retlw	80	;'P'
  1409  029A  3461               	retlw	97	;'a'
  1410  029B  3472               	retlw	114	;'r'
  1411  029C  3474               	retlw	116	;'t'
  1412  029D  3479               	retlw	121	;'y'
  1413  029E  340D               	retlw	13
  1414  029F  340A               	retlw	10
  1415  02A0  3400               	retlw	0
  1416  02A1                     STR_4:	
  1417  02A1  3458               	retlw	88	;'X'
  1418  02A2  346D               	retlw	109	;'m'
  1419  02A3  3461               	retlw	97	;'a'
  1420  02A4  3473               	retlw	115	;'s'
  1421  02A5  340D               	retlw	13
  1422  02A6  340A               	retlw	10
  1423  02A7  3400               	retlw	0
  1424  02A8                     __end_of__stringdata:	
  1425                           
  1426                           ; #config settings
  1427  0000                     
  1428                           	psect	cinit
  1429  0028                     start_initialization:	
  1430  0028                     __initialization:	
  1431                           
  1432                           ; Clear objects allocated to COMMON
  1433  0028  01FB               	clrf	__pbssCOMMON& (0+127)
  1434  0029  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
  1435  002A  01FD               	clrf	(__pbssCOMMON+2)& (0+127)
  1436                           
  1437                           ; Clear objects allocated to BANK0
  1438  002B  3020               	movlw	low __pbssBANK0
  1439  002C  0084               	movwf	4
  1440  002D  3000               	movlw	high __pbssBANK0
  1441  002E  0085               	movwf	5
  1442  002F  3039               	movlw	57
  1443  0030  2469               	fcall	clear_ram0
  1444  0031                     end_of_initialization:	
  1445                           ;End of C runtime variable initialization code
  1446                           
  1447  0031                     __end_of__initialization:	
  1448  0031  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  1449  0032  0020               	movlb	0
  1450  0033  2C49               	ljmp	_main	;jump to C main() function
  1451                           
  1452                           	psect	bssCOMMON
  1453  007B                     __pbssCOMMON:	
  1454  007B                     _LED_mode:	
  1455  007B                     	ds	1
  1456  007C                     _eusartRxCount:	
  1457  007C                     	ds	1
  1458  007D                     _eusartTxBufferRemaining:	
  1459  007D                     	ds	1
  1460                           
  1461                           	psect	bssBANK0
  1462  0020                     __pbssBANK0:	
  1463  0020                     _eusartRxBuffer:	
  1464  0020                     	ds	16
  1465  0030                     _eusartTxBuffer:	
  1466  0030                     	ds	8
  1467  0038                     _LED_color:	
  1468  0038                     	ds	3
  1469  003B                     _LED_currentColor:	
  1470  003B                     	ds	3
  1471  003E                     TMR1_ISR@CountCallBack:	
  1472  003E                     	ds	2
  1473  0040                     _timer1ReloadVal:	
  1474  0040                     	ds	2
  1475  0042                     LED_Task@ledOFF:	
  1476  0042                     	ds	1
  1477  0043                     UART_Task@UART_ReceiveState:	
  1478  0043                     	ds	1
  1479  0044                     UART_Task@receiveCounter:	
  1480  0044                     	ds	1
  1481  0045                     _eusartRxHead:	
  1482  0045                     	ds	1
  1483  0046                     _eusartRxTail:	
  1484  0046                     	ds	1
  1485  0047                     _eusartTxHead:	
  1486  0047                     	ds	1
  1487  0048                     _eusartTxTail:	
  1488  0048                     	ds	1
  1489  0049                     _inputCommand:	
  1490  0049                     	ds	16
  1491                           
  1492                           	psect	clrtext
  1493  0469                     clear_ram0:	
  1494                           ;	Called with FSR0 containing the base address, and
  1495                           ;	WREG with the size to clear
  1496                           
  1497  0469  0064               	clrwdt	;clear the watchdog before getting into this loop
  1498  046A                     clrloop0:	
  1499  046A  0180               	clrf	0	;clear RAM location pointed to by FSR
  1500  046B  3101               	addfsr 0,1
  1501  046C  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1502  046D  2C6A               	goto	clrloop0	;have we reached the end yet?
  1503  046E  3400               	retlw	0	;all done for this memory range, return
  1504                           
  1505                           	psect	cstackCOMMON
  1506  0070                     __pcstackCOMMON:	
  1507  0070                     ?_TMR1_ISR:	
  1508  0070                     ??_TMR1_ISR:	
  1509                           ; 0 bytes @ 0x0
  1510                           
  1511  0070                     ?_OSCILLATOR_Initialize:	
  1512                           ; 0 bytes @ 0x0
  1513                           
  1514  0070                     ??_OSCILLATOR_Initialize:	
  1515                           ; 0 bytes @ 0x0
  1516                           
  1517  0070                     ?_PIN_MANAGER_Initialize:	
  1518                           ; 0 bytes @ 0x0
  1519                           
  1520  0070                     ??_PIN_MANAGER_Initialize:	
  1521                           ; 0 bytes @ 0x0
  1522                           
  1523  0070                     ?_TMR1_Initialize:	
  1524                           ; 0 bytes @ 0x0
  1525                           
  1526  0070                     ??_TMR1_Initialize:	
  1527                           ; 0 bytes @ 0x0
  1528                           
  1529  0070                     ?_TMR1_StartTimer:	
  1530                           ; 0 bytes @ 0x0
  1531                           
  1532  0070                     ??_TMR1_StartTimer:	
  1533                           ; 0 bytes @ 0x0
  1534                           
  1535  0070                     ?_TMR1_CallBack:	
  1536                           ; 0 bytes @ 0x0
  1537                           
  1538  0070                     ??_TMR1_CallBack:	
  1539                           ; 0 bytes @ 0x0
  1540                           
  1541  0070                     ?_ledSendByte:	
  1542                           ; 0 bytes @ 0x0
  1543                           
  1544  0070                     ??_ledSendByte:	
  1545                           ; 0 bytes @ 0x0
  1546                           
  1547  0070                     ?_CMP1_Initialize:	
  1548                           ; 0 bytes @ 0x0
  1549                           
  1550  0070                     ??_CMP1_Initialize:	
  1551                           ; 0 bytes @ 0x0
  1552                           
  1553  0070                     ?_CMP1_ISR:	
  1554                           ; 0 bytes @ 0x0
  1555                           
  1556  0070                     ??_CMP1_ISR:	
  1557                           ; 0 bytes @ 0x0
  1558                           
  1559  0070                     ?_EUSART_Initialize:	
  1560                           ; 0 bytes @ 0x0
  1561                           
  1562  0070                     ??_EUSART_Initialize:	
  1563                           ; 0 bytes @ 0x0
  1564                           
  1565  0070                     ??_EUSART_Read:	
  1566                           ; 0 bytes @ 0x0
  1567                           
  1568  0070                     ?_EUSART_Write:	
  1569                           ; 0 bytes @ 0x0
  1570                           
  1571  0070                     ??_EUSART_Write:	
  1572                           ; 0 bytes @ 0x0
  1573                           
  1574  0070                     ?_EUSART_Transmit_ISR:	
  1575                           ; 0 bytes @ 0x0
  1576                           
  1577  0070                     ??_EUSART_Transmit_ISR:	
  1578                           ; 0 bytes @ 0x0
  1579                           
  1580  0070                     ?_EUSART_Receive_ISR:	
  1581                           ; 0 bytes @ 0x0
  1582                           
  1583  0070                     ??_EUSART_Receive_ISR:	
  1584                           ; 0 bytes @ 0x0
  1585                           
  1586  0070                     ?_UART_Task:	
  1587                           ; 0 bytes @ 0x0
  1588                           
  1589  0070                     ?_FVR_Initialize:	
  1590                           ; 0 bytes @ 0x0
  1591                           
  1592  0070                     ??_FVR_Initialize:	
  1593                           ; 0 bytes @ 0x0
  1594                           
  1595  0070                     ?_INTERRUPT_InterruptManager:	
  1596                           ; 0 bytes @ 0x0
  1597                           
  1598  0070                     ??_INTERRUPT_InterruptManager:	
  1599                           ; 0 bytes @ 0x0
  1600                           
  1601  0070                     ?_SYSTEM_Initialize:	
  1602                           ; 0 bytes @ 0x0
  1603                           
  1604  0070                     ??_SYSTEM_Initialize:	
  1605                           ; 0 bytes @ 0x0
  1606                           
  1607  0070                     ?_LED_Task:	
  1608                           ; 0 bytes @ 0x0
  1609                           
  1610  0070                     ?_main:	
  1611                           ; 0 bytes @ 0x0
  1612                           
  1613  0070                     ?_memset:	
  1614                           ; 0 bytes @ 0x0
  1615                           
  1616  0070                     ?_EUSART_Read:	
  1617                           ; 1 bytes @ 0x0
  1618                           
  1619  0070                     ?_strlen:	
  1620                           ; 1 bytes @ 0x0
  1621                           
  1622  0070                     ?_strcmp:	
  1623                           ; 2 bytes @ 0x0
  1624                           
  1625  0070                     EUSART_Read@readValue:	
  1626                           ; 2 bytes @ 0x0
  1627                           
  1628  0070                     EUSART_Write@txData:	
  1629                           ; 1 bytes @ 0x0
  1630                           
  1631  0070                     ledSendByte@data:	
  1632                           ; 1 bytes @ 0x0
  1633                           
  1634  0070                     memset@c:	
  1635                           ; 1 bytes @ 0x0
  1636                           
  1637  0070                     strcmp@s1:	
  1638                           ; 2 bytes @ 0x0
  1639                           
  1640  0070                     strlen@s:	
  1641                           ; 2 bytes @ 0x0
  1642                           
  1643                           
  1644                           ; 2 bytes @ 0x0
  1645  0070                     	ds	1
  1646  0071                     ledSendByte@i:	
  1647                           
  1648                           ; 1 bytes @ 0x1
  1649  0071                     	ds	1
  1650  0072                     ??_strlen:	
  1651  0072                     ??_LED_Task:	
  1652                           ; 0 bytes @ 0x2
  1653                           
  1654  0072                     strcmp@s2:	
  1655                           ; 0 bytes @ 0x2
  1656                           
  1657  0072                     LED_Task@i:	
  1658                           ; 1 bytes @ 0x2
  1659                           
  1660  0072                     memset@n:	
  1661                           ; 2 bytes @ 0x2
  1662                           
  1663  0072                     strlen@cp:	
  1664                           ; 2 bytes @ 0x2
  1665                           
  1666                           
  1667                           ; 2 bytes @ 0x2
  1668  0072                     	ds	1
  1669  0073                     ??_strcmp:	
  1670  0073                     strcmp@t0:	
  1671                           ; 0 bytes @ 0x3
  1672                           
  1673                           
  1674                           ; 1 bytes @ 0x3
  1675  0073                     	ds	1
  1676  0074                     ??_memset:	
  1677  0074                     ?_outputString:	
  1678                           ; 0 bytes @ 0x4
  1679                           
  1680  0074                     memset@p1:	
  1681                           ; 0 bytes @ 0x4
  1682                           
  1683  0074                     strcmp@t2:	
  1684                           ; 1 bytes @ 0x4
  1685                           
  1686  0074                     outputString@string:	
  1687                           ; 1 bytes @ 0x4
  1688                           
  1689  0074                     LED_Task@i_689:	
  1690                           ; 2 bytes @ 0x4
  1691                           
  1692                           
  1693                           ; 2 bytes @ 0x4
  1694  0074                     	ds	1
  1695  0075                     memset@p:	
  1696  0075                     strcmp@t1:	
  1697                           ; 1 bytes @ 0x5
  1698                           
  1699                           
  1700                           ; 1 bytes @ 0x5
  1701  0075                     	ds	1
  1702  0076                     ??_outputString:	
  1703  0076                     LED_Task@i_690:	
  1704                           ; 0 bytes @ 0x6
  1705                           
  1706                           
  1707                           ; 1 bytes @ 0x6
  1708  0076                     	ds	2
  1709  0078                     outputString@i:	
  1710                           
  1711                           ; 1 bytes @ 0x8
  1712  0078                     	ds	1
  1713  0079                     ??_UART_Task:	
  1714  0079                     UART_Task@receiveData:	
  1715                           ; 0 bytes @ 0x9
  1716                           
  1717                           
  1718                           ; 1 bytes @ 0x9
  1719  0079                     	ds	1
  1720  007A                     ??_main:	
  1721                           
  1722                           ; 0 bytes @ 0xA
  1723  007A                     	ds	1
  1724                           
  1725                           	psect	maintext
  1726  0449                     __pmaintext:	
  1727 ;;
  1728 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1729 ;;
  1730 ;; *************** function _main *****************
  1731 ;; Defined at:
  1732 ;;		line 54 in file "../src/main.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;		None
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;		None
  1737 ;; Return value:  Size  Location     Type
  1738 ;;		None               void
  1739 ;; Registers used:
  1740 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1741 ;; Tracked objects:
  1742 ;;		On entry : 17F/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMMON   BANK0   BANK1
  1746 ;;      Params:         0       0       0
  1747 ;;      Locals:         0       0       0
  1748 ;;      Temps:          1       0       0
  1749 ;;      Totals:         1       0       0
  1750 ;;Total ram usage:        1 bytes
  1751 ;; Hardware stack levels required when called:    6
  1752 ;; This function calls:
  1753 ;;		_LED_Task
  1754 ;;		_SYSTEM_Initialize
  1755 ;;		_UART_Task
  1756 ;; This function is called by:
  1757 ;;		Startup code after reset
  1758 ;; This function uses a non-reentrant model
  1759 ;;
  1760                           
  1761                           
  1762                           ;psect for function _main
  1763  0449                     _main:	
  1764                           
  1765                           ;main.c: 57: SYSTEM_Initialize();
  1766                           
  1767                           ;incstack = 0
  1768                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1769  0449  246F               	fcall	_SYSTEM_Initialize
  1770                           
  1771                           ;main.c: 60: (INTCONbits.GIE = 1);
  1772  044A  178B               	bsf	11,7	;volatile
  1773                           
  1774                           ;main.c: 63: (INTCONbits.PEIE = 1);
  1775  044B  170B               	bsf	11,6	;volatile
  1776  044C                     l1804:	
  1777                           
  1778                           ;main.c: 68: {
  1779                           ;main.c: 69: UART_Task();
  1780  044C  2034               	fcall	_UART_Task
  1781                           
  1782                           ;main.c: 70: LED_Task();
  1783  044D  22A8               	fcall	_LED_Task
  1784                           
  1785                           ;main.c: 71: _delay((unsigned long)((100)*(32000000/4000000.0)));
  1786  044E  30C7               	movlw	199
  1787  044F  00FA               	movwf	??_main
  1788  0450                     u987:	
  1789  0450  0000               	nop
  1790  0451  0BFA               	decfsz	??_main,f
  1791  0452  2C50               	goto	u987
  1792  0453  3200               	nop2	;nop
  1793  0454  0000               	nop
  1794  0455  2C4C               	goto	l1804
  1795  0456                     __end_of_main:	
  1796                           
  1797                           	psect	text1
  1798  0034                     __ptext1:	
  1799 ;; *************** function _UART_Task *****************
  1800 ;; Defined at:
  1801 ;;		line 235 in file "../src/mcc_generated_files/eusart.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;		None
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;  receiveData     1    9[COMMON] unsigned char 
  1806 ;; Return value:  Size  Location     Type
  1807 ;;		None               void
  1808 ;; Registers used:
  1809 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMMON   BANK0   BANK1
  1815 ;;      Params:         0       0       0
  1816 ;;      Locals:         1       0       0
  1817 ;;      Temps:          0       0       0
  1818 ;;      Totals:         1       0       0
  1819 ;;Total ram usage:        1 bytes
  1820 ;; Hardware stack levels used:    1
  1821 ;; Hardware stack levels required when called:    5
  1822 ;; This function calls:
  1823 ;;		_EUSART_Read
  1824 ;;		_EUSART_Write
  1825 ;;		_memset
  1826 ;;		_outputString
  1827 ;;		_strcmp
  1828 ;; This function is called by:
  1829 ;;		_main
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           
  1834                           ;psect for function _UART_Task
  1835  0034                     _UART_Task:	
  1836                           
  1837                           ;eusart.c: 237: uint8_t receiveData;
  1838                           ;eusart.c: 238: static UART_RECEIVE_STATE UART_ReceiveState = UART_IDEL;
  1839                           ;eusart.c: 239: static uint8_t receiveCounter;
  1840                           ;eusart.c: 241: if((eusartRxCount))
  1841                           
  1842                           ;incstack = 0
  1843                           ; Regs used in _UART_Task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1844  0034  087C               	movf	_eusartRxCount,w	;volatile
  1845  0035  1903               	btfsc	3,2
  1846  0036  0008               	return
  1847                           
  1848                           ;eusart.c: 242: {
  1849                           ;eusart.c: 243: receiveData = EUSART_Read();
  1850  0037  23AD               	fcall	_EUSART_Read
  1851  0038  00F9               	movwf	UART_Task@receiveData
  1852                           
  1853                           ;eusart.c: 244: EUSART_Write(receiveData);
  1854  0039  2362               	fcall	_EUSART_Write
  1855                           
  1856                           ;eusart.c: 247: switch(UART_ReceiveState)
  1857  003A  0020               	movlb	0	; select bank0
  1858  003B  0843               	movf	UART_Task@UART_ReceiveState,w
  1859                           
  1860                           ; Switch size 1, requested type "speed"
  1861                           ; Number of cases is 4, Range of values is 0 to 3
  1862                           ; switch strategies available:
  1863                           ; Name         Instructions Cycles
  1864                           ; direct_byte           14     6 (fixed)
  1865                           ; simple_byte           13     7 (average)
  1866                           ; jumptable            260     6 (fixed)
  1867                           ;	Chosen strategy is direct_byte
  1868  003C  0084               	movwf	4
  1869  003D  3004               	movlw	4
  1870  003E  0204               	subwf	4,w
  1871  003F  1803               	skipnc
  1872  0040  28B7               	goto	l1642
  1873  0041  3181               	movlp	high S1892
  1874  0042  3014               	movlw	low S1892
  1875  0043  0704               	addwf	4,w
  1876  0044  0082               	movwf	2
  1877  0045  0008               	return
  1878  0046                     l1594:	
  1879  0046  3010               	movlw	16
  1880                           
  1881                           ;eusart.c: 250: memset(inputCommand,0,16);
  1882  0047  01F0               	clrf	memset@c
  1883  0048  01F1               	clrf	memset@c+1
  1884  0049  00F2               	movwf	memset@n
  1885  004A  3049               	movlw	_inputCommand& (0+255)
  1886  004B  01F3               	clrf	memset@n+1
  1887  004C  2416               	fcall	_memset
  1888                           
  1889                           ;eusart.c: 252: if(receiveData == 'S')
  1890  004D  0879               	movf	UART_Task@receiveData,w
  1891  004E  3A53               	xorlw	83
  1892  004F  1D03               	skipz
  1893  0050  285D               	goto	l1604
  1894                           
  1895                           ;eusart.c: 253: {
  1896                           ;eusart.c: 254: UART_ReceiveState = UART_PROCESS_SET_COMMAND;
  1897  0051  0020               	movlb	0	; select bank0
  1898  0052  3053               	movlw	83
  1899  0053  01C3               	clrf	UART_Task@UART_ReceiveState
  1900  0054  0AC3               	incf	UART_Task@UART_ReceiveState,f
  1901                           
  1902                           ;eusart.c: 255: inputCommand[0] = 'S';
  1903  0055  285A               	goto	L2
  1904  0056                     l1606:	
  1905                           
  1906                           ;eusart.c: 259: {
  1907                           ;eusart.c: 260: UART_ReceiveState = UART_PROCESS_GET_COMMAND;
  1908  0056  3002               	movlw	2
  1909  0057  0020               	movlb	0	; select bank0
  1910  0058  00C3               	movwf	UART_Task@UART_ReceiveState
  1911                           
  1912                           ;eusart.c: 261: inputCommand[0] = 'G';
  1913  0059  3047               	movlw	71
  1914  005A                     L2:	
  1915  005A  00C9               	movwf	_inputCommand
  1916                           
  1917                           ;eusart.c: 256: receiveCounter = 0;
  1918  005B  01C4               	clrf	UART_Task@receiveCounter
  1919                           
  1920                           ;eusart.c: 257: }
  1921  005C  0008               	return
  1922  005D                     l1604:	
  1923                           
  1924                           ;eusart.c: 258: else if(receiveData == 'G')
  1925  005D  0879               	movf	UART_Task@receiveData,w
  1926  005E  3A47               	xorlw	71
  1927  005F  1903               	btfsc	3,2
  1928  0060  2856               	goto	l1606
  1929                           
  1930                           ;eusart.c: 264: else if (receiveData == '\r'||receiveData =='\n')
  1931  0061  0879               	movf	UART_Task@receiveData,w
  1932  0062  3A0D               	xorlw	13
  1933  0063  1903               	skipnz
  1934  0064  0008               	return
  1935  0065  0879               	movf	UART_Task@receiveData,w
  1936  0066  3A0A               	xorlw	10
  1937  0067  1903               	btfsc	3,2
  1938  0068  0008               	return
  1939                           
  1940                           ;eusart.c: 268: else
  1941                           ;eusart.c: 269: {
  1942                           ;eusart.c: 270: UART_ReceiveState = UART_PROCESS_TRASH;
  1943  0069  3003               	movlw	3
  1944  006A  0020               	movlb	0	; select bank0
  1945  006B  00C3               	movwf	UART_Task@UART_ReceiveState
  1946  006C  0008               	return
  1947  006D                     l1616:	
  1948                           ;eusart.c: 271: }
  1949                           ;eusart.c: 272: break;
  1950                           
  1951                           
  1952                           ;eusart.c: 274: inputCommand[++receiveCounter] = receiveData;
  1953  006D  0AC4               	incf	UART_Task@receiveCounter,f
  1954  006E  0844               	movf	UART_Task@receiveCounter,w
  1955  006F  3E49               	addlw	_inputCommand& (0+255)
  1956  0070  0086               	movwf	6
  1957  0071  0187               	clrf	7
  1958  0072  0879               	movf	UART_Task@receiveData,w
  1959  0073  0081               	movwf	1
  1960                           
  1961                           ;eusart.c: 275: if(receiveData == '\n')
  1962  0074  0879               	movf	UART_Task@receiveData,w
  1963  0075  3A0A               	xorlw	10
  1964  0076  1D03               	skipz
  1965  0077  0008               	return
  1966                           
  1967                           ;eusart.c: 276: {
  1968                           ;eusart.c: 277: if(strcmp(CMD_GET_STATE,inputCommand)==0)
  1969  0078  301F               	movlw	low (_CMD_GET_STATE| (0+32768))
  1970  0079  00F0               	movwf	strcmp@s1
  1971  007A  3082               	movlw	high (_CMD_GET_STATE| (0+32768))
  1972  007B  00F1               	movwf	strcmp@s1+1
  1973  007C  3049               	movlw	_inputCommand& (0+255)
  1974  007D  00F2               	movwf	strcmp@s2
  1975  007E  2306               	fcall	_strcmp
  1976  007F  0871               	movf	?_strcmp+1,w
  1977  0080  0470               	iorwf	?_strcmp,w
  1978  0081  1903               	btfsc	3,2
  1979  0082  289C               	goto	l1638
  1980  0083  28FC               	goto	L4
  1981  0084                     l1624:	
  1982                           
  1983                           ;eusart.c: 282: outputString("LED is OFF\r\n");
  1984  0084  3073               	movlw	low (STR_1| (0+32768))
  1985  0085  00F4               	movwf	outputString@string
  1986  0086  3082               	movlw	high (STR_1| (0+32768))
  1987  0087  28B5               	goto	L3
  1988  0088                     l1626:	
  1989                           ;eusart.c: 283: break;
  1990                           
  1991                           
  1992                           ;eusart.c: 285: outputString("Direct color\r\n");
  1993  0088  3064               	movlw	low (STR_2| (0+32768))
  1994  0089  00F4               	movwf	outputString@string
  1995  008A  3082               	movlw	high (STR_2| (0+32768))
  1996  008B  28B5               	goto	L3
  1997  008C                     l1628:	
  1998                           ;eusart.c: 286: break;
  1999                           
  2000                           
  2001                           ;eusart.c: 288: outputString("Starry\r\n");
  2002  008C  3080               	movlw	low (STR_3| (0+32768))
  2003  008D  00F4               	movwf	outputString@string
  2004  008E  3082               	movlw	high (STR_3| (0+32768))
  2005  008F  28B5               	goto	L3
  2006  0090                     l1630:	
  2007                           ;eusart.c: 289: break;
  2008                           
  2009                           
  2010                           ;eusart.c: 291: outputString("Xmas\r\n");
  2011  0090  30A1               	movlw	low (STR_4| (0+32768))
  2012  0091  00F4               	movwf	outputString@string
  2013  0092  3082               	movlw	high (STR_4| (0+32768))
  2014  0093  28B5               	goto	L3
  2015  0094                     l1632:	
  2016                           ;eusart.c: 292: break;
  2017                           
  2018                           
  2019                           ;eusart.c: 294: outputString("Party\r\n");
  2020  0094  3099               	movlw	low (STR_5| (0+32768))
  2021  0095  00F4               	movwf	outputString@string
  2022  0096  3082               	movlw	high (STR_5| (0+32768))
  2023  0097  28B5               	goto	L3
  2024  0098                     l1634:	
  2025                           ;eusart.c: 295: break;
  2026                           
  2027                           
  2028                           ;eusart.c: 297: outputString("ERROR\r\n");
  2029  0098  3091               	movlw	low (STR_6| (0+32768))
  2030  0099  00F4               	movwf	outputString@string
  2031  009A  3082               	movlw	high (STR_6| (0+32768))
  2032  009B  28B5               	goto	L3
  2033  009C                     l1638:	
  2034                           ;eusart.c: 298: break;
  2035                           
  2036  009C  087B               	movf	_LED_mode,w
  2037                           
  2038                           ; Switch size 1, requested type "speed"
  2039                           ; Number of cases is 5, Range of values is 0 to 4
  2040                           ; switch strategies available:
  2041                           ; Name         Instructions Cycles
  2042                           ; direct_byte           16     6 (fixed)
  2043                           ; simple_byte           16     9 (average)
  2044                           ; jumptable            260     6 (fixed)
  2045                           ;	Chosen strategy is direct_byte
  2046  009D  0084               	movwf	4
  2047  009E  3005               	movlw	5
  2048  009F  0204               	subwf	4,w
  2049  00A0  1803               	skipnc
  2050  00A1  2898               	goto	l1634
  2051  00A2  3181               	movlp	high S1890
  2052  00A3  300A               	movlw	low S1890
  2053  00A4  0704               	addwf	4,w
  2054  00A5  0082               	movwf	2
  2055  00A6  28FC               	goto	L4
  2056  00A7                     l1650:	
  2057                           ;eusart.c: 301: else
  2058                           ;eusart.c: 302: {
  2059                           ;eusart.c: 303: outputString("Invalid Command \r\n");
  2060                           
  2061                           
  2062                           ;eusart.c: 313: {
  2063                           ;eusart.c: 314: LED_mode = LED_OFF;
  2064  00A7  01FB               	clrf	_LED_mode
  2065  00A8  28B2               	goto	L5
  2066  00A9                     l1656:	
  2067                           ;eusart.c: 316: }
  2068                           
  2069                           ;eusart.c: 315: outputString("DONE!\r\n");
  2070                           
  2071                           
  2072                           ;eusart.c: 318: {
  2073                           ;eusart.c: 319: LED_mode = LED_DIRECT;
  2074  00A9  01FB               	clrf	_LED_mode
  2075  00AA  0AFB               	incf	_LED_mode,f
  2076  00AB  28B2               	goto	L5
  2077  00AC                     l1662:	
  2078                           ;eusart.c: 321: }
  2079                           
  2080                           ;eusart.c: 320: outputString("DONE!\r\n");
  2081                           
  2082                           
  2083                           ;eusart.c: 323: {
  2084                           ;eusart.c: 324: LED_mode = LED_STARRY;
  2085  00AC  3002               	movlw	2
  2086  00AD  28B1               	goto	L6
  2087  00AE                     l1668:	
  2088                           ;eusart.c: 326: }
  2089                           
  2090                           ;eusart.c: 325: outputString("DONE!\r\n");
  2091                           
  2092                           
  2093                           ;eusart.c: 328: {
  2094                           ;eusart.c: 329: LED_mode = LED_XMAS;
  2095  00AE  3003               	movlw	3
  2096  00AF  28B1               	goto	L6
  2097  00B0                     l1674:	
  2098                           ;eusart.c: 331: }
  2099                           
  2100                           ;eusart.c: 330: outputString("DONE!\r\n");
  2101                           
  2102                           
  2103                           ;eusart.c: 333: {
  2104                           ;eusart.c: 334: LED_mode = LED_PARTY;
  2105  00B0  3004               	movlw	4
  2106  00B1                     L6:	
  2107  00B1  00FB               	movwf	_LED_mode
  2108  00B2                     L5:	
  2109                           
  2110                           ;eusart.c: 335: outputString("DONE!\r\n");
  2111  00B2  3089               	movlw	low (STR_8| (0+32768))
  2112  00B3  00F4               	movwf	outputString@string
  2113  00B4  3082               	movlw	high (STR_8| (0+32768))
  2114  00B5                     L3:	
  2115  00B5  00F5               	movwf	outputString@string+1
  2116  00B6  2342               	fcall	_outputString
  2117  00B7                     l1642:	
  2118                           ;eusart.c: 336: }
  2119                           
  2120                           
  2121                           ;eusart.c: 304: }
  2122                           ;eusart.c: 305: UART_ReceiveState = UART_IDEL;
  2123  00B7  0020               	movlb	0	; select bank0
  2124  00B8  01C3               	clrf	UART_Task@UART_ReceiveState
  2125  00B9  0008               	return
  2126  00BA                     l1644:	
  2127                           
  2128                           ;eusart.c: 309: inputCommand[++receiveCounter] = receiveData;
  2129  00BA  0AC4               	incf	UART_Task@receiveCounter,f
  2130  00BB  0844               	movf	UART_Task@receiveCounter,w
  2131  00BC  3E49               	addlw	_inputCommand& (0+255)
  2132  00BD  0086               	movwf	6
  2133  00BE  0187               	clrf	7
  2134  00BF  0879               	movf	UART_Task@receiveData,w
  2135  00C0  0081               	movwf	1
  2136                           
  2137                           ;eusart.c: 310: if(receiveData == '\n')
  2138  00C1  0879               	movf	UART_Task@receiveData,w
  2139  00C2  3A0A               	xorlw	10
  2140  00C3  1D03               	skipz
  2141  00C4  0008               	return
  2142                           
  2143                           ;eusart.c: 311: {
  2144                           ;eusart.c: 312: if(strcmp(CMD_SET_OFF,inputCommand)==0)
  2145  00C5  303B               	movlw	low (_CMD_SET_OFF| (0+32768))
  2146  00C6  00F0               	movwf	strcmp@s1
  2147  00C7  3082               	movlw	high (_CMD_SET_OFF| (0+32768))
  2148  00C8  00F1               	movwf	strcmp@s1+1
  2149  00C9  3049               	movlw	_inputCommand& (0+255)
  2150  00CA  00F2               	movwf	strcmp@s2
  2151  00CB  2306               	fcall	_strcmp
  2152  00CC  0871               	movf	?_strcmp+1,w
  2153  00CD  0470               	iorwf	?_strcmp,w
  2154  00CE  1903               	btfsc	3,2
  2155  00CF  28A7               	goto	l1650
  2156                           
  2157                           ;eusart.c: 317: else if(strcmp(CMD_SET_COLOR,inputCommand)==0)
  2158  00D0  3048               	movlw	low (_CMD_SET_COLOR| (0+32768))
  2159  00D1  00F0               	movwf	strcmp@s1
  2160  00D2  3082               	movlw	high (_CMD_SET_COLOR| (0+32768))
  2161  00D3  00F1               	movwf	strcmp@s1+1
  2162  00D4  3049               	movlw	_inputCommand& (0+255)
  2163  00D5  00F2               	movwf	strcmp@s2
  2164  00D6  2306               	fcall	_strcmp
  2165  00D7  0871               	movf	?_strcmp+1,w
  2166  00D8  0470               	iorwf	?_strcmp,w
  2167  00D9  1903               	btfsc	3,2
  2168  00DA  28A9               	goto	l1656
  2169                           
  2170                           ;eusart.c: 322: else if(strcmp(CMD_SET_STARRY,inputCommand)==0)
  2171  00DB  3000               	movlw	low (_CMD_SET_STARRY| (0+32768))
  2172  00DC  00F0               	movwf	strcmp@s1
  2173  00DD  3082               	movlw	high (_CMD_SET_STARRY| (0+32768))
  2174  00DE  00F1               	movwf	strcmp@s1+1
  2175  00DF  3049               	movlw	_inputCommand& (0+255)
  2176  00E0  00F2               	movwf	strcmp@s2
  2177  00E1  2306               	fcall	_strcmp
  2178  00E2  0871               	movf	?_strcmp+1,w
  2179  00E3  0470               	iorwf	?_strcmp,w
  2180  00E4  1903               	btfsc	3,2
  2181  00E5  28AC               	goto	l1662
  2182                           
  2183                           ;eusart.c: 327: else if(strcmp(CMD_SET_XMAS,inputCommand)==0)
  2184  00E6  302D               	movlw	low (_CMD_SET_XMAS| (0+32768))
  2185  00E7  00F0               	movwf	strcmp@s1
  2186  00E8  3082               	movlw	high (_CMD_SET_XMAS| (0+32768))
  2187  00E9  00F1               	movwf	strcmp@s1+1
  2188  00EA  3049               	movlw	_inputCommand& (0+255)
  2189  00EB  00F2               	movwf	strcmp@s2
  2190  00EC  2306               	fcall	_strcmp
  2191  00ED  0871               	movf	?_strcmp+1,w
  2192  00EE  0470               	iorwf	?_strcmp,w
  2193  00EF  1903               	btfsc	3,2
  2194  00F0  28AE               	goto	l1668
  2195                           
  2196                           ;eusart.c: 332: else if(strcmp(CMD_SET_PARTY,inputCommand)==0)
  2197  00F1  3010               	movlw	low (_CMD_SET_PARTY| (0+32768))
  2198  00F2  00F0               	movwf	strcmp@s1
  2199  00F3  3082               	movlw	high (_CMD_SET_PARTY| (0+32768))
  2200  00F4  00F1               	movwf	strcmp@s1+1
  2201  00F5  3049               	movlw	_inputCommand& (0+255)
  2202  00F6  00F2               	movwf	strcmp@s2
  2203  00F7  2306               	fcall	_strcmp
  2204  00F8  0871               	movf	?_strcmp+1,w
  2205  00F9  0470               	iorwf	?_strcmp,w
  2206  00FA  1903               	btfsc	3,2
  2207  00FB  28B0               	goto	l1674
  2208  00FC                     L4:	
  2209                           
  2210                           ;eusart.c: 337: else
  2211                           ;eusart.c: 338: {
  2212                           ;eusart.c: 339: outputString("Invalid Command \r\n");
  2213  00FC  3051               	movlw	low (STR_7| (0+32768))
  2214  00FD  00F4               	movwf	outputString@string
  2215  00FE  3082               	movlw	high (STR_7| (0+32768))
  2216  00FF  28B5               	goto	L3
  2217  0100                     l1682:	
  2218                           
  2219                           ;eusart.c: 346: if(receiveData == '\n')
  2220  0100  0879               	movf	UART_Task@receiveData,w
  2221  0101  3A0A               	xorlw	10
  2222  0102  1D03               	skipz
  2223  0103  0008               	return
  2224  0104  3051               	movlw	low (STR_7| (0+32768))
  2225                           
  2226                           ;eusart.c: 347: {
  2227                           ;eusart.c: 348: UART_ReceiveState = UART_IDEL;
  2228  0105  01C3               	clrf	UART_Task@UART_ReceiveState
  2229                           
  2230                           ;eusart.c: 349: outputString("Invalid Command \r\n");
  2231  0106  00F4               	movwf	outputString@string
  2232  0107  3082               	movlw	high (STR_7| (0+32768))
  2233  0108  00F5               	movwf	outputString@string+1
  2234  0109  2B42               	ljmp	l1484
  2235  010A                     __end_of_UART_Task:	
  2236                           
  2237                           	psect	swtext1
  2238  010A                     __pswtext1:	
  2239  010A                     S1890:	
  2240  010A  2884               	ljmp	l1624
  2241  010B  2888               	ljmp	l1626
  2242  010C  288C               	ljmp	l1628
  2243  010D  2890               	ljmp	l1630
  2244  010E  2894               	ljmp	l1632
  2245                           
  2246                           	psect	swtext2
  2247  0114                     __pswtext2:	
  2248  0114                     S1892:	
  2249  0114  2846               	ljmp	l1594
  2250  0115  28BA               	ljmp	l1644
  2251  0116  286D               	ljmp	l1616
  2252  0117  2900               	ljmp	l1682
  2253                           
  2254                           	psect	text2
  2255  0306                     __ptext2:	
  2256 ;; *************** function _strcmp *****************
  2257 ;; Defined at:
  2258 ;;		line 5 in file "/Applications/microchip/xc8/v1.33/sources/common/strcmp.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;  s1              2    0[COMMON] PTR const unsigned char 
  2261 ;;		 -> CMD_SET_PARTY(15), CMD_SET_XMAS(14), CMD_SET_STARRY(16), CMD_SET_COLOR(9), 
  2262 ;;		 -> CMD_SET_OFF(13), CMD_GET_STATE(14), 
  2263 ;;  s2              1    2[COMMON] PTR const unsigned char 
  2264 ;;		 -> inputCommand(16), 
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;  t1              1    5[COMMON] unsigned char 
  2267 ;;  t2              1    4[COMMON] unsigned char 
  2268 ;;  t0              1    3[COMMON] unsigned char 
  2269 ;; Return value:  Size  Location     Type
  2270 ;;                  2    0[COMMON] int 
  2271 ;; Registers used:
  2272 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  2273 ;; Tracked objects:
  2274 ;;		On entry : 0/0
  2275 ;;		On exit  : 0/0
  2276 ;;		Unchanged: 0/0
  2277 ;; Data sizes:     COMMON   BANK0   BANK1
  2278 ;;      Params:         3       0       0
  2279 ;;      Locals:         3       0       0
  2280 ;;      Temps:          0       0       0
  2281 ;;      Totals:         6       0       0
  2282 ;;Total ram usage:        6 bytes
  2283 ;; Hardware stack levels used:    1
  2284 ;; Hardware stack levels required when called:    3
  2285 ;; This function calls:
  2286 ;;		Nothing
  2287 ;; This function is called by:
  2288 ;;		_UART_Task
  2289 ;; This function uses a non-reentrant model
  2290 ;;
  2291                           
  2292                           
  2293                           ;psect for function _strcmp
  2294  0306                     _strcmp:	
  2295  0306                     l1500:	
  2296                           ;incstack = 0
  2297                           ; Regs used in _strcmp: [wreg-fsr1h+status,2+status,0+pclath]
  2298                           
  2299  0306  0870               	movf	strcmp@s1,w
  2300  0307  0084               	movwf	4
  2301  0308  0871               	movf	strcmp@s1+1,w
  2302  0309  0085               	movwf	5
  2303  030A  0800               	movf	0,w	;code access
  2304  030B  00F3               	movwf	strcmp@t0
  2305  030C  0872               	movf	strcmp@s2,w
  2306  030D  0086               	movwf	6
  2307  030E  0187               	clrf	7
  2308  030F  0801               	movf	1,w
  2309  0310  00F5               	movwf	strcmp@t1
  2310  0311  08F3               	movf	strcmp@t0,f
  2311  0312  1903               	btfsc	3,2
  2312  0313  2B3A               	goto	l1532
  2313  0314  3002               	movlw	2
  2314  0315  07F0               	addwf	strcmp@s1,f
  2315  0316  1803               	skipnc
  2316  0317  0AF1               	incf	strcmp@s1+1,f
  2317  0318  0873               	movf	strcmp@t0,w
  2318  0319  0675               	xorwf	strcmp@t1,w
  2319  031A  1D03               	btfss	3,2
  2320  031B  2B3A               	goto	l1532
  2321  031C  30FF               	movlw	255
  2322  031D  0770               	addwf	strcmp@s1,w
  2323  031E  0084               	movwf	4
  2324  031F  30FF               	movlw	255
  2325  0320  3D71               	addwfc	strcmp@s1+1,w
  2326  0321  0085               	movwf	5
  2327  0322  0800               	movf	0,w	;code access
  2328  0323  00F4               	movwf	strcmp@t2
  2329  0324  0872               	movf	strcmp@s2,w
  2330  0325  0086               	movwf	6
  2331  0326  3F41               	moviw [1]fsr1
  2332  0327  00F5               	movwf	strcmp@t1
  2333  0328  08F4               	movf	strcmp@t2,f
  2334  0329  1D03               	skipz
  2335  032A  2B33               	goto	l1522
  2336  032B                     l1518:	
  2337  032B  0874               	movf	strcmp@t2,w
  2338  032C  00F0               	movwf	?_strcmp
  2339  032D  01F1               	clrf	?_strcmp+1
  2340  032E  0875               	movf	strcmp@t1,w
  2341  032F  02F0               	subwf	?_strcmp,f
  2342  0330  1C03               	skipc
  2343  0331  03F1               	decf	?_strcmp+1,f
  2344  0332  0008               	return
  2345  0333                     l1522:	
  2346  0333  0AF2               	incf	strcmp@s2,f
  2347  0334  0AF2               	incf	strcmp@s2,f
  2348  0335  0875               	movf	strcmp@t1,w
  2349  0336  0674               	xorwf	strcmp@t2,w
  2350  0337  1D03               	btfss	3,2
  2351  0338  2B2B               	goto	l1518
  2352  0339  2B06               	goto	l1500
  2353  033A                     l1532:	
  2354  033A  0873               	movf	strcmp@t0,w
  2355  033B  00F0               	movwf	?_strcmp
  2356  033C  01F1               	clrf	?_strcmp+1
  2357  033D  0875               	movf	strcmp@t1,w
  2358  033E  02F0               	subwf	?_strcmp,f
  2359  033F  1C03               	skipc
  2360  0340  03F1               	decf	?_strcmp+1,f
  2361  0341  0008               	return
  2362  0342                     __end_of_strcmp:	
  2363                           
  2364                           	psect	text3
  2365  0342                     __ptext3:	
  2366 ;; *************** function _outputString *****************
  2367 ;; Defined at:
  2368 ;;		line 228 in file "../src/mcc_generated_files/eusart.c"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;  string          2    4[COMMON] PTR const unsigned char 
  2371 ;;		 -> STR_14(19), STR_13(19), STR_12(8), STR_11(8), 
  2372 ;;		 -> STR_10(8), STR_9(8), STR_8(8), STR_7(19), 
  2373 ;;		 -> STR_6(8), STR_5(8), STR_4(7), STR_3(9), 
  2374 ;;		 -> STR_2(15), STR_1(13), 
  2375 ;; Auto vars:     Size  Location     Type
  2376 ;;  i               1    8[COMMON] unsigned char 
  2377 ;; Return value:  Size  Location     Type
  2378 ;;		None               void
  2379 ;; Registers used:
  2380 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMMON   BANK0   BANK1
  2386 ;;      Params:         2       0       0
  2387 ;;      Locals:         1       0       0
  2388 ;;      Temps:          2       0       0
  2389 ;;      Totals:         5       0       0
  2390 ;;Total ram usage:        5 bytes
  2391 ;; Hardware stack levels used:    1
  2392 ;; Hardware stack levels required when called:    4
  2393 ;; This function calls:
  2394 ;;		_EUSART_Write
  2395 ;;		_strlen
  2396 ;; This function is called by:
  2397 ;;		_UART_Task
  2398 ;; This function uses a non-reentrant model
  2399 ;;
  2400                           
  2401                           
  2402                           ;psect for function _outputString
  2403  0342                     _outputString:	
  2404  0342                     l1484:	
  2405                           ;incstack = 0
  2406                           ; Regs used in _outputString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2407                           
  2408                           
  2409                           ;eusart.c: 230: for(uint8_t i =0;i<strlen(string);i++)
  2410  0342  01F8               	clrf	outputString@i
  2411  0343                     l1490:	
  2412  0343  0875               	movf	outputString@string+1,w
  2413  0344  00F1               	movwf	strlen@s+1
  2414  0345  0874               	movf	outputString@string,w
  2415  0346  00F0               	movwf	strlen@s
  2416  0347  2396               	fcall	_strlen
  2417  0348  0878               	movf	outputString@i,w
  2418  0349  00F6               	movwf	??_outputString
  2419  034A  01F7               	clrf	??_outputString+1
  2420  034B  0871               	movf	?_strlen+1,w
  2421  034C  0277               	subwf	??_outputString+1,w
  2422  034D  1D03               	skipz
  2423  034E  2B51               	goto	u565
  2424  034F  0870               	movf	?_strlen,w
  2425  0350  0276               	subwf	??_outputString,w
  2426  0351                     u565:	
  2427  0351  1803               	btfsc	3,0
  2428  0352  0008               	return
  2429                           
  2430                           ;eusart.c: 231: {
  2431                           ;eusart.c: 232: EUSART_Write(string[i]);
  2432  0353  0875               	movf	outputString@string+1,w
  2433  0354  00F7               	movwf	??_outputString+1
  2434  0355  0874               	movf	outputString@string,w
  2435  0356  00F6               	movwf	??_outputString
  2436  0357  0878               	movf	outputString@i,w
  2437  0358  0776               	addwf	??_outputString,w
  2438  0359  0084               	movwf	4
  2439  035A  0877               	movf	??_outputString+1,w
  2440  035B  1803               	skipnc
  2441  035C  0A77               	incf	??_outputString+1,w
  2442  035D  0085               	movwf	5
  2443  035E  0800               	movf	0,w	;code access
  2444  035F  2362               	fcall	_EUSART_Write
  2445  0360  0AF8               	incf	outputString@i,f
  2446  0361  2B43               	goto	l1490
  2447  0362                     __end_of_outputString:	
  2448                           
  2449                           	psect	text4
  2450  0396                     __ptext4:	
  2451 ;; *************** function _strlen *****************
  2452 ;; Defined at:
  2453 ;;		line 4 in file "/Applications/microchip/xc8/v1.33/sources/common/strlen.c"
  2454 ;; Parameters:    Size  Location     Type
  2455 ;;  s               2    0[COMMON] PTR const unsigned char 
  2456 ;;		 -> STR_14(19), STR_13(19), STR_12(8), STR_11(8), 
  2457 ;;		 -> STR_10(8), STR_9(8), STR_8(8), STR_7(19), 
  2458 ;;		 -> STR_6(8), STR_5(8), STR_4(7), STR_3(9), 
  2459 ;;		 -> STR_2(15), STR_1(13), 
  2460 ;; Auto vars:     Size  Location     Type
  2461 ;;  cp              2    2[COMMON] PTR const unsigned char 
  2462 ;;		 -> STR_14(19), STR_13(19), STR_12(8), STR_11(8), 
  2463 ;;		 -> STR_10(8), STR_9(8), STR_8(8), STR_7(19), 
  2464 ;;		 -> STR_6(8), STR_5(8), STR_4(7), STR_3(9), 
  2465 ;;		 -> STR_2(15), STR_1(13), 
  2466 ;; Return value:  Size  Location     Type
  2467 ;;                  2    0[COMMON] unsigned int 
  2468 ;; Registers used:
  2469 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2470 ;; Tracked objects:
  2471 ;;		On entry : 0/0
  2472 ;;		On exit  : 0/0
  2473 ;;		Unchanged: 0/0
  2474 ;; Data sizes:     COMMON   BANK0   BANK1
  2475 ;;      Params:         2       0       0
  2476 ;;      Locals:         2       0       0
  2477 ;;      Temps:          0       0       0
  2478 ;;      Totals:         4       0       0
  2479 ;;Total ram usage:        4 bytes
  2480 ;; Hardware stack levels used:    1
  2481 ;; Hardware stack levels required when called:    3
  2482 ;; This function calls:
  2483 ;;		Nothing
  2484 ;; This function is called by:
  2485 ;;		_outputString
  2486 ;; This function uses a non-reentrant model
  2487 ;;
  2488                           
  2489                           
  2490                           ;psect for function _strlen
  2491  0396                     _strlen:	
  2492                           
  2493                           ;incstack = 0
  2494                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+pclath]
  2495  0396  0871               	movf	strlen@s+1,w
  2496  0397  00F3               	movwf	strlen@cp+1
  2497  0398  0870               	movf	strlen@s,w
  2498  0399  00F2               	movwf	strlen@cp
  2499  039A                     l1442:	
  2500  039A  0872               	movf	strlen@cp,w
  2501  039B  0084               	movwf	4
  2502  039C  0873               	movf	strlen@cp+1,w
  2503  039D  0085               	movwf	5
  2504  039E  0800               	movf	0,w	;code access
  2505  039F  3800               	iorlw	0
  2506  03A0  1903               	btfsc	3,2
  2507  03A1  2BA6               	goto	l1444
  2508  03A2  0AF2               	incf	strlen@cp,f
  2509  03A3  1903               	skipnz
  2510  03A4  0AF3               	incf	strlen@cp+1,f
  2511  03A5  2B9A               	goto	l1442
  2512  03A6                     l1444:	
  2513  03A6  0870               	movf	strlen@s,w
  2514  03A7  0272               	subwf	strlen@cp,w
  2515  03A8  00F0               	movwf	?_strlen
  2516  03A9  0871               	movf	strlen@s+1,w
  2517  03AA  3B73               	subwfb	strlen@cp+1,w
  2518  03AB  00F1               	movwf	?_strlen+1
  2519  03AC  0008               	return
  2520  03AD                     __end_of_strlen:	
  2521                           
  2522                           	psect	text5
  2523  0362                     __ptext5:	
  2524 ;; *************** function _EUSART_Write *****************
  2525 ;; Defined at:
  2526 ;;		line 157 in file "../src/mcc_generated_files/eusart.c"
  2527 ;; Parameters:    Size  Location     Type
  2528 ;;  txData          1    wreg     unsigned char 
  2529 ;; Auto vars:     Size  Location     Type
  2530 ;;  txData          1    0[COMMON] unsigned char 
  2531 ;; Return value:  Size  Location     Type
  2532 ;;		None               void
  2533 ;; Registers used:
  2534 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2535 ;; Tracked objects:
  2536 ;;		On entry : 0/1
  2537 ;;		On exit  : 1F/1
  2538 ;;		Unchanged: 0/0
  2539 ;; Data sizes:     COMMON   BANK0   BANK1
  2540 ;;      Params:         0       0       0
  2541 ;;      Locals:         1       0       0
  2542 ;;      Temps:          0       0       0
  2543 ;;      Totals:         1       0       0
  2544 ;;Total ram usage:        1 bytes
  2545 ;; Hardware stack levels used:    1
  2546 ;; Hardware stack levels required when called:    3
  2547 ;; This function calls:
  2548 ;;		Nothing
  2549 ;; This function is called by:
  2550 ;;		_outputString
  2551 ;;		_UART_Task
  2552 ;; This function uses a non-reentrant model
  2553 ;;
  2554                           
  2555                           
  2556                           ;psect for function _EUSART_Write
  2557  0362                     _EUSART_Write:	
  2558                           
  2559                           ;incstack = 0
  2560                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  2561                           ;EUSART_Write@txData stored from wreg
  2562  0362  00F0               	movwf	EUSART_Write@txData
  2563  0363                     l88:	
  2564                           ;eusart.c: 160: {
  2565                           
  2566  0363  087D               	movf	_eusartTxBufferRemaining,w	;volatile
  2567  0364  1903               	btfsc	3,2
  2568  0365  2B63               	goto	l88
  2569                           
  2570                           ;eusart.c: 161: }
  2571                           ;eusart.c: 163: if(0 == PIE1bits.TXIE)
  2572  0366  0021               	movlb	1	; select bank1
  2573  0367  1A11               	btfsc	17,4	;volatile
  2574  0368  2B6D               	goto	l91
  2575                           
  2576                           ;eusart.c: 164: {
  2577                           ;eusart.c: 165: TXREG = txData;
  2578  0369  0870               	movf	EUSART_Write@txData,w
  2579  036A  0023               	movlb	3	; select bank3
  2580  036B  009A               	movwf	26	;volatile
  2581                           
  2582                           ;eusart.c: 166: }
  2583  036C  2B7B               	goto	l1436
  2584  036D                     l91:	
  2585                           
  2586                           ;eusart.c: 167: else
  2587                           ;eusart.c: 168: {
  2588                           ;eusart.c: 169: PIE1bits.TXIE = 0;
  2589  036D  1211               	bcf	17,4	;volatile
  2590                           
  2591                           ;eusart.c: 170: eusartTxBuffer[eusartTxHead++] = txData;
  2592  036E  0020               	movlb	0	; select bank0
  2593  036F  0847               	movf	_eusartTxHead,w
  2594  0370  3E30               	addlw	_eusartTxBuffer& (0+255)
  2595  0371  0086               	movwf	6
  2596  0372  0187               	clrf	7
  2597  0373  0870               	movf	EUSART_Write@txData,w
  2598  0374  0081               	movwf	1
  2599  0375  3008               	movlw	8
  2600  0376  0AC7               	incf	_eusartTxHead,f
  2601                           
  2602                           ;eusart.c: 171: if(sizeof(eusartTxBuffer) <= eusartTxHead)
  2603  0377  0247               	subwf	_eusartTxHead,w
  2604  0378  1803               	btfsc	3,0
  2605                           
  2606                           ;eusart.c: 172: {
  2607                           ;eusart.c: 173: eusartTxHead = 0;
  2608  0379  01C7               	clrf	_eusartTxHead
  2609                           
  2610                           ;eusart.c: 174: }
  2611                           ;eusart.c: 175: eusartTxBufferRemaining--;
  2612  037A  03FD               	decf	_eusartTxBufferRemaining,f	;volatile
  2613  037B                     l1436:	
  2614                           
  2615                           ;eusart.c: 176: }
  2616                           ;eusart.c: 177: PIE1bits.TXIE = 1;
  2617  037B  0021               	movlb	1	; select bank1
  2618  037C  1611               	bsf	17,4	;volatile
  2619  037D  0008               	return
  2620  037E                     __end_of_EUSART_Write:	
  2621                           
  2622                           	psect	text6
  2623  0416                     __ptext6:	
  2624 ;; *************** function _memset *****************
  2625 ;; Defined at:
  2626 ;;		line 8 in file "/Applications/microchip/xc8/v1.33/sources/common/memset.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;  p1              1    wreg     PTR void 
  2629 ;;		 -> inputCommand(16), 
  2630 ;;  c               2    0[COMMON] int 
  2631 ;;  n               2    2[COMMON] unsigned int 
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;  p1              1    4[COMMON] PTR void 
  2634 ;;		 -> inputCommand(16), 
  2635 ;;  p               1    5[COMMON] PTR unsigned char 
  2636 ;;		 -> inputCommand(16), 
  2637 ;; Return value:  Size  Location     Type
  2638 ;;                  1    wreg      PTR void 
  2639 ;; Registers used:
  2640 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2641 ;; Tracked objects:
  2642 ;;		On entry : 0/0
  2643 ;;		On exit  : 0/0
  2644 ;;		Unchanged: 0/0
  2645 ;; Data sizes:     COMMON   BANK0   BANK1
  2646 ;;      Params:         4       0       0
  2647 ;;      Locals:         2       0       0
  2648 ;;      Temps:          0       0       0
  2649 ;;      Totals:         6       0       0
  2650 ;;Total ram usage:        6 bytes
  2651 ;; Hardware stack levels used:    1
  2652 ;; Hardware stack levels required when called:    3
  2653 ;; This function calls:
  2654 ;;		Nothing
  2655 ;; This function is called by:
  2656 ;;		_UART_Task
  2657 ;; This function uses a non-reentrant model
  2658 ;;
  2659                           
  2660                           
  2661                           ;psect for function _memset
  2662  0416                     _memset:	
  2663                           
  2664                           ;incstack = 0
  2665                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  2666                           ;memset@p1 stored from wreg
  2667  0416  00F4               	movwf	memset@p1
  2668  0417  00F5               	movwf	memset@p
  2669  0418                     l1498:	
  2670  0418  3001               	movlw	1
  2671  0419  02F2               	subwf	memset@n,f
  2672  041A  3000               	movlw	0
  2673  041B  3BF3               	subwfb	memset@n+1,f
  2674  041C  0A72               	incf	memset@n,w
  2675  041D  1903               	skipnz
  2676  041E  0A73               	incf	memset@n+1,w
  2677  041F  1903               	btfsc	3,2
  2678  0420  0008               	return
  2679  0421  0875               	movf	memset@p,w
  2680  0422  0086               	movwf	6
  2681  0423  0187               	clrf	7
  2682  0424  0870               	movf	memset@c,w
  2683  0425  0081               	movwf	1
  2684  0426  0AF5               	incf	memset@p,f
  2685  0427  2C18               	goto	l1498
  2686  0428                     __end_of_memset:	
  2687                           
  2688                           	psect	text7
  2689  03AD                     __ptext7:	
  2690 ;; *************** function _EUSART_Read *****************
  2691 ;; Defined at:
  2692 ;;		line 136 in file "../src/mcc_generated_files/eusart.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;		None
  2695 ;; Auto vars:     Size  Location     Type
  2696 ;;  readValue       1    0[COMMON] unsigned char 
  2697 ;; Return value:  Size  Location     Type
  2698 ;;                  1    wreg      unsigned char 
  2699 ;; Registers used:
  2700 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2701 ;; Tracked objects:
  2702 ;;		On entry : 0/0
  2703 ;;		On exit  : 1F/1
  2704 ;;		Unchanged: 0/0
  2705 ;; Data sizes:     COMMON   BANK0   BANK1
  2706 ;;      Params:         0       0       0
  2707 ;;      Locals:         1       0       0
  2708 ;;      Temps:          0       0       0
  2709 ;;      Totals:         1       0       0
  2710 ;;Total ram usage:        1 bytes
  2711 ;; Hardware stack levels used:    1
  2712 ;; Hardware stack levels required when called:    3
  2713 ;; This function calls:
  2714 ;;		Nothing
  2715 ;; This function is called by:
  2716 ;;		_UART_Task
  2717 ;; This function uses a non-reentrant model
  2718 ;;
  2719                           
  2720                           
  2721                           ;psect for function _EUSART_Read
  2722  03AD                     _EUSART_Read:	
  2723  03AD                     l1466:	
  2724                           ;eusart.c: 140: while(0 == eusartRxCount)
  2725                           
  2726                           ;incstack = 0
  2727                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  2728                           
  2729  03AD  087C               	movf	_eusartRxCount,w	;volatile
  2730  03AE  1903               	btfsc	3,2
  2731  03AF  2BAD               	goto	l1466
  2732                           
  2733                           ;eusart.c: 142: }
  2734                           ;eusart.c: 144: PIE1bits.RCIE = 0;
  2735  03B0  0021               	movlb	1	; select bank1
  2736  03B1  1291               	bcf	17,5	;volatile
  2737                           
  2738                           ;eusart.c: 146: readValue = eusartRxBuffer[eusartRxTail++];
  2739  03B2  0020               	movlb	0	; select bank0
  2740  03B3  0846               	movf	_eusartRxTail,w
  2741  03B4  3E20               	addlw	_eusartRxBuffer& (0+255)
  2742  03B5  0086               	movwf	6
  2743  03B6  0187               	clrf	7
  2744  03B7  0801               	movf	1,w
  2745  03B8  00F0               	movwf	EUSART_Read@readValue
  2746  03B9  3010               	movlw	16
  2747  03BA  0AC6               	incf	_eusartRxTail,f
  2748                           
  2749                           ;eusart.c: 147: if(sizeof(eusartRxBuffer) <= eusartRxTail)
  2750  03BB  0246               	subwf	_eusartRxTail,w
  2751  03BC  1803               	btfsc	3,0
  2752                           
  2753                           ;eusart.c: 148: {
  2754                           ;eusart.c: 149: eusartRxTail = 0;
  2755  03BD  01C6               	clrf	_eusartRxTail
  2756                           
  2757                           ;eusart.c: 150: }
  2758                           ;eusart.c: 151: eusartRxCount--;
  2759  03BE  03FC               	decf	_eusartRxCount,f	;volatile
  2760                           
  2761                           ;eusart.c: 152: PIE1bits.RCIE = 1;
  2762  03BF  0021               	movlb	1	; select bank1
  2763  03C0  1691               	bsf	17,5	;volatile
  2764                           
  2765                           ;eusart.c: 154: return readValue;
  2766  03C1  0870               	movf	EUSART_Read@readValue,w
  2767  03C2  0008               	return
  2768  03C3                     __end_of_EUSART_Read:	
  2769                           
  2770                           	psect	text8
  2771  046F                     __ptext8:	
  2772 ;; *************** function _SYSTEM_Initialize *****************
  2773 ;; Defined at:
  2774 ;;		line 70 in file "../src/mcc_generated_files/mcc.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;		None
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;		None
  2779 ;; Return value:  Size  Location     Type
  2780 ;;		None               void
  2781 ;; Registers used:
  2782 ;;		wreg, status,2, status,0, pclath, cstack
  2783 ;; Tracked objects:
  2784 ;;		On entry : 17F/0
  2785 ;;		On exit  : 17F/0
  2786 ;;		Unchanged: 160/0
  2787 ;; Data sizes:     COMMON   BANK0   BANK1
  2788 ;;      Params:         0       0       0
  2789 ;;      Locals:         0       0       0
  2790 ;;      Temps:          0       0       0
  2791 ;;      Totals:         0       0       0
  2792 ;;Total ram usage:        0 bytes
  2793 ;; Hardware stack levels used:    1
  2794 ;; Hardware stack levels required when called:    5
  2795 ;; This function calls:
  2796 ;;		_CMP1_Initialize
  2797 ;;		_EUSART_Initialize
  2798 ;;		_FVR_Initialize
  2799 ;;		_OSCILLATOR_Initialize
  2800 ;;		_PIN_MANAGER_Initialize
  2801 ;;		_TMR1_Initialize
  2802 ;; This function is called by:
  2803 ;;		_main
  2804 ;; This function uses a non-reentrant model
  2805 ;;
  2806                           
  2807                           
  2808                           ;psect for function _SYSTEM_Initialize
  2809  046F                     _SYSTEM_Initialize:	
  2810                           
  2811                           ;mcc.c: 72: OSCILLATOR_Initialize();
  2812                           
  2813                           ;incstack = 0
  2814                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2815  046F  2461               	fcall	_OSCILLATOR_Initialize
  2816                           
  2817                           ;mcc.c: 73: PIN_MANAGER_Initialize();
  2818  0470  2439               	fcall	_PIN_MANAGER_Initialize
  2819                           
  2820                           ;mcc.c: 74: EUSART_Initialize();
  2821  0471  237E               	fcall	_EUSART_Initialize
  2822                           
  2823                           ;mcc.c: 75: CMP1_Initialize();
  2824  0472  2456               	fcall	_CMP1_Initialize
  2825                           
  2826                           ;mcc.c: 76: FVR_Initialize();
  2827  0473  2475               	fcall	_FVR_Initialize
  2828                           
  2829                           ;mcc.c: 77: TMR1_Initialize();
  2830  0474  2C28               	ljmp	l1536
  2831  0475                     __end_of_SYSTEM_Initialize:	
  2832                           
  2833                           	psect	text9
  2834  0428                     __ptext9:	
  2835 ;; *************** function _TMR1_Initialize *****************
  2836 ;; Defined at:
  2837 ;;		line 63 in file "../src/mcc_generated_files/tmr1.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;		None
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;		None
  2842 ;; Return value:  Size  Location     Type
  2843 ;;		None               void
  2844 ;; Registers used:
  2845 ;;		wreg, status,2, status,0, pclath, cstack
  2846 ;; Tracked objects:
  2847 ;;		On entry : 17F/2
  2848 ;;		On exit  : 17F/0
  2849 ;;		Unchanged: 160/0
  2850 ;; Data sizes:     COMMON   BANK0   BANK1
  2851 ;;      Params:         0       0       0
  2852 ;;      Locals:         0       0       0
  2853 ;;      Temps:          0       0       0
  2854 ;;      Totals:         0       0       0
  2855 ;;Total ram usage:        0 bytes
  2856 ;; Hardware stack levels used:    1
  2857 ;; Hardware stack levels required when called:    4
  2858 ;; This function calls:
  2859 ;;		_TMR1_StartTimer
  2860 ;; This function is called by:
  2861 ;;		_SYSTEM_Initialize
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           
  2866                           ;psect for function _TMR1_Initialize
  2867  0428                     _TMR1_Initialize:	
  2868  0428                     l1536:	
  2869                           ;incstack = 0
  2870                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2871                           
  2872                           
  2873                           ;tmr1.c: 68: T1CON = 0x34;
  2874  0428  3034               	movlw	52
  2875  0429  0020               	movlb	0	; select bank0
  2876  042A  0098               	movwf	24	;volatile
  2877                           
  2878                           ;tmr1.c: 71: T1GCON = 0x00;
  2879  042B  0199               	clrf	25	;volatile
  2880                           
  2881                           ;tmr1.c: 74: TMR1H = 0x0B;
  2882  042C  300B               	movlw	11
  2883  042D  0097               	movwf	23	;volatile
  2884                           
  2885                           ;tmr1.c: 77: TMR1L = 0xDC;
  2886  042E  30DC               	movlw	220
  2887  042F  0096               	movwf	22	;volatile
  2888                           
  2889                           ;tmr1.c: 80: timer1ReloadVal=(TMR1H << 8) | TMR1L;
  2890  0430  0817               	movf	23,w	;volatile
  2891  0431  00C1               	movwf	_timer1ReloadVal+1	;volatile
  2892  0432  01C0               	clrf	_timer1ReloadVal	;volatile
  2893  0433  0816               	movf	22,w	;volatile
  2894  0434  04C0               	iorwf	_timer1ReloadVal,f	;volatile
  2895                           
  2896                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
  2897  0435  1011               	bcf	17,0	;volatile
  2898                           
  2899                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
  2900  0436  0021               	movlb	1	; select bank1
  2901  0437  1411               	bsf	17,0	;volatile
  2902                           
  2903                           ;tmr1.c: 89: TMR1_StartTimer();
  2904  0438  2C79               	ljmp	l1448
  2905  0439                     __end_of_TMR1_Initialize:	
  2906                           
  2907                           	psect	text10
  2908  0479                     __ptext10:	
  2909 ;; *************** function _TMR1_StartTimer *****************
  2910 ;; Defined at:
  2911 ;;		line 92 in file "../src/mcc_generated_files/tmr1.c"
  2912 ;; Parameters:    Size  Location     Type
  2913 ;;		None
  2914 ;; Auto vars:     Size  Location     Type
  2915 ;;		None
  2916 ;; Return value:  Size  Location     Type
  2917 ;;		None               void
  2918 ;; Registers used:
  2919 ;;		None
  2920 ;; Tracked objects:
  2921 ;;		On entry : 17F/1
  2922 ;;		On exit  : 17F/0
  2923 ;;		Unchanged: 160/0
  2924 ;; Data sizes:     COMMON   BANK0   BANK1
  2925 ;;      Params:         0       0       0
  2926 ;;      Locals:         0       0       0
  2927 ;;      Temps:          0       0       0
  2928 ;;      Totals:         0       0       0
  2929 ;;Total ram usage:        0 bytes
  2930 ;; Hardware stack levels used:    1
  2931 ;; Hardware stack levels required when called:    3
  2932 ;; This function calls:
  2933 ;;		Nothing
  2934 ;; This function is called by:
  2935 ;;		_TMR1_Initialize
  2936 ;; This function uses a non-reentrant model
  2937 ;;
  2938                           
  2939                           
  2940                           ;psect for function _TMR1_StartTimer
  2941  0479                     _TMR1_StartTimer:	
  2942  0479                     l1448:	
  2943                           ;incstack = 0
  2944                           ; Regs used in _TMR1_StartTimer: []
  2945                           
  2946                           
  2947                           ;tmr1.c: 95: T1CONbits.TMR1ON = 1;
  2948  0479  0020               	movlb	0	; select bank0
  2949  047A  1418               	bsf	24,0	;volatile
  2950  047B  0008               	return
  2951  047C                     __end_of_TMR1_StartTimer:	
  2952                           
  2953                           	psect	text11
  2954  0439                     __ptext11:	
  2955 ;; *************** function _PIN_MANAGER_Initialize *****************
  2956 ;; Defined at:
  2957 ;;		line 50 in file "../src/mcc_generated_files/pin_manager.c"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;		None
  2960 ;; Auto vars:     Size  Location     Type
  2961 ;;		None
  2962 ;; Return value:  Size  Location     Type
  2963 ;;		None               void
  2964 ;; Registers used:
  2965 ;;		wreg, status,2
  2966 ;; Tracked objects:
  2967 ;;		On entry : 17F/1
  2968 ;;		On exit  : 17F/2
  2969 ;;		Unchanged: 160/0
  2970 ;; Data sizes:     COMMON   BANK0   BANK1
  2971 ;;      Params:         0       0       0
  2972 ;;      Locals:         0       0       0
  2973 ;;      Temps:          0       0       0
  2974 ;;      Totals:         0       0       0
  2975 ;;Total ram usage:        0 bytes
  2976 ;; Hardware stack levels used:    1
  2977 ;; Hardware stack levels required when called:    3
  2978 ;; This function calls:
  2979 ;;		Nothing
  2980 ;; This function is called by:
  2981 ;;		_SYSTEM_Initialize
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985                           
  2986                           ;psect for function _PIN_MANAGER_Initialize
  2987  0439                     _PIN_MANAGER_Initialize:	
  2988                           
  2989                           ;pin_manager.c: 52: LATA = 0x04;
  2990                           
  2991                           ;incstack = 0
  2992                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2993  0439  3004               	movlw	4
  2994  043A  0022               	movlb	2	; select bank2
  2995  043B  008C               	movwf	12	;volatile
  2996                           
  2997                           ;pin_manager.c: 53: TRISA = 0x3B;
  2998  043C  303B               	movlw	59
  2999  043D  0021               	movlb	1	; select bank1
  3000  043E  008C               	movwf	12	;volatile
  3001                           
  3002                           ;pin_manager.c: 54: ANSELA = 0x10;
  3003  043F  3010               	movlw	16
  3004  0440  0023               	movlb	3	; select bank3
  3005  0441  008C               	movwf	12	;volatile
  3006                           
  3007                           ;pin_manager.c: 55: WPUA = 0x00;
  3008  0442  0024               	movlb	4	; select bank4
  3009  0443  018C               	clrf	12	;volatile
  3010                           
  3011                           ;pin_manager.c: 57: OPTION_REGbits.nWPUEN = 0x01;
  3012  0444  0021               	movlb	1	; select bank1
  3013  0445  1795               	bsf	21,7	;volatile
  3014                           
  3015                           ;pin_manager.c: 59: APFCON = 0x00;
  3016  0446  0022               	movlb	2	; select bank2
  3017  0447  019D               	clrf	29	;volatile
  3018  0448  0008               	return
  3019  0449                     __end_of_PIN_MANAGER_Initialize:	
  3020                           
  3021                           	psect	text12
  3022  0461                     __ptext12:	
  3023 ;; *************** function _OSCILLATOR_Initialize *****************
  3024 ;; Defined at:
  3025 ;;		line 80 in file "../src/mcc_generated_files/mcc.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;		None
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;		None
  3030 ;; Return value:  Size  Location     Type
  3031 ;;		None               void
  3032 ;; Registers used:
  3033 ;;		wreg, status,2
  3034 ;; Tracked objects:
  3035 ;;		On entry : 17F/0
  3036 ;;		On exit  : 17F/1
  3037 ;;		Unchanged: 160/0
  3038 ;; Data sizes:     COMMON   BANK0   BANK1
  3039 ;;      Params:         0       0       0
  3040 ;;      Locals:         0       0       0
  3041 ;;      Temps:          0       0       0
  3042 ;;      Totals:         0       0       0
  3043 ;;Total ram usage:        0 bytes
  3044 ;; Hardware stack levels used:    1
  3045 ;; Hardware stack levels required when called:    3
  3046 ;; This function calls:
  3047 ;;		Nothing
  3048 ;; This function is called by:
  3049 ;;		_SYSTEM_Initialize
  3050 ;; This function uses a non-reentrant model
  3051 ;;
  3052                           
  3053                           
  3054                           ;psect for function _OSCILLATOR_Initialize
  3055  0461                     _OSCILLATOR_Initialize:	
  3056                           
  3057                           ;mcc.c: 83: OSCCON = 0x70;
  3058                           
  3059                           ;incstack = 0
  3060                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3061  0461  3070               	movlw	112
  3062  0462  0021               	movlb	1	; select bank1
  3063  0463  0099               	movwf	25	;volatile
  3064                           
  3065                           ;mcc.c: 85: OSCSTAT = 0x00;
  3066  0464  019A               	clrf	26	;volatile
  3067                           
  3068                           ;mcc.c: 87: OSCTUNE = 0x00;
  3069  0465  0198               	clrf	24	;volatile
  3070  0466                     l226:	
  3071                           ;mcc.c: 92: {
  3072                           
  3073  0466  1B1A               	btfsc	26,6	;volatile
  3074  0467  0008               	return
  3075  0468  2C66               	goto	l226
  3076  0469                     __end_of_OSCILLATOR_Initialize:	
  3077                           
  3078                           	psect	text13
  3079  0475                     __ptext13:	
  3080 ;; *************** function _FVR_Initialize *****************
  3081 ;; Defined at:
  3082 ;;		line 58 in file "../src/mcc_generated_files/fvr.c"
  3083 ;; Parameters:    Size  Location     Type
  3084 ;;		None
  3085 ;; Auto vars:     Size  Location     Type
  3086 ;;		None
  3087 ;; Return value:  Size  Location     Type
  3088 ;;		None               void
  3089 ;; Registers used:
  3090 ;;		wreg
  3091 ;; Tracked objects:
  3092 ;;		On entry : 17F/1
  3093 ;;		On exit  : 17F/2
  3094 ;;		Unchanged: 160/0
  3095 ;; Data sizes:     COMMON   BANK0   BANK1
  3096 ;;      Params:         0       0       0
  3097 ;;      Locals:         0       0       0
  3098 ;;      Temps:          0       0       0
  3099 ;;      Totals:         0       0       0
  3100 ;;Total ram usage:        0 bytes
  3101 ;; Hardware stack levels used:    1
  3102 ;; Hardware stack levels required when called:    3
  3103 ;; This function calls:
  3104 ;;		Nothing
  3105 ;; This function is called by:
  3106 ;;		_SYSTEM_Initialize
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110                           
  3111                           ;psect for function _FVR_Initialize
  3112  0475                     _FVR_Initialize:	
  3113                           
  3114                           ;fvr.c: 61: FVRCON = 0x88;
  3115                           
  3116                           ;incstack = 0
  3117                           ; Regs used in _FVR_Initialize: [wreg]
  3118  0475  3088               	movlw	136
  3119  0476  0022               	movlb	2	; select bank2
  3120  0477  0097               	movwf	23	;volatile
  3121  0478  0008               	return
  3122  0479                     __end_of_FVR_Initialize:	
  3123                           
  3124                           	psect	text14
  3125  037E                     __ptext14:	
  3126 ;; *************** function _EUSART_Initialize *****************
  3127 ;; Defined at:
  3128 ;;		line 99 in file "../src/mcc_generated_files/eusart.c"
  3129 ;; Parameters:    Size  Location     Type
  3130 ;;		None
  3131 ;; Auto vars:     Size  Location     Type
  3132 ;;		None
  3133 ;; Return value:  Size  Location     Type
  3134 ;;		None               void
  3135 ;; Registers used:
  3136 ;;		wreg, status,2
  3137 ;; Tracked objects:
  3138 ;;		On entry : 17F/2
  3139 ;;		On exit  : 17F/1
  3140 ;;		Unchanged: 160/0
  3141 ;; Data sizes:     COMMON   BANK0   BANK1
  3142 ;;      Params:         0       0       0
  3143 ;;      Locals:         0       0       0
  3144 ;;      Temps:          0       0       0
  3145 ;;      Totals:         0       0       0
  3146 ;;Total ram usage:        0 bytes
  3147 ;; Hardware stack levels used:    1
  3148 ;; Hardware stack levels required when called:    3
  3149 ;; This function calls:
  3150 ;;		Nothing
  3151 ;; This function is called by:
  3152 ;;		_SYSTEM_Initialize
  3153 ;; This function uses a non-reentrant model
  3154 ;;
  3155                           
  3156                           
  3157                           ;psect for function _EUSART_Initialize
  3158  037E                     _EUSART_Initialize:	
  3159                           
  3160                           ;eusart.c: 102: PIE1bits.RCIE = 0;
  3161                           
  3162                           ;incstack = 0
  3163                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  3164  037E  0021               	movlb	1	; select bank1
  3165  037F  1291               	bcf	17,5	;volatile
  3166                           
  3167                           ;eusart.c: 103: PIE1bits.TXIE = 0;
  3168  0380  1211               	bcf	17,4	;volatile
  3169                           
  3170                           ;eusart.c: 108: BAUDCON = 0x48;
  3171  0381  3048               	movlw	72
  3172  0382  0023               	movlb	3	; select bank3
  3173  0383  009F               	movwf	31	;volatile
  3174                           
  3175                           ;eusart.c: 111: RCSTA = 0x90;
  3176  0384  3090               	movlw	144
  3177  0385  009D               	movwf	29	;volatile
  3178                           
  3179                           ;eusart.c: 114: TXSTA = 0x26;
  3180  0386  3026               	movlw	38
  3181  0387  009E               	movwf	30	;volatile
  3182                           
  3183                           ;eusart.c: 117: SPBRGL = 0x44;
  3184  0388  3044               	movlw	68
  3185  0389  009B               	movwf	27	;volatile
  3186                           
  3187                           ;eusart.c: 120: SPBRGH = 0x00;
  3188  038A  019C               	clrf	28	;volatile
  3189                           
  3190                           ;eusart.c: 124: eusartTxHead = 0;
  3191  038B  0020               	movlb	0	; select bank0
  3192  038C  3008               	movlw	8
  3193  038D  01C7               	clrf	_eusartTxHead
  3194                           
  3195                           ;eusart.c: 125: eusartTxTail = 0;
  3196  038E  01C8               	clrf	_eusartTxTail
  3197                           
  3198                           ;eusart.c: 126: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  3199  038F  00FD               	movwf	_eusartTxBufferRemaining	;volatile
  3200                           
  3201                           ;eusart.c: 128: eusartRxHead = 0;
  3202  0390  01C5               	clrf	_eusartRxHead
  3203                           
  3204                           ;eusart.c: 129: eusartRxTail = 0;
  3205  0391  01C6               	clrf	_eusartRxTail
  3206                           
  3207                           ;eusart.c: 130: eusartRxCount = 0;
  3208  0392  01FC               	clrf	_eusartRxCount	;volatile
  3209                           
  3210                           ;eusart.c: 133: PIE1bits.RCIE = 1;
  3211  0393  0021               	movlb	1	; select bank1
  3212  0394  1691               	bsf	17,5	;volatile
  3213  0395  0008               	return
  3214  0396                     __end_of_EUSART_Initialize:	
  3215                           
  3216                           	psect	text15
  3217  0456                     __ptext15:	
  3218 ;; *************** function _CMP1_Initialize *****************
  3219 ;; Defined at:
  3220 ;;		line 58 in file "../src/mcc_generated_files/cmp1.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;		None
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;		None
  3225 ;; Return value:  Size  Location     Type
  3226 ;;		None               void
  3227 ;; Registers used:
  3228 ;;		wreg
  3229 ;; Tracked objects:
  3230 ;;		On entry : 17F/1
  3231 ;;		On exit  : 17F/1
  3232 ;;		Unchanged: 160/0
  3233 ;; Data sizes:     COMMON   BANK0   BANK1
  3234 ;;      Params:         0       0       0
  3235 ;;      Locals:         0       0       0
  3236 ;;      Temps:          0       0       0
  3237 ;;      Totals:         0       0       0
  3238 ;;Total ram usage:        0 bytes
  3239 ;; Hardware stack levels used:    1
  3240 ;; Hardware stack levels required when called:    3
  3241 ;; This function calls:
  3242 ;;		Nothing
  3243 ;; This function is called by:
  3244 ;;		_SYSTEM_Initialize
  3245 ;; This function uses a non-reentrant model
  3246 ;;
  3247                           
  3248                           
  3249                           ;psect for function _CMP1_Initialize
  3250  0456                     _CMP1_Initialize:	
  3251                           
  3252                           ;cmp1.c: 66: PIE2bits.C1IE = 0;
  3253                           
  3254                           ;incstack = 0
  3255                           ; Regs used in _CMP1_Initialize: [wreg]
  3256  0456  1292               	bcf	18,5	;volatile
  3257                           
  3258                           ;cmp1.c: 70: CM1CON0 = 0x84;
  3259  0457  3084               	movlw	132
  3260  0458  0022               	movlb	2	; select bank2
  3261  0459  0091               	movwf	17	;volatile
  3262                           
  3263                           ;cmp1.c: 73: CM1CON1 = 0x21;
  3264  045A  3021               	movlw	33
  3265  045B  0092               	movwf	18	;volatile
  3266                           
  3267                           ;cmp1.c: 77: PIR2bits.C1IF = 0;
  3268  045C  0020               	movlb	0	; select bank0
  3269  045D  1292               	bcf	18,5	;volatile
  3270                           
  3271                           ;cmp1.c: 80: PIE2bits.C1IE = 1;
  3272  045E  0021               	movlb	1	; select bank1
  3273  045F  1692               	bsf	18,5	;volatile
  3274  0460  0008               	return
  3275  0461                     __end_of_CMP1_Initialize:	
  3276                           
  3277                           	psect	text16
  3278  02A8                     __ptext16:	
  3279 ;; *************** function _LED_Task *****************
  3280 ;; Defined at:
  3281 ;;		line 10 in file "../src/LED.c"
  3282 ;; Parameters:    Size  Location     Type
  3283 ;;		None
  3284 ;; Auto vars:     Size  Location     Type
  3285 ;;  i               1    6[COMMON] unsigned char 
  3286 ;;  i               2    4[COMMON] unsigned int 
  3287 ;;  i               2    2[COMMON] unsigned int 
  3288 ;; Return value:  Size  Location     Type
  3289 ;;		None               void
  3290 ;; Registers used:
  3291 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3292 ;; Tracked objects:
  3293 ;;		On entry : 0/0
  3294 ;;		On exit  : 0/0
  3295 ;;		Unchanged: 0/0
  3296 ;; Data sizes:     COMMON   BANK0   BANK1
  3297 ;;      Params:         0       0       0
  3298 ;;      Locals:         5       0       0
  3299 ;;      Temps:          0       0       0
  3300 ;;      Totals:         5       0       0
  3301 ;;Total ram usage:        5 bytes
  3302 ;; Hardware stack levels used:    1
  3303 ;; Hardware stack levels required when called:    4
  3304 ;; This function calls:
  3305 ;;		_ledSendByte
  3306 ;; This function is called by:
  3307 ;;		_main
  3308 ;; This function uses a non-reentrant model
  3309 ;;
  3310                           
  3311                           
  3312                           ;psect for function _LED_Task
  3313  02A8                     _LED_Task:	
  3314                           
  3315                           ;LED.c: 12: static uint8_t ledOFF;
  3316                           ;LED.c: 13: switch(LED_mode)
  3317                           
  3318                           ;incstack = 0
  3319                           ; Regs used in _LED_Task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3320  02A8  2AFB               	goto	l1774
  3321  02A9                     l1718:	
  3322                           
  3323                           ;LED.c: 16: if(ledOFF ==0)
  3324  02A9  0020               	movlb	0	; select bank0
  3325  02AA  08C2               	movf	LED_Task@ledOFF,f
  3326  02AB  1D03               	skipz
  3327  02AC  0008               	return
  3328                           
  3329                           ;LED.c: 17: {
  3330                           ;LED.c: 18: GIE = 0;
  3331  02AD  138B               	bcf	11,7	;volatile
  3332                           
  3333                           ;LED.c: 19: for(uint16_t i=0;i<20;i++)
  3334  02AE  01F2               	clrf	LED_Task@i
  3335  02AF  01F3               	clrf	LED_Task@i+1
  3336  02B0                     l1728:	
  3337                           
  3338                           ;LED.c: 20: {
  3339                           ;LED.c: 21: ledSendByte(0);
  3340  02B0  3000               	movlw	0
  3341  02B1  23D9               	fcall	_ledSendByte
  3342                           
  3343                           ;LED.c: 22: ledSendByte(0);
  3344  02B2  3000               	movlw	0
  3345  02B3  23D9               	fcall	_ledSendByte
  3346                           
  3347                           ;LED.c: 23: ledSendByte(0);
  3348  02B4  3000               	movlw	0
  3349  02B5  23D9               	fcall	_ledSendByte
  3350  02B6  0AF2               	incf	LED_Task@i,f
  3351  02B7  1903               	skipnz
  3352  02B8  0AF3               	incf	LED_Task@i+1,f
  3353  02B9  3000               	movlw	0
  3354  02BA  0273               	subwf	LED_Task@i+1,w
  3355  02BB  3014               	movlw	20
  3356  02BC  1903               	skipnz
  3357  02BD  0272               	subwf	LED_Task@i,w
  3358  02BE  1C03               	skipc
  3359  02BF  2AB0               	goto	l1728
  3360                           
  3361                           ;LED.c: 24: }
  3362                           ;LED.c: 25: GIE = 1;
  3363  02C0  178B               	bsf	11,7	;volatile
  3364                           
  3365                           ;LED.c: 26: ledOFF = 1;
  3366  02C1  0020               	movlb	0	; select bank0
  3367  02C2  01C2               	clrf	LED_Task@ledOFF
  3368  02C3  0AC2               	incf	LED_Task@ledOFF,f
  3369  02C4  0008               	return
  3370  02C5                     l1734:	
  3371                           
  3372                           ;LED.c: 30: if(LED_color[0]!=LED_currentColor[0]|| LED_color[1]!=LED_currentColor[1]|| L
      +                          ED_color[2]!=LED_currentColor[2])
  3373  02C5  0020               	movlb	0	; select bank0
  3374  02C6  0838               	movf	_LED_color,w
  3375  02C7  063B               	xorwf	_LED_currentColor,w
  3376  02C8  1D03               	skipz
  3377  02C9  2AD2               	goto	l376
  3378  02CA  0839               	movf	_LED_color+1,w
  3379  02CB  063C               	xorwf	_LED_currentColor+1,w
  3380  02CC  1D03               	skipz
  3381  02CD  2AD2               	goto	l376
  3382  02CE  083A               	movf	_LED_color+2,w
  3383  02CF  063D               	xorwf	_LED_currentColor+2,w
  3384  02D0  1903               	skipnz
  3385  02D1  0008               	return
  3386  02D2                     l376:	
  3387                           
  3388                           ;LED.c: 33: {
  3389                           ;LED.c: 34: GIE = 0;
  3390  02D2  138B               	bcf	11,7	;volatile
  3391                           
  3392                           ;LED.c: 35: for(uint16_t i=0;i<20;i++)
  3393  02D3  01F4               	clrf	LED_Task@i_689
  3394  02D4  01F5               	clrf	LED_Task@i_689+1
  3395  02D5                     l1746:	
  3396                           
  3397                           ;LED.c: 36: {
  3398                           ;LED.c: 37: ledSendByte(LED_color[0]);
  3399  02D5  3000               	movlw	0
  3400  02D6  23D9               	fcall	_ledSendByte
  3401                           
  3402                           ;LED.c: 38: ledSendByte(LED_color[1]);
  3403  02D7  0020               	movlb	0	; select bank0
  3404  02D8  0839               	movf	_LED_color+1,w
  3405  02D9  23D9               	fcall	_ledSendByte
  3406                           
  3407                           ;LED.c: 39: ledSendByte(LED_color[2]);
  3408  02DA  0020               	movlb	0	; select bank0
  3409  02DB  083A               	movf	_LED_color+2,w
  3410  02DC  23D9               	fcall	_ledSendByte
  3411  02DD  0AF4               	incf	LED_Task@i_689,f
  3412  02DE  1903               	skipnz
  3413  02DF  0AF5               	incf	LED_Task@i_689+1,f
  3414  02E0  3000               	movlw	0
  3415  02E1  0275               	subwf	LED_Task@i_689+1,w
  3416  02E2  3014               	movlw	20
  3417  02E3  1903               	skipnz
  3418  02E4  0274               	subwf	LED_Task@i_689,w
  3419  02E5  1C03               	skipc
  3420  02E6  2AD5               	goto	l1746
  3421                           
  3422                           ;LED.c: 40: }
  3423                           ;LED.c: 41: GIE = 1;
  3424  02E7  178B               	bsf	11,7	;volatile
  3425                           
  3426                           ;LED.c: 42: for(uint8_t i=0;i<3;i++)
  3427  02E8  01F6               	clrf	LED_Task@i_690
  3428  02E9                     l1758:	
  3429                           
  3430                           ;LED.c: 43: LED_currentColor[i] = LED_color[i];
  3431  02E9  0876               	movf	LED_Task@i_690,w
  3432  02EA  3E3B               	addlw	_LED_currentColor& (0+255)
  3433  02EB  0086               	movwf	6
  3434  02EC  0187               	clrf	7
  3435  02ED  0876               	movf	LED_Task@i_690,w
  3436  02EE  3E38               	addlw	_LED_color& (0+255)
  3437  02EF  0084               	movwf	4
  3438  02F0  0185               	clrf	5
  3439  02F1  0800               	movf	0,w
  3440  02F2  0081               	movwf	1
  3441  02F3  3003               	movlw	3
  3442  02F4  0AF6               	incf	LED_Task@i_690,f
  3443  02F5  0276               	subwf	LED_Task@i_690,w
  3444  02F6  1C03               	skipc
  3445  02F7  2AE9               	goto	l1758
  3446  02F8                     l1764:	
  3447                           
  3448                           ;LED.c: 44: ledOFF = 0;
  3449  02F8  0020               	movlb	0	; select bank0
  3450  02F9  01C2               	clrf	LED_Task@ledOFF
  3451  02FA  0008               	return
  3452  02FB                     l1774:	
  3453  02FB  087B               	movf	_LED_mode,w
  3454                           
  3455                           ; Switch size 1, requested type "speed"
  3456                           ; Number of cases is 5, Range of values is 0 to 4
  3457                           ; switch strategies available:
  3458                           ; Name         Instructions Cycles
  3459                           ; direct_byte           16     6 (fixed)
  3460                           ; simple_byte           16     9 (average)
  3461                           ; jumptable            260     6 (fixed)
  3462                           ;	Chosen strategy is direct_byte
  3463  02FC  0084               	movwf	4
  3464  02FD  3005               	movlw	5
  3465  02FE  0204               	subwf	4,w
  3466  02FF  1803               	skipnc
  3467  0300  0008               	return
  3468  0301  300F               	movlw	low S1894
  3469  0302  3181               	movlp	high S1894
  3470  0303  0704               	addwf	4,w
  3471  0304  0082               	movwf	2
  3472  0305  0008               	return
  3473  0306                     __end_of_LED_Task:	
  3474                           
  3475                           	psect	swtext3
  3476  010F                     __pswtext3:	
  3477  010F                     S1894:	
  3478  010F  2AA9               	ljmp	l1718
  3479  0110  2AC5               	ljmp	l1734
  3480  0111  2AF8               	ljmp	l1764
  3481  0112  2AF8               	ljmp	l1764
  3482  0113  2AF8               	ljmp	l1764
  3483                           
  3484                           	psect	text17
  3485  03D9                     __ptext17:	
  3486 ;; *************** function _ledSendByte *****************
  3487 ;; Defined at:
  3488 ;;		line 64 in file "../src/LED.c"
  3489 ;; Parameters:    Size  Location     Type
  3490 ;;  data            1    wreg     unsigned char 
  3491 ;; Auto vars:     Size  Location     Type
  3492 ;;  data            1    0[COMMON] unsigned char 
  3493 ;;  i               1    1[COMMON] unsigned char 
  3494 ;; Return value:  Size  Location     Type
  3495 ;;		None               void
  3496 ;; Registers used:
  3497 ;;		wreg, status,2, status,0
  3498 ;; Tracked objects:
  3499 ;;		On entry : 0/0
  3500 ;;		On exit  : 1F/2
  3501 ;;		Unchanged: 0/0
  3502 ;; Data sizes:     COMMON   BANK0   BANK1
  3503 ;;      Params:         0       0       0
  3504 ;;      Locals:         2       0       0
  3505 ;;      Temps:          0       0       0
  3506 ;;      Totals:         2       0       0
  3507 ;;Total ram usage:        2 bytes
  3508 ;; Hardware stack levels used:    1
  3509 ;; Hardware stack levels required when called:    3
  3510 ;; This function calls:
  3511 ;;		Nothing
  3512 ;; This function is called by:
  3513 ;;		_LED_Task
  3514 ;; This function uses a non-reentrant model
  3515 ;;
  3516                           
  3517                           
  3518                           ;psect for function _ledSendByte
  3519  03D9                     _ledSendByte:	
  3520                           
  3521                           ;incstack = 0
  3522                           ; Regs used in _ledSendByte: [wreg+status,2+status,0]
  3523                           ;ledSendByte@data stored from wreg
  3524  03D9  00F0               	movwf	ledSendByte@data
  3525                           
  3526                           ;LED.c: 81: for(uint8_t i = 0; i<8;i++)
  3527  03DA  01F1               	clrf	ledSendByte@i
  3528  03DB                     l388:	
  3529                           
  3530                           ;LED.c: 82: {
  3531                           ;LED.c: 83: if(data&0x80)
  3532  03DB  1FF0               	btfss	ledSendByte@data,7
  3533  03DC  2BE2               	goto	l396
  3534                           
  3535                           ;LED.c: 84: {
  3536                           ;LED.c: 85: do { LATA2 = 1; } while(0);
  3537  03DD  0022               	movlb	2	; select bank2
  3538  03DE  150C               	bsf	12,2	;volatile
  3539                           
  3540                           ;LED.c: 86: __nop();
  3541  03DF  0000               	nop
  3542                           
  3543                           ;LED.c: 87: __nop();
  3544  03E0  0000               	nop
  3545  03E1  2BE5               	goto	l393
  3546  03E2                     l396:	
  3547                           ;LED.c: 90: else
  3548                           ;LED.c: 91: {
  3549                           ;LED.c: 92: do { LATA2 = 1; } while(0);
  3550                           
  3551  03E2  0022               	movlb	2	; select bank2
  3552  03E3  150C               	bsf	12,2	;volatile
  3553                           
  3554                           ;LED.c: 93: __nop();
  3555  03E4  0000               	nop
  3556  03E5                     l393:	
  3557                           ;LED.c: 88: do { LATA2 = 0; } while(0);
  3558                           
  3559  03E5  0022               	movlb	2	; select bank2
  3560  03E6  110C               	bcf	12,2	;volatile
  3561  03E7  3008               	movlw	8
  3562                           
  3563                           ;LED.c: 95: }
  3564                           ;LED.c: 96: data = data<<1;
  3565  03E8  35F0               	lslf	ledSendByte@data,f
  3566  03E9  0AF1               	incf	ledSendByte@i,f
  3567  03EA  0271               	subwf	ledSendByte@i,w
  3568  03EB  1803               	btfsc	3,0
  3569  03EC  0008               	return
  3570  03ED  2BDB               	goto	l388
  3571  03EE                     __end_of_ledSendByte:	
  3572                           
  3573                           	psect	intentry
  3574  0004                     __pintentry:	
  3575 ;; *************** function _INTERRUPT_InterruptManager *****************
  3576 ;; Defined at:
  3577 ;;		line 52 in file "../src/mcc_generated_files/interrupt_manager.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;		None
  3580 ;; Auto vars:     Size  Location     Type
  3581 ;;		None
  3582 ;; Return value:  Size  Location     Type
  3583 ;;		None               void
  3584 ;; Registers used:
  3585 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3586 ;; Tracked objects:
  3587 ;;		On entry : 0/0
  3588 ;;		On exit  : 1E/0
  3589 ;;		Unchanged: 0/0
  3590 ;; Data sizes:     COMMON   BANK0   BANK1
  3591 ;;      Params:         0       0       0
  3592 ;;      Locals:         0       0       0
  3593 ;;      Temps:          0       0       0
  3594 ;;      Totals:         0       0       0
  3595 ;;Total ram usage:        0 bytes
  3596 ;; Hardware stack levels used:    1
  3597 ;; Hardware stack levels required when called:    2
  3598 ;; This function calls:
  3599 ;;		_CMP1_ISR
  3600 ;;		_EUSART_Receive_ISR
  3601 ;;		_EUSART_Transmit_ISR
  3602 ;;		_TMR1_ISR
  3603 ;; This function is called by:
  3604 ;;		Interrupt level 1
  3605 ;; This function uses a non-reentrant model
  3606 ;;
  3607                           
  3608  0004                     _INTERRUPT_InterruptManager:	
  3609                           
  3610                           ;incstack = 0
  3611                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  3612  0004  147E               	bsf	126,0	;set compiler interrupt flag
  3613  0005  3180               	pagesel	$
  3614                           
  3615                           ;interrupt_manager.c: 55: if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
  3616  0006  0021               	movlb	1	; select bank1
  3617  0007  1E91               	btfss	17,5	;volatile
  3618  0008  280E               	goto	i1l192
  3619  0009  0020               	movlb	0	; select bank0
  3620  000A  1E91               	btfss	17,5	;volatile
  3621  000B  280E               	goto	i1l192
  3622                           
  3623                           ;interrupt_manager.c: 56: {
  3624                           ;interrupt_manager.c: 57: EUSART_Receive_ISR();
  3625  000C  23EE               	fcall	_EUSART_Receive_ISR
  3626                           
  3627                           ;interrupt_manager.c: 58: }
  3628  000D  2825               	goto	i1l200
  3629  000E                     i1l192:	
  3630                           
  3631                           ;interrupt_manager.c: 59: else if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
  3632  000E  0021               	movlb	1	; select bank1
  3633  000F  1E11               	btfss	17,4	;volatile
  3634  0010  2816               	goto	i1l194
  3635  0011  0020               	movlb	0	; select bank0
  3636  0012  1E11               	btfss	17,4	;volatile
  3637  0013  2816               	goto	i1l194
  3638                           
  3639                           ;interrupt_manager.c: 60: {
  3640                           ;interrupt_manager.c: 61: EUSART_Transmit_ISR();
  3641  0014  23C3               	fcall	_EUSART_Transmit_ISR
  3642                           
  3643                           ;interrupt_manager.c: 62: }
  3644  0015  2825               	goto	i1l200
  3645  0016                     i1l194:	
  3646                           
  3647                           ;interrupt_manager.c: 63: else if(PIE2bits.C1IE == 1 && PIR2bits.C1IF == 1)
  3648  0016  0021               	movlb	1	; select bank1
  3649  0017  1E92               	btfss	18,5	;volatile
  3650  0018  281E               	goto	i1l196
  3651  0019  0020               	movlb	0	; select bank0
  3652  001A  1E92               	btfss	18,5	;volatile
  3653  001B  281E               	goto	i1l196
  3654                           
  3655                           ;interrupt_manager.c: 64: {
  3656                           ;interrupt_manager.c: 65: CMP1_ISR();
  3657  001C  247C               	fcall	_CMP1_ISR
  3658                           
  3659                           ;interrupt_manager.c: 66: }
  3660  001D  2825               	goto	i1l200
  3661  001E                     i1l196:	
  3662                           
  3663                           ;interrupt_manager.c: 67: else if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  3664  001E  0021               	movlb	1	; select bank1
  3665  001F  1C11               	btfss	17,0	;volatile
  3666  0020  2825               	goto	i1l200
  3667  0021  0020               	movlb	0	; select bank0
  3668  0022  1C11               	btfss	17,0	;volatile
  3669  0023  2825               	goto	i1l200
  3670                           
  3671                           ;interrupt_manager.c: 68: {
  3672                           ;interrupt_manager.c: 69: TMR1_ISR();
  3673  0024  2403               	fcall	_TMR1_ISR
  3674  0025                     i1l200:	
  3675                           ;interrupt_manager.c: 70: }
  3676                           
  3677  0025  107E               	bcf	126,0	;clear compiler interrupt flag
  3678  0026  0009               	retfie
  3679  0027                     __end_of_INTERRUPT_InterruptManager:	
  3680                           
  3681                           	psect	text19
  3682  0403                     __ptext19:	
  3683 ;; *************** function _TMR1_ISR *****************
  3684 ;; Defined at:
  3685 ;;		line 152 in file "../src/mcc_generated_files/tmr1.c"
  3686 ;; Parameters:    Size  Location     Type
  3687 ;;		None
  3688 ;; Auto vars:     Size  Location     Type
  3689 ;;		None
  3690 ;; Return value:  Size  Location     Type
  3691 ;;		None               void
  3692 ;; Registers used:
  3693 ;;		wreg, status,2, status,0, pclath, cstack
  3694 ;; Tracked objects:
  3695 ;;		On entry : 1F/0
  3696 ;;		On exit  : 1F/0
  3697 ;;		Unchanged: 0/0
  3698 ;; Data sizes:     COMMON   BANK0   BANK1
  3699 ;;      Params:         0       0       0
  3700 ;;      Locals:         0       0       0
  3701 ;;      Temps:          0       0       0
  3702 ;;      Totals:         0       0       0
  3703 ;;Total ram usage:        0 bytes
  3704 ;; Hardware stack levels used:    1
  3705 ;; Hardware stack levels required when called:    1
  3706 ;; This function calls:
  3707 ;;		_TMR1_CallBack
  3708 ;; This function is called by:
  3709 ;;		_INTERRUPT_InterruptManager
  3710 ;; This function uses a non-reentrant model
  3711 ;;
  3712                           
  3713                           
  3714                           ;psect for function _TMR1_ISR
  3715  0403                     _TMR1_ISR:	
  3716                           
  3717                           ;tmr1.c: 154: static volatile unsigned int CountCallBack = 0;
  3718                           ;tmr1.c: 157: PIR1bits.TMR1IF = 0;
  3719                           
  3720                           ;incstack = 0
  3721                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  3722  0403  1011               	bcf	17,0	;volatile
  3723                           
  3724                           ;tmr1.c: 159: TMR1H = (timer1ReloadVal >> 8);
  3725  0404  0841               	movf	_timer1ReloadVal+1,w	;volatile
  3726  0405  0097               	movwf	23	;volatile
  3727                           
  3728                           ;tmr1.c: 160: TMR1L = timer1ReloadVal;
  3729  0406  0840               	movf	_timer1ReloadVal,w	;volatile
  3730  0407  0096               	movwf	22	;volatile
  3731                           
  3732                           ;tmr1.c: 163: if (++CountCallBack >= 16)
  3733  0408  0ABE               	incf	TMR1_ISR@CountCallBack,f	;volatile
  3734  0409  1903               	skipnz
  3735  040A  0ABF               	incf	TMR1_ISR@CountCallBack+1,f	;volatile
  3736  040B  3000               	movlw	0
  3737  040C  023F               	subwf	TMR1_ISR@CountCallBack+1,w	;volatile
  3738  040D  3010               	movlw	16
  3739  040E  1903               	skipnz
  3740  040F  023E               	subwf	TMR1_ISR@CountCallBack,w	;volatile
  3741  0410  1C03               	skipc
  3742  0411  0008               	return
  3743                           
  3744                           ;tmr1.c: 164: {
  3745                           ;tmr1.c: 166: TMR1_CallBack();
  3746  0412  247E               	fcall	_TMR1_CallBack
  3747                           
  3748                           ;tmr1.c: 169: CountCallBack = 0;
  3749  0413  01BE               	clrf	TMR1_ISR@CountCallBack	;volatile
  3750  0414  01BF               	clrf	TMR1_ISR@CountCallBack+1	;volatile
  3751  0415  0008               	return
  3752  0416                     __end_of_TMR1_ISR:	
  3753                           
  3754                           	psect	text20
  3755  047E                     __ptext20:	
  3756 ;; *************** function _TMR1_CallBack *****************
  3757 ;; Defined at:
  3758 ;;		line 174 in file "../src/mcc_generated_files/tmr1.c"
  3759 ;; Parameters:    Size  Location     Type
  3760 ;;		None
  3761 ;; Auto vars:     Size  Location     Type
  3762 ;;		None
  3763 ;; Return value:  Size  Location     Type
  3764 ;;		None               void
  3765 ;; Registers used:
  3766 ;;		None
  3767 ;; Tracked objects:
  3768 ;;		On entry : 1F/0
  3769 ;;		On exit  : 1F/0
  3770 ;;		Unchanged: 1F/0
  3771 ;; Data sizes:     COMMON   BANK0   BANK1
  3772 ;;      Params:         0       0       0
  3773 ;;      Locals:         0       0       0
  3774 ;;      Temps:          0       0       0
  3775 ;;      Totals:         0       0       0
  3776 ;;Total ram usage:        0 bytes
  3777 ;; Hardware stack levels used:    1
  3778 ;; This function calls:
  3779 ;;		Nothing
  3780 ;; This function is called by:
  3781 ;;		_TMR1_ISR
  3782 ;; This function uses a non-reentrant model
  3783 ;;
  3784                           
  3785                           
  3786                           ;psect for function _TMR1_CallBack
  3787  047E                     _TMR1_CallBack:	
  3788                           
  3789                           ;incstack = 0
  3790                           ; Regs used in _TMR1_CallBack: []
  3791  047E  0008               	return
  3792  047F                     __end_of_TMR1_CallBack:	
  3793                           
  3794                           	psect	text21
  3795  03C3                     __ptext21:	
  3796 ;; *************** function _EUSART_Transmit_ISR *****************
  3797 ;; Defined at:
  3798 ;;		line 190 in file "../src/mcc_generated_files/eusart.c"
  3799 ;; Parameters:    Size  Location     Type
  3800 ;;		None
  3801 ;; Auto vars:     Size  Location     Type
  3802 ;;		None
  3803 ;; Return value:  Size  Location     Type
  3804 ;;		None               void
  3805 ;; Registers used:
  3806 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3807 ;; Tracked objects:
  3808 ;;		On entry : 1F/0
  3809 ;;		On exit  : 1E/0
  3810 ;;		Unchanged: 0/0
  3811 ;; Data sizes:     COMMON   BANK0   BANK1
  3812 ;;      Params:         0       0       0
  3813 ;;      Locals:         0       0       0
  3814 ;;      Temps:          0       0       0
  3815 ;;      Totals:         0       0       0
  3816 ;;Total ram usage:        0 bytes
  3817 ;; Hardware stack levels used:    1
  3818 ;; This function calls:
  3819 ;;		Nothing
  3820 ;; This function is called by:
  3821 ;;		_INTERRUPT_InterruptManager
  3822 ;; This function uses a non-reentrant model
  3823 ;;
  3824                           
  3825                           
  3826                           ;psect for function _EUSART_Transmit_ISR
  3827  03C3                     _EUSART_Transmit_ISR:	
  3828                           
  3829                           ;eusart.c: 194: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
  3830                           
  3831                           ;incstack = 0
  3832                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  3833  03C3  3008               	movlw	8
  3834  03C4  027D               	subwf	_eusartTxBufferRemaining,w
  3835  03C5  1803               	skipnc
  3836  03C6  2BD6               	goto	i1l103
  3837                           
  3838                           ;eusart.c: 195: {
  3839                           ;eusart.c: 196: TXREG = eusartTxBuffer[eusartTxTail++];
  3840  03C7  0848               	movf	_eusartTxTail,w
  3841  03C8  3E30               	addlw	_eusartTxBuffer& (0+255)
  3842  03C9  0086               	movwf	6
  3843  03CA  0187               	clrf	7
  3844  03CB  0801               	movf	1,w
  3845  03CC  0023               	movlb	3	; select bank3
  3846  03CD  009A               	movwf	26	;volatile
  3847  03CE  0020               	movlb	0	; select bank0
  3848  03CF  3008               	movlw	8
  3849  03D0  0AC8               	incf	_eusartTxTail,f
  3850                           
  3851                           ;eusart.c: 197: if(sizeof(eusartTxBuffer) <= eusartTxTail)
  3852  03D1  0248               	subwf	_eusartTxTail,w
  3853  03D2  1803               	btfsc	3,0
  3854                           
  3855                           ;eusart.c: 198: {
  3856                           ;eusart.c: 199: eusartTxTail = 0;
  3857  03D3  01C8               	clrf	_eusartTxTail
  3858                           
  3859                           ;eusart.c: 200: }
  3860                           ;eusart.c: 201: eusartTxBufferRemaining++;
  3861  03D4  0AFD               	incf	_eusartTxBufferRemaining,f	;volatile
  3862                           
  3863                           ;eusart.c: 202: }
  3864  03D5  0008               	return
  3865  03D6                     i1l103:	
  3866                           
  3867                           ;eusart.c: 203: else
  3868                           ;eusart.c: 204: {
  3869                           ;eusart.c: 205: PIE1bits.TXIE = 0;
  3870  03D6  0021               	movlb	1	; select bank1
  3871  03D7  1211               	bcf	17,4	;volatile
  3872  03D8  0008               	return
  3873  03D9                     __end_of_EUSART_Transmit_ISR:	
  3874                           
  3875                           	psect	text22
  3876  03EE                     __ptext22:	
  3877 ;; *************** function _EUSART_Receive_ISR *****************
  3878 ;; Defined at:
  3879 ;;		line 209 in file "../src/mcc_generated_files/eusart.c"
  3880 ;; Parameters:    Size  Location     Type
  3881 ;;		None
  3882 ;; Auto vars:     Size  Location     Type
  3883 ;;		None
  3884 ;; Return value:  Size  Location     Type
  3885 ;;		None               void
  3886 ;; Registers used:
  3887 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3888 ;; Tracked objects:
  3889 ;;		On entry : 1F/0
  3890 ;;		On exit  : 1F/0
  3891 ;;		Unchanged: 0/0
  3892 ;; Data sizes:     COMMON   BANK0   BANK1
  3893 ;;      Params:         0       0       0
  3894 ;;      Locals:         0       0       0
  3895 ;;      Temps:          0       0       0
  3896 ;;      Totals:         0       0       0
  3897 ;;Total ram usage:        0 bytes
  3898 ;; Hardware stack levels used:    1
  3899 ;; This function calls:
  3900 ;;		Nothing
  3901 ;; This function is called by:
  3902 ;;		_INTERRUPT_InterruptManager
  3903 ;; This function uses a non-reentrant model
  3904 ;;
  3905                           
  3906                           
  3907                           ;psect for function _EUSART_Receive_ISR
  3908  03EE                     _EUSART_Receive_ISR:	
  3909                           
  3910                           ;eusart.c: 211: if(1 == RCSTAbits.OERR)
  3911                           
  3912                           ;incstack = 0
  3913                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  3914  03EE  0023               	movlb	3	; select bank3
  3915  03EF  1C9D               	btfss	29,1	;volatile
  3916  03F0  2BF3               	goto	i1l1580
  3917                           
  3918                           ;eusart.c: 212: {
  3919                           ;eusart.c: 215: RCSTAbits.CREN = 0;
  3920  03F1  121D               	bcf	29,4	;volatile
  3921                           
  3922                           ;eusart.c: 216: RCSTAbits.CREN = 1;
  3923  03F2  161D               	bsf	29,4	;volatile
  3924  03F3                     i1l1580:	
  3925                           
  3926                           ;eusart.c: 217: }
  3927                           ;eusart.c: 220: eusartRxBuffer[eusartRxHead++] = RCREG;
  3928  03F3  0020               	movlb	0	; select bank0
  3929  03F4  0845               	movf	_eusartRxHead,w
  3930  03F5  3E20               	addlw	_eusartRxBuffer& (0+255)
  3931  03F6  0086               	movwf	6
  3932  03F7  0187               	clrf	7
  3933  03F8  0023               	movlb	3	; select bank3
  3934  03F9  0819               	movf	25,w	;volatile
  3935  03FA  0081               	movwf	1
  3936  03FB  0020               	movlb	0	; select bank0
  3937  03FC  3010               	movlw	16
  3938  03FD  0AC5               	incf	_eusartRxHead,f
  3939                           
  3940                           ;eusart.c: 221: if(sizeof(eusartRxBuffer) <= eusartRxHead)
  3941  03FE  0245               	subwf	_eusartRxHead,w
  3942  03FF  1803               	btfsc	3,0
  3943                           
  3944                           ;eusart.c: 222: {
  3945                           ;eusart.c: 223: eusartRxHead = 0;
  3946  0400  01C5               	clrf	_eusartRxHead
  3947                           
  3948                           ;eusart.c: 224: }
  3949                           ;eusart.c: 225: eusartRxCount++;
  3950  0401  0AFC               	incf	_eusartRxCount,f	;volatile
  3951  0402  0008               	return
  3952  0403                     __end_of_EUSART_Receive_ISR:	
  3953                           
  3954                           	psect	text23
  3955  047C                     __ptext23:	
  3956 ;; *************** function _CMP1_ISR *****************
  3957 ;; Defined at:
  3958 ;;		line 89 in file "../src/mcc_generated_files/cmp1.c"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;		None
  3961 ;; Auto vars:     Size  Location     Type
  3962 ;;		None
  3963 ;; Return value:  Size  Location     Type
  3964 ;;		None               void
  3965 ;; Registers used:
  3966 ;;		None
  3967 ;; Tracked objects:
  3968 ;;		On entry : 1F/0
  3969 ;;		On exit  : 1F/0
  3970 ;;		Unchanged: 0/0
  3971 ;; Data sizes:     COMMON   BANK0   BANK1
  3972 ;;      Params:         0       0       0
  3973 ;;      Locals:         0       0       0
  3974 ;;      Temps:          0       0       0
  3975 ;;      Totals:         0       0       0
  3976 ;;Total ram usage:        0 bytes
  3977 ;; Hardware stack levels used:    1
  3978 ;; This function calls:
  3979 ;;		Nothing
  3980 ;; This function is called by:
  3981 ;;		_INTERRUPT_InterruptManager
  3982 ;; This function uses a non-reentrant model
  3983 ;;
  3984                           
  3985                           
  3986                           ;psect for function _CMP1_ISR
  3987  047C                     _CMP1_ISR:	
  3988                           
  3989                           ;cmp1.c: 92: PIR2bits.C1IF = 0;
  3990                           
  3991                           ;incstack = 0
  3992                           ; Regs used in _CMP1_ISR: []
  3993  047C  1292               	bcf	18,5	;volatile
  3994  047D  0008               	return
  3995  047E                     __end_of_CMP1_ISR:	
  3996  007E                     btemp	set	126	;btemp
  3997  007E                     pic14e$flags	set	126
  3998  007E                     wtemp	set	126
  3999  007E                     wtemp0	set	126
  4000  0080                     wtemp1	set	128
  4001  0082                     wtemp2	set	130
  4002  0084                     wtemp3	set	132
  4003  0086                     wtemp4	set	134
  4004  0088                     wtemp5	set	136
  4005  007F                     wtemp6	set	127
  4006  007E                     ttemp	set	126
  4007  007E                     ttemp0	set	126
  4008  0081                     ttemp1	set	129
  4009  0084                     ttemp2	set	132
  4010  0087                     ttemp3	set	135
  4011  007F                     ttemp4	set	127
  4012  007E                     ltemp	set	126
  4013  007E                     ltemp0	set	126
  4014  0082                     ltemp1	set	130
  4015  0086                     ltemp2	set	134
  4016  0080                     ltemp3	set	128


Data Sizes:
    Strings     87
    Constant    81
    Data        0
    BSS         60
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80      0      57
    BANK1            32      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[8]), STR_11(CODE[8]), 
		 -> STR_10(CODE[8]), STR_9(CODE[8]), STR_8(CODE[8]), STR_7(CODE[19]), 
		 -> STR_6(CODE[8]), STR_5(CODE[8]), STR_4(CODE[7]), STR_3(CODE[9]), 
		 -> STR_2(CODE[15]), STR_1(CODE[13]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[8]), STR_11(CODE[8]), 
		 -> STR_10(CODE[8]), STR_9(CODE[8]), STR_8(CODE[8]), STR_7(CODE[19]), 
		 -> STR_6(CODE[8]), STR_5(CODE[8]), STR_4(CODE[7]), STR_3(CODE[9]), 
		 -> STR_2(CODE[15]), STR_1(CODE[13]), 

    strcmp@s2	PTR const unsigned char  size(1) Largest target is 16
		 -> inputCommand(BANK0[16]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 16
		 -> CMD_SET_PARTY(CODE[15]), CMD_SET_XMAS(CODE[14]), CMD_SET_STARRY(CODE[16]), CMD_SET_COLOR(CODE[9]), 
		 -> CMD_SET_OFF(CODE[13]), CMD_GET_STATE(CODE[14]), 

    memset@p1	PTR void  size(1) Largest target is 16
		 -> inputCommand(BANK0[16]), 

    memset@p	PTR unsigned char  size(1) Largest target is 16
		 -> inputCommand(BANK0[16]), 

    sp__memset	PTR void  size(1) Largest target is 16
		 -> inputCommand(BANK0[16]), 

    outputString@string	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[8]), STR_11(CODE[8]), 
		 -> STR_10(CODE[8]), STR_9(CODE[8]), STR_8(CODE[8]), STR_7(CODE[19]), 
		 -> STR_6(CODE[8]), STR_5(CODE[8]), STR_4(CODE[7]), STR_3(CODE[9]), 
		 -> STR_2(CODE[15]), STR_1(CODE[13]), 


Critical Paths under _main in COMMON

    _main->_UART_Task
    _UART_Task->_outputString
    _outputString->_strlen
    _LED_Task->_ledSendByte

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    3127
                                             10 COMMON     1     1      0
                           _LED_Task
                  _SYSTEM_Initialize
                          _UART_Task
 ---------------------------------------------------------------------------------
 (1) _UART_Task                                            1     1      0    2876
                                              9 COMMON     1     1      0
                        _EUSART_Read
                       _EUSART_Write
                             _memset
                       _outputString
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               6     3      3    1149
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (2) _outputString                                         5     3      2    1184
                                              4 COMMON     5     3      2
                       _EUSART_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     154
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      44
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _memset                                               6     2      4     254
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read                                          1     1      0      24
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _CMP1_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_Task                                             5     5      0     251
                                              2 COMMON     5     5      0
                        _ledSendByte
 ---------------------------------------------------------------------------------
 (2) _ledSendByte                                          2     2      0      69
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0       0
                           _CMP1_ISR
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0       0
                      _TMR1_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR1_CallBack                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _CMP1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LED_Task
     _ledSendByte
   _SYSTEM_Initialize
     _CMP1_Initialize
     _EUSART_Initialize
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer
   _UART_Task
     _EUSART_Read
     _EUSART_Write
     _memset
     _outputString
       _EUSART_Write
       _strlen
     _strcmp

 _INTERRUPT_InterruptManager (ROOT)
   _CMP1_ISR
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR
   _TMR1_ISR
     _TMR1_CallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      47       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0      39       6       71.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      47       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Jan 28 16:24:47 2015

                                  pc 0002                          __CFG_CP$OFF 0000  
                  ??_CMP1_Initialize 0070                                   l91 036D  
                                 l88 0363               __end_of_FVR_Initialize 0479  
                                l226 0466                                  l376 02D2  
                                l393 03E5                                  l396 03E2  
                                l388 03DB                                  _GIE 005F  
                       __CFG_CPD$OFF 0000                                  u565 0351  
                                u987 0450                      _timer1ReloadVal 0040  
                       __CFG_BORV$LO 0000                                  wreg 0009  
                       __CFG_IESO$ON 0000                                 S1890 010A  
                               S1892 0114                                 S1894 010F  
                       ?_EUSART_Read 0070                         __CFG_LVP$OFF 0000  
                               l1500 0306                                 l1442 039A  
                               l1522 0333                                 l1436 037B  
                               l1444 03A6                                 l1532 033A  
                               l1604 005D                                 l1518 032B  
                               l1630 0090                                 l1606 0056  
                               l1448 0479                                 l1536 0428  
                               l1632 0094                                 l1624 0084  
                               l1616 006D                                 l1466 03AD  
                               l1490 0343                                 l1650 00A7  
                               l1634 0098                                 l1626 0088  
                               l1642 00B7                                 l1484 0342  
                               l1644 00BA                                 l1628 008C  
                               l1804 044C                                 l1734 02C5  
                               l1718 02A9                                 l1662 00AC  
                               l1638 009C                                 l1728 02B0  
                               l1656 00A9                                 l1746 02D5  
                               l1498 0418                                 l1682 0100  
                               l1674 00B0                                 l1594 0046  
                               l1764 02F8                                 l1668 00AE  
                               l1758 02E9                                 l1774 02FB  
                               STR_1 0273                                 STR_2 0264  
                               STR_3 0280                                 STR_4 02A1  
                               STR_5 0299                                 STR_6 0291  
                               STR_7 0251                                 STR_8 0289  
                               STR_9 0289                                 _LATA 010C  
                               _PLLR 04D6                                 _WPUA 020C  
                       __CFG_WRT$OFF 0000                        __CFG_FCMEN$ON 0000  
              __size_of_outputString 0020                                 _main 0449  
                               fsr0h 0005                                 fsr1h 0007  
                               fsr0l 0004                                 indf0 0000  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                        __CFG_BOREN$ON 0000  
                               ltemp 007E                                 start 0027  
                               ttemp 007E                                 wtemp 007E  
                   __end_of_CMP1_ISR 047E                        __CFG_PLLEN$ON 0000  
                    ?_FVR_Initialize 0070                        ?_EUSART_Write 0070  
     __size_of_OSCILLATOR_Initialize 0008                     __end_of_LED_Task 0306  
      __end_of_OSCILLATOR_Initialize 0469                                ?_main 0070  
               __end_of_CMD_SET_XMAS 023B                                STR_10 0289  
                              STR_11 0289                                STR_12 0289  
                              STR_13 0251                                STR_14 0251  
                      __CFG_WDTE$OFF 0000                      _TMR1_StartTimer 0479  
                              _T1CON 0018                                _LATA2 0862  
                              i1l103 03D6                                i1l200 0025  
                              i1l192 000E                                i1l194 0016  
                              i1l196 001E                                _RCREG 0199  
                              _RCSTA 019D                                _TMR1H 0017  
                              _TMR1L 0016                                _TRISA 008C  
                              _TXREG 019A                                _TXSTA 019E  
                       _outputString 0342                     __end_of_TMR1_ISR 0416  
                 __size_of_UART_Task 00D6              __end_of_TMR1_Initialize 0439  
                              ltemp0 007E                                ltemp1 0082  
                              ltemp2 0086                                ltemp3 0080  
                              ttemp0 007E                                ttemp1 0081  
                              ttemp2 0084                                ttemp3 0087  
                              ttemp4 007F                                wtemp0 007E  
                              wtemp1 0080                                wtemp2 0082  
                              wtemp3 0084                                wtemp4 0086  
                              wtemp5 0088                                wtemp6 007F  
              __end_of_CMD_GET_STATE 022D                       __CFG_MCLRE$OFF 0000  
                    __initialization 0028                         __end_of_main 0456  
                     ??_EUSART_Write 0070          ?_INTERRUPT_InterruptManager 0070  
                             ??_main 007A              UART_Task@receiveCounter 0044  
              __end_of_CMD_SET_COLOR 0251                __end_of_CMD_SET_PARTY 021F  
                             _APFCON 011D                               _ANSELA 018C  
                             _T1GCON 0019                               i1l1580 03F3  
                             _FVRCON 0117                               _OSCCON 0099  
                             _SPBRGH 019C                               _SPBRGL 019B  
               __size_of_ledSendByte 0015                       __CFG_PWRTE$OFF 0000  
                  __end_of_UART_Task 010A              __end_of_TMR1_StartTimer 047C  
                     __CFG_STVREN$ON 0000                  _EUSART_Transmit_ISR 03C3  
                             _memset 0416                               _strcmp 0306  
                             _strlen 0396                            ?_CMP1_ISR 0070  
               ?_EUSART_Transmit_ISR 0070                __end_of_TMR1_CallBack 047F  
                   ?_TMR1_Initialize 0070                 __size_of_EUSART_Read 0016  
                  _SYSTEM_Initialize 046F              __end_of__initialization 0031  
                          ?_LED_Task 0070                      _CMP1_Initialize 0456  
                 ?_SYSTEM_Initialize 0070                       __pcstackCOMMON 0070  
                ??_SYSTEM_Initialize 0070                            ?_TMR1_ISR 0070  
                          LED_Task@i 0072                       _CMD_SET_STARRY 0200  
                     _OPTION_REGbits 0095                           ??_CMP1_ISR 0070  
          __end_of_SYSTEM_Initialize 0475                ??_EUSART_Transmit_ISR 0070  
                         __pbssBANK0 0020                 __end_of_EUSART_Write 037E  
                         ??_LED_Task 0072                         _CMD_SET_XMAS 022D  
        __size_of_EUSART_Receive_ISR 0015                     ??_FVR_Initialize 0070  
                         __pmaintext 0449                     ?_TMR1_StartTimer 0070  
                         ??_TMR1_ISR 0070                           __pintentry 0004  
             __end_of_CMD_SET_STARRY 0210                              _CM1CON0 0111  
                            _CM1CON1 0112                              _BAUDCON 019F  
                            ?_memset 0070                              ?_strcmp 0070  
                            ?_strlen 0070                        _eusartRxCount 007C  
                            _OSCSTAT 009A                              _OSCTUNE 0098  
            __end_of_CMP1_Initialize 0461                 UART_Task@receiveData 0079  
                    __size_of_memset 0012                              __ptext1 0034  
                            __ptext2 0306                              __ptext3 0342  
                            __ptext4 0396                              __ptext5 0362  
                            __ptext6 0416                              __ptext7 03AD  
                            __ptext8 046F                              __ptext9 0428  
                    __size_of_strcmp 003C                      __size_of_strlen 0017  
                          _T1CONbits 0018                _OSCILLATOR_Initialize 0461  
           ??_PIN_MANAGER_Initialize 0070                        LED_Task@i_690 0076  
                      LED_Task@i_689 0074           __size_of_SYSTEM_Initialize 0006  
                            clrloop0 046A                 end_of_initialization 0031  
                          _LED_color 0038                              memset@c 0070  
                            memset@n 0072                              memset@p 0075  
                  _EUSART_Initialize 037E                   ?_EUSART_Initialize 0070  
                          _RCSTAbits 019D                         __pstringtext 0200  
                            strlen@s 0070                            _UART_Task 0034  
                ??_EUSART_Initialize 0070                     __CFG_FOSC$INTOSC 0000  
                 outputString@string 0074                __size_of_EUSART_Write 001C  
                   ?_CMP1_Initialize 0070                        ??_ledSendByte 0070  
                  __size_of_CMP1_ISR 0002            __end_of_EUSART_Initialize 0396  
                  __size_of_LED_Task 005E                  __end_of_CMD_SET_OFF 0248  
                         ?_UART_Task 0070                         _EUSART_Write 0362  
                  __size_of_TMR1_ISR 0013               ?_OSCILLATOR_Initialize 0070  
                     __end_of_memset 0428                       __end_of_strcmp 0342  
                     __end_of_strlen 03AD                  start_initialization 0028  
    __size_of_PIN_MANAGER_Initialize 0010                        ??_EUSART_Read 0070  
                      _CMD_GET_STATE 021F                  __end_of_ledSendByte 03EE  
           __size_of_TMR1_Initialize 0011                             ??_memset 0074  
             __size_of_TMR1_CallBack 0001                             ??_strcmp 0073  
                           ??_strlen 0072          __end_of_EUSART_Transmit_ISR 03D9  
              TMR1_ISR@CountCallBack 003E                          __pbssCOMMON 007B  
                          ___latbits 0000                        ?_outputString 0074  
                   _LED_currentColor 003B                  __end_of__stringdata 02A8  
                      _CMD_SET_COLOR 0248                        _CMD_SET_PARTY 0210  
         __end_of_EUSART_Receive_ISR 0403           __size_of_EUSART_Initialize 0018  
                __end_of_EUSART_Read 03C3                          _CMD_SET_OFF 023B  
             _PIN_MANAGER_Initialize 0439                 EUSART_Read@readValue 0070  
                      outputString@i 0078                         _eusartRxHead 0045  
                       _eusartTxHead 0047                         _eusartRxTail 0046  
                       _eusartTxTail 0048                          ??_UART_Task 0079  
       ??_INTERRUPT_InterruptManager 0070                            __pswtext1 010A  
                          __pswtext2 0114                            __pswtext3 010F  
            _eusartTxBufferRemaining 007D             __size_of_TMR1_StartTimer 0003  
                     ??_outputString 0076                             _CMP1_ISR 047C  
                        _ledSendByte 03D9                       _eusartRxBuffer 0020  
                      _TMR1_CallBack 047E                       _eusartTxBuffer 0030  
                           _LED_Task 02A8                         _inputCommand 0049  
                          clear_ram0 0469                             _PIE1bits 0091  
                           _LED_mode 007B                             _PIE2bits 0092  
__size_of_INTERRUPT_InterruptManager 0023                             _PIR1bits 0011  
                           _PIR2bits 0012                             _TMR1_ISR 0403  
                  ??_TMR1_Initialize 0070                          __stringdata 0251  
            __size_of_FVR_Initialize 0004                          _EUSART_Read 03AD  
                     ?_TMR1_CallBack 0070              ??_OSCILLATOR_Initialize 0070  
                           __ptext10 0479                             __ptext11 0439  
                           __ptext20 047E                             __ptext12 0461  
                           __ptext21 03C3                             __ptext13 0475  
                           __ptext22 03EE                             __ptext14 037E  
                           __ptext23 047C                             __ptext15 0456  
                           __ptext16 02A8                             __ptext17 03D9  
                           __ptext19 0403                    ??_TMR1_StartTimer 0070  
                      __size_of_main 000D             __size_of_CMP1_Initialize 000B  
               __end_of_outputString 0362   __end_of_INTERRUPT_InterruptManager 0027  
         _INTERRUPT_InterruptManager 0004                       LED_Task@ledOFF 0042  
         UART_Task@UART_ReceiveState 0043                           _INTCONbits 000B  
                    ledSendByte@data 0070                             memset@p1 0074  
                        pic14e$flags 007E                      ??_TMR1_CallBack 0070  
                           intlevel1 0000              ?_PIN_MANAGER_Initialize 0070  
                  __CFG_CLKOUTEN$OFF 0000                   _EUSART_Receive_ISR 03EE  
                     _FVR_Initialize 0475                  ?_EUSART_Receive_ISR 0070  
                           strcmp@s1 0070                             strcmp@t0 0073  
                           strcmp@s2 0072                             strcmp@t1 0075  
                           strcmp@t2 0074                             strlen@cp 0072  
                 EUSART_Write@txData 0070         __size_of_EUSART_Transmit_ISR 0016  
                       ?_ledSendByte 0070       __end_of_PIN_MANAGER_Initialize 0449  
                       ledSendByte@i 0071                 ??_EUSART_Receive_ISR 0070  
                    _TMR1_Initialize 0428  
