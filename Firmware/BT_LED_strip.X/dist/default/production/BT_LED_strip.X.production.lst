

Microchip Technology PIC PRO Macro Assembler V1.34 build -361300703 
                                                                                               Sun Oct 11 00:00:44 2015

Microchip Technology Omniscient Code Generator (PRO mode) build 201502162209
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	swtext1,local,class=CONST,delta=2
    11                           	psect	text13,local,class=CODE,merge=1,inline,delta=2
    12                           	psect	text14,local,class=CODE,merge=1,inline,delta=2
    13                           	psect	swtext2,local,class=CONST,delta=2
    14                           	psect	swtext3,local,class=CONST,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text25,local,class=CODE,merge=1,delta=2
    17                           	psect	text26,local,class=CODE,merge=1,delta=2
    18                           	psect	text27,local,class=CODE,merge=1,delta=2
    19                           	psect	pa_nodes,global,class=CODE,delta=2
    20                           	dabs	1,0x7E,2
    21  0000                     	;# 
    22  0001                     	;# 
    23  0002                     	;# 
    24  0003                     	;# 
    25  0004                     	;# 
    26  0005                     	;# 
    27  0006                     	;# 
    28  0007                     	;# 
    29  0008                     	;# 
    30  0009                     	;# 
    31  000A                     	;# 
    32  000B                     	;# 
    33  000C                     	;# 
    34  000D                     	;# 
    35  000E                     	;# 
    36  0010                     	;# 
    37  0011                     	;# 
    38  0012                     	;# 
    39  0013                     	;# 
    40  0014                     	;# 
    41  0015                     	;# 
    42  0016                     	;# 
    43  0016                     	;# 
    44  0017                     	;# 
    45  0018                     	;# 
    46  0019                     	;# 
    47  001A                     	;# 
    48  001A                     	;# 
    49  001B                     	;# 
    50  001B                     	;# 
    51  001C                     	;# 
    52  001D                     	;# 
    53  001E                     	;# 
    54  001F                     	;# 
    55  008C                     	;# 
    56  008D                     	;# 
    57  008E                     	;# 
    58  0090                     	;# 
    59  0091                     	;# 
    60  0092                     	;# 
    61  0093                     	;# 
    62  0094                     	;# 
    63  0095                     	;# 
    64  0096                     	;# 
    65  0098                     	;# 
    66  0099                     	;# 
    67  009A                     	;# 
    68  009B                     	;# 
    69  009B                     	;# 
    70  009C                     	;# 
    71  009D                     	;# 
    72  009E                     	;# 
    73  009F                     	;# 
    74  010C                     	;# 
    75  010D                     	;# 
    76  010E                     	;# 
    77  0111                     	;# 
    78  0112                     	;# 
    79  0113                     	;# 
    80  0114                     	;# 
    81  0115                     	;# 
    82  0116                     	;# 
    83  0117                     	;# 
    84  0118                     	;# 
    85  0119                     	;# 
    86  011C                     	;# 
    87  018C                     	;# 
    88  018D                     	;# 
    89  018E                     	;# 
    90  0191                     	;# 
    91  0191                     	;# 
    92  0192                     	;# 
    93  0193                     	;# 
    94  0193                     	;# 
    95  0194                     	;# 
    96  0195                     	;# 
    97  0196                     	;# 
    98  0197                     	;# 
    99  0199                     	;# 
   100  0199                     	;# 
   101  0199                     	;# 
   102  019A                     	;# 
   103  019A                     	;# 
   104  019A                     	;# 
   105  019B                     	;# 
   106  019B                     	;# 
   107  019B                     	;# 
   108  019B                     	;# 
   109  019B                     	;# 
   110  019C                     	;# 
   111  019C                     	;# 
   112  019C                     	;# 
   113  019D                     	;# 
   114  019D                     	;# 
   115  019D                     	;# 
   116  019E                     	;# 
   117  019E                     	;# 
   118  019E                     	;# 
   119  019F                     	;# 
   120  019F                     	;# 
   121  019F                     	;# 
   122  019F                     	;# 
   123  019F                     	;# 
   124  020C                     	;# 
   125  020D                     	;# 
   126  020E                     	;# 
   127  0211                     	;# 
   128  0211                     	;# 
   129  0212                     	;# 
   130  0212                     	;# 
   131  0213                     	;# 
   132  0213                     	;# 
   133  0214                     	;# 
   134  0214                     	;# 
   135  0215                     	;# 
   136  0215                     	;# 
   137  0215                     	;# 
   138  0215                     	;# 
   139  0216                     	;# 
   140  0216                     	;# 
   141  0217                     	;# 
   142  0217                     	;# 
   143  028C                     	;# 
   144  028D                     	;# 
   145  028E                     	;# 
   146  0291                     	;# 
   147  0291                     	;# 
   148  0292                     	;# 
   149  0293                     	;# 
   150  0294                     	;# 
   151  0298                     	;# 
   152  0298                     	;# 
   153  0299                     	;# 
   154  029A                     	;# 
   155  029B                     	;# 
   156  029E                     	;# 
   157  030C                     	;# 
   158  030D                     	;# 
   159  030E                     	;# 
   160  038C                     	;# 
   161  038D                     	;# 
   162  038E                     	;# 
   163  0391                     	;# 
   164  0392                     	;# 
   165  0393                     	;# 
   166  0394                     	;# 
   167  0395                     	;# 
   168  0396                     	;# 
   169  0397                     	;# 
   170  0398                     	;# 
   171  0399                     	;# 
   172  040E                     	;# 
   173  0413                     	;# 
   174  0413                     	;# 
   175  0414                     	;# 
   176  0414                     	;# 
   177  0415                     	;# 
   178  0416                     	;# 
   179  0417                     	;# 
   180  0418                     	;# 
   181  041A                     	;# 
   182  041A                     	;# 
   183  041B                     	;# 
   184  041B                     	;# 
   185  041C                     	;# 
   186  041D                     	;# 
   187  041E                     	;# 
   188  041F                     	;# 
   189  0493                     	;# 
   190  0494                     	;# 
   191  0495                     	;# 
   192  0496                     	;# 
   193  049A                     	;# 
   194  049B                     	;# 
   195  049C                     	;# 
   196  049D                     	;# 
   197  058C                     	;# 
   198  058C                     	;# 
   199  058D                     	;# 
   200  058E                     	;# 
   201  058E                     	;# 
   202  058F                     	;# 
   203  0590                     	;# 
   204  0590                     	;# 
   205  0591                     	;# 
   206  0592                     	;# 
   207  0592                     	;# 
   208  0593                     	;# 
   209  0594                     	;# 
   210  0594                     	;# 
   211  0595                     	;# 
   212  0596                     	;# 
   213  0596                     	;# 
   214  0597                     	;# 
   215  0598                     	;# 
   216  0599                     	;# 
   217  059A                     	;# 
   218  059B                     	;# 
   219  059B                     	;# 
   220  059C                     	;# 
   221  059D                     	;# 
   222  060C                     	;# 
   223  060C                     	;# 
   224  060D                     	;# 
   225  060E                     	;# 
   226  060F                     	;# 
   227  060F                     	;# 
   228  0610                     	;# 
   229  0611                     	;# 
   230  0612                     	;# 
   231  0613                     	;# 
   232  0614                     	;# 
   233  0617                     	;# 
   234  0618                     	;# 
   235  0619                     	;# 
   236  061A                     	;# 
   237  061B                     	;# 
   238  061C                     	;# 
   239  0691                     	;# 
   240  0692                     	;# 
   241  0693                     	;# 
   242  0694                     	;# 
   243  0695                     	;# 
   244  0696                     	;# 
   245  0697                     	;# 
   246  0699                     	;# 
   247  069A                     	;# 
   248  0711                     	;# 
   249  0712                     	;# 
   250  0713                     	;# 
   251  0714                     	;# 
   252  0715                     	;# 
   253  0718                     	;# 
   254  0718                     	;# 
   255  0719                     	;# 
   256  071A                     	;# 
   257  071A                     	;# 
   258  071B                     	;# 
   259  071C                     	;# 
   260  071D                     	;# 
   261  0791                     	;# 
   262  0791                     	;# 
   263  0792                     	;# 
   264  0793                     	;# 
   265  0793                     	;# 
   266  0794                     	;# 
   267  0795                     	;# 
   268  0795                     	;# 
   269  0796                     	;# 
   270  0797                     	;# 
   271  0797                     	;# 
   272  0798                     	;# 
   273  0799                     	;# 
   274  079A                     	;# 
   275  080C                     	;# 
   276  080C                     	;# 
   277  080D                     	;# 
   278  080E                     	;# 
   279  080E                     	;# 
   280  080F                     	;# 
   281  0810                     	;# 
   282  0810                     	;# 
   283  0811                     	;# 
   284  0812                     	;# 
   285  0812                     	;# 
   286  0813                     	;# 
   287  0814                     	;# 
   288  0815                     	;# 
   289  0816                     	;# 
   290  0817                     	;# 
   291  0818                     	;# 
   292  0819                     	;# 
   293  081A                     	;# 
   294  081A                     	;# 
   295  081B                     	;# 
   296  081C                     	;# 
   297  081C                     	;# 
   298  081D                     	;# 
   299  088C                     	;# 
   300  088D                     	;# 
   301  088E                     	;# 
   302  088F                     	;# 
   303  088F                     	;# 
   304  0890                     	;# 
   305  0891                     	;# 
   306  0892                     	;# 
   307  0893                     	;# 
   308  0893                     	;# 
   309  0894                     	;# 
   310  0895                     	;# 
   311  0896                     	;# 
   312  0897                     	;# 
   313  0897                     	;# 
   314  0898                     	;# 
   315  0899                     	;# 
   316  0D8C                     	;# 
   317  0D8C                     	;# 
   318  0D8D                     	;# 
   319  0D8E                     	;# 
   320  0D8F                     	;# 
   321  0D8F                     	;# 
   322  0D90                     	;# 
   323  0D91                     	;# 
   324  0D92                     	;# 
   325  0D92                     	;# 
   326  0D93                     	;# 
   327  0D94                     	;# 
   328  0D95                     	;# 
   329  0D95                     	;# 
   330  0D96                     	;# 
   331  0D97                     	;# 
   332  0D98                     	;# 
   333  0D99                     	;# 
   334  0D9A                     	;# 
   335  0D9B                     	;# 
   336  0D9C                     	;# 
   337  0D9D                     	;# 
   338  0D9E                     	;# 
   339  0D9E                     	;# 
   340  0D9F                     	;# 
   341  0DA0                     	;# 
   342  0DA1                     	;# 
   343  0DA1                     	;# 
   344  0DA2                     	;# 
   345  0DA3                     	;# 
   346  0DA4                     	;# 
   347  0DA4                     	;# 
   348  0DA5                     	;# 
   349  0DA6                     	;# 
   350  0DA7                     	;# 
   351  0DA7                     	;# 
   352  0DA8                     	;# 
   353  0DA9                     	;# 
   354  0DAA                     	;# 
   355  0DAB                     	;# 
   356  0DAC                     	;# 
   357  0DAD                     	;# 
   358  0DAE                     	;# 
   359  0DAF                     	;# 
   360  0E0F                     	;# 
   361  0E10                     	;# 
   362  0E11                     	;# 
   363  0E12                     	;# 
   364  0E13                     	;# 
   365  0E14                     	;# 
   366  0E15                     	;# 
   367  0E16                     	;# 
   368  0E17                     	;# 
   369  0E18                     	;# 
   370  0E19                     	;# 
   371  0E1A                     	;# 
   372  0E1B                     	;# 
   373  0E1C                     	;# 
   374  0E1D                     	;# 
   375  0E1E                     	;# 
   376  0E1F                     	;# 
   377  0E20                     	;# 
   378  0E21                     	;# 
   379  0E22                     	;# 
   380  0E23                     	;# 
   381  0E24                     	;# 
   382  0E25                     	;# 
   383  0E26                     	;# 
   384  0E27                     	;# 
   385  0E28                     	;# 
   386  0E29                     	;# 
   387  0E2A                     	;# 
   388  0E2B                     	;# 
   389  0E2C                     	;# 
   390  0E2D                     	;# 
   391  0E2E                     	;# 
   392  0E90                     	;# 
   393  0E91                     	;# 
   394  0E92                     	;# 
   395  0E94                     	;# 
   396  0E95                     	;# 
   397  0E9C                     	;# 
   398  0E9D                     	;# 
   399  0E9E                     	;# 
   400  0E9F                     	;# 
   401  0EA0                     	;# 
   402  0EA1                     	;# 
   403  0EA2                     	;# 
   404  0EA3                     	;# 
   405  0EA4                     	;# 
   406  0EA5                     	;# 
   407  0EA6                     	;# 
   408  0EA7                     	;# 
   409  0F0F                     	;# 
   410  0F10                     	;# 
   411  0F11                     	;# 
   412  0F12                     	;# 
   413  0F13                     	;# 
   414  0F14                     	;# 
   415  0F15                     	;# 
   416  0F16                     	;# 
   417  0F17                     	;# 
   418  0F18                     	;# 
   419  0F19                     	;# 
   420  0F1A                     	;# 
   421  0F1B                     	;# 
   422  0F1C                     	;# 
   423  0F1D                     	;# 
   424  0F1E                     	;# 
   425  0F1F                     	;# 
   426  0F20                     	;# 
   427  0F21                     	;# 
   428  0F22                     	;# 
   429  0F23                     	;# 
   430  0F24                     	;# 
   431  0F25                     	;# 
   432  0F26                     	;# 
   433  0F27                     	;# 
   434  0F28                     	;# 
   435  0F29                     	;# 
   436  0F2A                     	;# 
   437  0F2B                     	;# 
   438  0F2C                     	;# 
   439  0F2D                     	;# 
   440  0F2E                     	;# 
   441  0F2F                     	;# 
   442  0F30                     	;# 
   443  0F31                     	;# 
   444  0F32                     	;# 
   445  0F33                     	;# 
   446  0F34                     	;# 
   447  0F35                     	;# 
   448  0F36                     	;# 
   449  0F37                     	;# 
   450  0FE4                     	;# 
   451  0FE5                     	;# 
   452  0FE6                     	;# 
   453  0FE7                     	;# 
   454  0FE8                     	;# 
   455  0FE9                     	;# 
   456  0FEA                     	;# 
   457  0FEB                     	;# 
   458  0FED                     	;# 
   459  0FEE                     	;# 
   460  0FEF                     	;# 
   461  0000                     	;# 
   462  0001                     	;# 
   463  0002                     	;# 
   464  0003                     	;# 
   465  0004                     	;# 
   466  0005                     	;# 
   467  0006                     	;# 
   468  0007                     	;# 
   469  0008                     	;# 
   470  0009                     	;# 
   471  000A                     	;# 
   472  000B                     	;# 
   473  000C                     	;# 
   474  000D                     	;# 
   475  000E                     	;# 
   476  0010                     	;# 
   477  0011                     	;# 
   478  0012                     	;# 
   479  0013                     	;# 
   480  0014                     	;# 
   481  0015                     	;# 
   482  0016                     	;# 
   483  0016                     	;# 
   484  0017                     	;# 
   485  0018                     	;# 
   486  0019                     	;# 
   487  001A                     	;# 
   488  001A                     	;# 
   489  001B                     	;# 
   490  001B                     	;# 
   491  001C                     	;# 
   492  001D                     	;# 
   493  001E                     	;# 
   494  001F                     	;# 
   495  008C                     	;# 
   496  008D                     	;# 
   497  008E                     	;# 
   498  0090                     	;# 
   499  0091                     	;# 
   500  0092                     	;# 
   501  0093                     	;# 
   502  0094                     	;# 
   503  0095                     	;# 
   504  0096                     	;# 
   505  0098                     	;# 
   506  0099                     	;# 
   507  009A                     	;# 
   508  009B                     	;# 
   509  009B                     	;# 
   510  009C                     	;# 
   511  009D                     	;# 
   512  009E                     	;# 
   513  009F                     	;# 
   514  010C                     	;# 
   515  010D                     	;# 
   516  010E                     	;# 
   517  0111                     	;# 
   518  0112                     	;# 
   519  0113                     	;# 
   520  0114                     	;# 
   521  0115                     	;# 
   522  0116                     	;# 
   523  0117                     	;# 
   524  0118                     	;# 
   525  0119                     	;# 
   526  011C                     	;# 
   527  018C                     	;# 
   528  018D                     	;# 
   529  018E                     	;# 
   530  0191                     	;# 
   531  0191                     	;# 
   532  0192                     	;# 
   533  0193                     	;# 
   534  0193                     	;# 
   535  0194                     	;# 
   536  0195                     	;# 
   537  0196                     	;# 
   538  0197                     	;# 
   539  0199                     	;# 
   540  0199                     	;# 
   541  0199                     	;# 
   542  019A                     	;# 
   543  019A                     	;# 
   544  019A                     	;# 
   545  019B                     	;# 
   546  019B                     	;# 
   547  019B                     	;# 
   548  019B                     	;# 
   549  019B                     	;# 
   550  019C                     	;# 
   551  019C                     	;# 
   552  019C                     	;# 
   553  019D                     	;# 
   554  019D                     	;# 
   555  019D                     	;# 
   556  019E                     	;# 
   557  019E                     	;# 
   558  019E                     	;# 
   559  019F                     	;# 
   560  019F                     	;# 
   561  019F                     	;# 
   562  019F                     	;# 
   563  019F                     	;# 
   564  020C                     	;# 
   565  020D                     	;# 
   566  020E                     	;# 
   567  0211                     	;# 
   568  0211                     	;# 
   569  0212                     	;# 
   570  0212                     	;# 
   571  0213                     	;# 
   572  0213                     	;# 
   573  0214                     	;# 
   574  0214                     	;# 
   575  0215                     	;# 
   576  0215                     	;# 
   577  0215                     	;# 
   578  0215                     	;# 
   579  0216                     	;# 
   580  0216                     	;# 
   581  0217                     	;# 
   582  0217                     	;# 
   583  028C                     	;# 
   584  028D                     	;# 
   585  028E                     	;# 
   586  0291                     	;# 
   587  0291                     	;# 
   588  0292                     	;# 
   589  0293                     	;# 
   590  0294                     	;# 
   591  0298                     	;# 
   592  0298                     	;# 
   593  0299                     	;# 
   594  029A                     	;# 
   595  029B                     	;# 
   596  029E                     	;# 
   597  030C                     	;# 
   598  030D                     	;# 
   599  030E                     	;# 
   600  038C                     	;# 
   601  038D                     	;# 
   602  038E                     	;# 
   603  0391                     	;# 
   604  0392                     	;# 
   605  0393                     	;# 
   606  0394                     	;# 
   607  0395                     	;# 
   608  0396                     	;# 
   609  0397                     	;# 
   610  0398                     	;# 
   611  0399                     	;# 
   612  040E                     	;# 
   613  0413                     	;# 
   614  0413                     	;# 
   615  0414                     	;# 
   616  0414                     	;# 
   617  0415                     	;# 
   618  0416                     	;# 
   619  0417                     	;# 
   620  0418                     	;# 
   621  041A                     	;# 
   622  041A                     	;# 
   623  041B                     	;# 
   624  041B                     	;# 
   625  041C                     	;# 
   626  041D                     	;# 
   627  041E                     	;# 
   628  041F                     	;# 
   629  0493                     	;# 
   630  0494                     	;# 
   631  0495                     	;# 
   632  0496                     	;# 
   633  049A                     	;# 
   634  049B                     	;# 
   635  049C                     	;# 
   636  049D                     	;# 
   637  058C                     	;# 
   638  058C                     	;# 
   639  058D                     	;# 
   640  058E                     	;# 
   641  058E                     	;# 
   642  058F                     	;# 
   643  0590                     	;# 
   644  0590                     	;# 
   645  0591                     	;# 
   646  0592                     	;# 
   647  0592                     	;# 
   648  0593                     	;# 
   649  0594                     	;# 
   650  0594                     	;# 
   651  0595                     	;# 
   652  0596                     	;# 
   653  0596                     	;# 
   654  0597                     	;# 
   655  0598                     	;# 
   656  0599                     	;# 
   657  059A                     	;# 
   658  059B                     	;# 
   659  059B                     	;# 
   660  059C                     	;# 
   661  059D                     	;# 
   662  060C                     	;# 
   663  060C                     	;# 
   664  060D                     	;# 
   665  060E                     	;# 
   666  060F                     	;# 
   667  060F                     	;# 
   668  0610                     	;# 
   669  0611                     	;# 
   670  0612                     	;# 
   671  0613                     	;# 
   672  0614                     	;# 
   673  0617                     	;# 
   674  0618                     	;# 
   675  0619                     	;# 
   676  061A                     	;# 
   677  061B                     	;# 
   678  061C                     	;# 
   679  0691                     	;# 
   680  0692                     	;# 
   681  0693                     	;# 
   682  0694                     	;# 
   683  0695                     	;# 
   684  0696                     	;# 
   685  0697                     	;# 
   686  0699                     	;# 
   687  069A                     	;# 
   688  0711                     	;# 
   689  0712                     	;# 
   690  0713                     	;# 
   691  0714                     	;# 
   692  0715                     	;# 
   693  0718                     	;# 
   694  0718                     	;# 
   695  0719                     	;# 
   696  071A                     	;# 
   697  071A                     	;# 
   698  071B                     	;# 
   699  071C                     	;# 
   700  071D                     	;# 
   701  0791                     	;# 
   702  0791                     	;# 
   703  0792                     	;# 
   704  0793                     	;# 
   705  0793                     	;# 
   706  0794                     	;# 
   707  0795                     	;# 
   708  0795                     	;# 
   709  0796                     	;# 
   710  0797                     	;# 
   711  0797                     	;# 
   712  0798                     	;# 
   713  0799                     	;# 
   714  079A                     	;# 
   715  080C                     	;# 
   716  080C                     	;# 
   717  080D                     	;# 
   718  080E                     	;# 
   719  080E                     	;# 
   720  080F                     	;# 
   721  0810                     	;# 
   722  0810                     	;# 
   723  0811                     	;# 
   724  0812                     	;# 
   725  0812                     	;# 
   726  0813                     	;# 
   727  0814                     	;# 
   728  0815                     	;# 
   729  0816                     	;# 
   730  0817                     	;# 
   731  0818                     	;# 
   732  0819                     	;# 
   733  081A                     	;# 
   734  081A                     	;# 
   735  081B                     	;# 
   736  081C                     	;# 
   737  081C                     	;# 
   738  081D                     	;# 
   739  088C                     	;# 
   740  088D                     	;# 
   741  088E                     	;# 
   742  088F                     	;# 
   743  088F                     	;# 
   744  0890                     	;# 
   745  0891                     	;# 
   746  0892                     	;# 
   747  0893                     	;# 
   748  0893                     	;# 
   749  0894                     	;# 
   750  0895                     	;# 
   751  0896                     	;# 
   752  0897                     	;# 
   753  0897                     	;# 
   754  0898                     	;# 
   755  0899                     	;# 
   756  0D8C                     	;# 
   757  0D8C                     	;# 
   758  0D8D                     	;# 
   759  0D8E                     	;# 
   760  0D8F                     	;# 
   761  0D8F                     	;# 
   762  0D90                     	;# 
   763  0D91                     	;# 
   764  0D92                     	;# 
   765  0D92                     	;# 
   766  0D93                     	;# 
   767  0D94                     	;# 
   768  0D95                     	;# 
   769  0D95                     	;# 
   770  0D96                     	;# 
   771  0D97                     	;# 
   772  0D98                     	;# 
   773  0D99                     	;# 
   774  0D9A                     	;# 
   775  0D9B                     	;# 
   776  0D9C                     	;# 
   777  0D9D                     	;# 
   778  0D9E                     	;# 
   779  0D9E                     	;# 
   780  0D9F                     	;# 
   781  0DA0                     	;# 
   782  0DA1                     	;# 
   783  0DA1                     	;# 
   784  0DA2                     	;# 
   785  0DA3                     	;# 
   786  0DA4                     	;# 
   787  0DA4                     	;# 
   788  0DA5                     	;# 
   789  0DA6                     	;# 
   790  0DA7                     	;# 
   791  0DA7                     	;# 
   792  0DA8                     	;# 
   793  0DA9                     	;# 
   794  0DAA                     	;# 
   795  0DAB                     	;# 
   796  0DAC                     	;# 
   797  0DAD                     	;# 
   798  0DAE                     	;# 
   799  0DAF                     	;# 
   800  0E0F                     	;# 
   801  0E10                     	;# 
   802  0E11                     	;# 
   803  0E12                     	;# 
   804  0E13                     	;# 
   805  0E14                     	;# 
   806  0E15                     	;# 
   807  0E16                     	;# 
   808  0E17                     	;# 
   809  0E18                     	;# 
   810  0E19                     	;# 
   811  0E1A                     	;# 
   812  0E1B                     	;# 
   813  0E1C                     	;# 
   814  0E1D                     	;# 
   815  0E1E                     	;# 
   816  0E1F                     	;# 
   817  0E20                     	;# 
   818  0E21                     	;# 
   819  0E22                     	;# 
   820  0E23                     	;# 
   821  0E24                     	;# 
   822  0E25                     	;# 
   823  0E26                     	;# 
   824  0E27                     	;# 
   825  0E28                     	;# 
   826  0E29                     	;# 
   827  0E2A                     	;# 
   828  0E2B                     	;# 
   829  0E2C                     	;# 
   830  0E2D                     	;# 
   831  0E2E                     	;# 
   832  0E90                     	;# 
   833  0E91                     	;# 
   834  0E92                     	;# 
   835  0E94                     	;# 
   836  0E95                     	;# 
   837  0E9C                     	;# 
   838  0E9D                     	;# 
   839  0E9E                     	;# 
   840  0E9F                     	;# 
   841  0EA0                     	;# 
   842  0EA1                     	;# 
   843  0EA2                     	;# 
   844  0EA3                     	;# 
   845  0EA4                     	;# 
   846  0EA5                     	;# 
   847  0EA6                     	;# 
   848  0EA7                     	;# 
   849  0F0F                     	;# 
   850  0F10                     	;# 
   851  0F11                     	;# 
   852  0F12                     	;# 
   853  0F13                     	;# 
   854  0F14                     	;# 
   855  0F15                     	;# 
   856  0F16                     	;# 
   857  0F17                     	;# 
   858  0F18                     	;# 
   859  0F19                     	;# 
   860  0F1A                     	;# 
   861  0F1B                     	;# 
   862  0F1C                     	;# 
   863  0F1D                     	;# 
   864  0F1E                     	;# 
   865  0F1F                     	;# 
   866  0F20                     	;# 
   867  0F21                     	;# 
   868  0F22                     	;# 
   869  0F23                     	;# 
   870  0F24                     	;# 
   871  0F25                     	;# 
   872  0F26                     	;# 
   873  0F27                     	;# 
   874  0F28                     	;# 
   875  0F29                     	;# 
   876  0F2A                     	;# 
   877  0F2B                     	;# 
   878  0F2C                     	;# 
   879  0F2D                     	;# 
   880  0F2E                     	;# 
   881  0F2F                     	;# 
   882  0F30                     	;# 
   883  0F31                     	;# 
   884  0F32                     	;# 
   885  0F33                     	;# 
   886  0F34                     	;# 
   887  0F35                     	;# 
   888  0F36                     	;# 
   889  0F37                     	;# 
   890  0FE4                     	;# 
   891  0FE5                     	;# 
   892  0FE6                     	;# 
   893  0FE7                     	;# 
   894  0FE8                     	;# 
   895  0FE9                     	;# 
   896  0FEA                     	;# 
   897  0FEB                     	;# 
   898  0FED                     	;# 
   899  0FEE                     	;# 
   900  0FEF                     	;# 
   901  0000                     	;# 
   902  0001                     	;# 
   903  0002                     	;# 
   904  0003                     	;# 
   905  0004                     	;# 
   906  0005                     	;# 
   907  0006                     	;# 
   908  0007                     	;# 
   909  0008                     	;# 
   910  0009                     	;# 
   911  000A                     	;# 
   912  000B                     	;# 
   913  000C                     	;# 
   914  000D                     	;# 
   915  000E                     	;# 
   916  0010                     	;# 
   917  0011                     	;# 
   918  0012                     	;# 
   919  0013                     	;# 
   920  0014                     	;# 
   921  0015                     	;# 
   922  0016                     	;# 
   923  0016                     	;# 
   924  0017                     	;# 
   925  0018                     	;# 
   926  0019                     	;# 
   927  001A                     	;# 
   928  001A                     	;# 
   929  001B                     	;# 
   930  001B                     	;# 
   931  001C                     	;# 
   932  001D                     	;# 
   933  001E                     	;# 
   934  001F                     	;# 
   935  008C                     	;# 
   936  008D                     	;# 
   937  008E                     	;# 
   938  0090                     	;# 
   939  0091                     	;# 
   940  0092                     	;# 
   941  0093                     	;# 
   942  0094                     	;# 
   943  0095                     	;# 
   944  0096                     	;# 
   945  0098                     	;# 
   946  0099                     	;# 
   947  009A                     	;# 
   948  009B                     	;# 
   949  009B                     	;# 
   950  009C                     	;# 
   951  009D                     	;# 
   952  009E                     	;# 
   953  009F                     	;# 
   954  010C                     	;# 
   955  010D                     	;# 
   956  010E                     	;# 
   957  0111                     	;# 
   958  0112                     	;# 
   959  0113                     	;# 
   960  0114                     	;# 
   961  0115                     	;# 
   962  0116                     	;# 
   963  0117                     	;# 
   964  0118                     	;# 
   965  0119                     	;# 
   966  011C                     	;# 
   967  018C                     	;# 
   968  018D                     	;# 
   969  018E                     	;# 
   970  0191                     	;# 
   971  0191                     	;# 
   972  0192                     	;# 
   973  0193                     	;# 
   974  0193                     	;# 
   975  0194                     	;# 
   976  0195                     	;# 
   977  0196                     	;# 
   978  0197                     	;# 
   979  0199                     	;# 
   980  0199                     	;# 
   981  0199                     	;# 
   982  019A                     	;# 
   983  019A                     	;# 
   984  019A                     	;# 
   985  019B                     	;# 
   986  019B                     	;# 
   987  019B                     	;# 
   988  019B                     	;# 
   989  019B                     	;# 
   990  019C                     	;# 
   991  019C                     	;# 
   992  019C                     	;# 
   993  019D                     	;# 
   994  019D                     	;# 
   995  019D                     	;# 
   996  019E                     	;# 
   997  019E                     	;# 
   998  019E                     	;# 
   999  019F                     	;# 
  1000  019F                     	;# 
  1001  019F                     	;# 
  1002  019F                     	;# 
  1003  019F                     	;# 
  1004  020C                     	;# 
  1005  020D                     	;# 
  1006  020E                     	;# 
  1007  0211                     	;# 
  1008  0211                     	;# 
  1009  0212                     	;# 
  1010  0212                     	;# 
  1011  0213                     	;# 
  1012  0213                     	;# 
  1013  0214                     	;# 
  1014  0214                     	;# 
  1015  0215                     	;# 
  1016  0215                     	;# 
  1017  0215                     	;# 
  1018  0215                     	;# 
  1019  0216                     	;# 
  1020  0216                     	;# 
  1021  0217                     	;# 
  1022  0217                     	;# 
  1023  028C                     	;# 
  1024  028D                     	;# 
  1025  028E                     	;# 
  1026  0291                     	;# 
  1027  0291                     	;# 
  1028  0292                     	;# 
  1029  0293                     	;# 
  1030  0294                     	;# 
  1031  0298                     	;# 
  1032  0298                     	;# 
  1033  0299                     	;# 
  1034  029A                     	;# 
  1035  029B                     	;# 
  1036  029E                     	;# 
  1037  030C                     	;# 
  1038  030D                     	;# 
  1039  030E                     	;# 
  1040  038C                     	;# 
  1041  038D                     	;# 
  1042  038E                     	;# 
  1043  0391                     	;# 
  1044  0392                     	;# 
  1045  0393                     	;# 
  1046  0394                     	;# 
  1047  0395                     	;# 
  1048  0396                     	;# 
  1049  0397                     	;# 
  1050  0398                     	;# 
  1051  0399                     	;# 
  1052  040E                     	;# 
  1053  0413                     	;# 
  1054  0413                     	;# 
  1055  0414                     	;# 
  1056  0414                     	;# 
  1057  0415                     	;# 
  1058  0416                     	;# 
  1059  0417                     	;# 
  1060  0418                     	;# 
  1061  041A                     	;# 
  1062  041A                     	;# 
  1063  041B                     	;# 
  1064  041B                     	;# 
  1065  041C                     	;# 
  1066  041D                     	;# 
  1067  041E                     	;# 
  1068  041F                     	;# 
  1069  0493                     	;# 
  1070  0494                     	;# 
  1071  0495                     	;# 
  1072  0496                     	;# 
  1073  049A                     	;# 
  1074  049B                     	;# 
  1075  049C                     	;# 
  1076  049D                     	;# 
  1077  058C                     	;# 
  1078  058C                     	;# 
  1079  058D                     	;# 
  1080  058E                     	;# 
  1081  058E                     	;# 
  1082  058F                     	;# 
  1083  0590                     	;# 
  1084  0590                     	;# 
  1085  0591                     	;# 
  1086  0592                     	;# 
  1087  0592                     	;# 
  1088  0593                     	;# 
  1089  0594                     	;# 
  1090  0594                     	;# 
  1091  0595                     	;# 
  1092  0596                     	;# 
  1093  0596                     	;# 
  1094  0597                     	;# 
  1095  0598                     	;# 
  1096  0599                     	;# 
  1097  059A                     	;# 
  1098  059B                     	;# 
  1099  059B                     	;# 
  1100  059C                     	;# 
  1101  059D                     	;# 
  1102  060C                     	;# 
  1103  060C                     	;# 
  1104  060D                     	;# 
  1105  060E                     	;# 
  1106  060F                     	;# 
  1107  060F                     	;# 
  1108  0610                     	;# 
  1109  0611                     	;# 
  1110  0612                     	;# 
  1111  0613                     	;# 
  1112  0614                     	;# 
  1113  0617                     	;# 
  1114  0618                     	;# 
  1115  0619                     	;# 
  1116  061A                     	;# 
  1117  061B                     	;# 
  1118  061C                     	;# 
  1119  0691                     	;# 
  1120  0692                     	;# 
  1121  0693                     	;# 
  1122  0694                     	;# 
  1123  0695                     	;# 
  1124  0696                     	;# 
  1125  0697                     	;# 
  1126  0699                     	;# 
  1127  069A                     	;# 
  1128  0711                     	;# 
  1129  0712                     	;# 
  1130  0713                     	;# 
  1131  0714                     	;# 
  1132  0715                     	;# 
  1133  0718                     	;# 
  1134  0718                     	;# 
  1135  0719                     	;# 
  1136  071A                     	;# 
  1137  071A                     	;# 
  1138  071B                     	;# 
  1139  071C                     	;# 
  1140  071D                     	;# 
  1141  0791                     	;# 
  1142  0791                     	;# 
  1143  0792                     	;# 
  1144  0793                     	;# 
  1145  0793                     	;# 
  1146  0794                     	;# 
  1147  0795                     	;# 
  1148  0795                     	;# 
  1149  0796                     	;# 
  1150  0797                     	;# 
  1151  0797                     	;# 
  1152  0798                     	;# 
  1153  0799                     	;# 
  1154  079A                     	;# 
  1155  080C                     	;# 
  1156  080C                     	;# 
  1157  080D                     	;# 
  1158  080E                     	;# 
  1159  080E                     	;# 
  1160  080F                     	;# 
  1161  0810                     	;# 
  1162  0810                     	;# 
  1163  0811                     	;# 
  1164  0812                     	;# 
  1165  0812                     	;# 
  1166  0813                     	;# 
  1167  0814                     	;# 
  1168  0815                     	;# 
  1169  0816                     	;# 
  1170  0817                     	;# 
  1171  0818                     	;# 
  1172  0819                     	;# 
  1173  081A                     	;# 
  1174  081A                     	;# 
  1175  081B                     	;# 
  1176  081C                     	;# 
  1177  081C                     	;# 
  1178  081D                     	;# 
  1179  088C                     	;# 
  1180  088D                     	;# 
  1181  088E                     	;# 
  1182  088F                     	;# 
  1183  088F                     	;# 
  1184  0890                     	;# 
  1185  0891                     	;# 
  1186  0892                     	;# 
  1187  0893                     	;# 
  1188  0893                     	;# 
  1189  0894                     	;# 
  1190  0895                     	;# 
  1191  0896                     	;# 
  1192  0897                     	;# 
  1193  0897                     	;# 
  1194  0898                     	;# 
  1195  0899                     	;# 
  1196  0D8C                     	;# 
  1197  0D8C                     	;# 
  1198  0D8D                     	;# 
  1199  0D8E                     	;# 
  1200  0D8F                     	;# 
  1201  0D8F                     	;# 
  1202  0D90                     	;# 
  1203  0D91                     	;# 
  1204  0D92                     	;# 
  1205  0D92                     	;# 
  1206  0D93                     	;# 
  1207  0D94                     	;# 
  1208  0D95                     	;# 
  1209  0D95                     	;# 
  1210  0D96                     	;# 
  1211  0D97                     	;# 
  1212  0D98                     	;# 
  1213  0D99                     	;# 
  1214  0D9A                     	;# 
  1215  0D9B                     	;# 
  1216  0D9C                     	;# 
  1217  0D9D                     	;# 
  1218  0D9E                     	;# 
  1219  0D9E                     	;# 
  1220  0D9F                     	;# 
  1221  0DA0                     	;# 
  1222  0DA1                     	;# 
  1223  0DA1                     	;# 
  1224  0DA2                     	;# 
  1225  0DA3                     	;# 
  1226  0DA4                     	;# 
  1227  0DA4                     	;# 
  1228  0DA5                     	;# 
  1229  0DA6                     	;# 
  1230  0DA7                     	;# 
  1231  0DA7                     	;# 
  1232  0DA8                     	;# 
  1233  0DA9                     	;# 
  1234  0DAA                     	;# 
  1235  0DAB                     	;# 
  1236  0DAC                     	;# 
  1237  0DAD                     	;# 
  1238  0DAE                     	;# 
  1239  0DAF                     	;# 
  1240  0E0F                     	;# 
  1241  0E10                     	;# 
  1242  0E11                     	;# 
  1243  0E12                     	;# 
  1244  0E13                     	;# 
  1245  0E14                     	;# 
  1246  0E15                     	;# 
  1247  0E16                     	;# 
  1248  0E17                     	;# 
  1249  0E18                     	;# 
  1250  0E19                     	;# 
  1251  0E1A                     	;# 
  1252  0E1B                     	;# 
  1253  0E1C                     	;# 
  1254  0E1D                     	;# 
  1255  0E1E                     	;# 
  1256  0E1F                     	;# 
  1257  0E20                     	;# 
  1258  0E21                     	;# 
  1259  0E22                     	;# 
  1260  0E23                     	;# 
  1261  0E24                     	;# 
  1262  0E25                     	;# 
  1263  0E26                     	;# 
  1264  0E27                     	;# 
  1265  0E28                     	;# 
  1266  0E29                     	;# 
  1267  0E2A                     	;# 
  1268  0E2B                     	;# 
  1269  0E2C                     	;# 
  1270  0E2D                     	;# 
  1271  0E2E                     	;# 
  1272  0E90                     	;# 
  1273  0E91                     	;# 
  1274  0E92                     	;# 
  1275  0E94                     	;# 
  1276  0E95                     	;# 
  1277  0E9C                     	;# 
  1278  0E9D                     	;# 
  1279  0E9E                     	;# 
  1280  0E9F                     	;# 
  1281  0EA0                     	;# 
  1282  0EA1                     	;# 
  1283  0EA2                     	;# 
  1284  0EA3                     	;# 
  1285  0EA4                     	;# 
  1286  0EA5                     	;# 
  1287  0EA6                     	;# 
  1288  0EA7                     	;# 
  1289  0F0F                     	;# 
  1290  0F10                     	;# 
  1291  0F11                     	;# 
  1292  0F12                     	;# 
  1293  0F13                     	;# 
  1294  0F14                     	;# 
  1295  0F15                     	;# 
  1296  0F16                     	;# 
  1297  0F17                     	;# 
  1298  0F18                     	;# 
  1299  0F19                     	;# 
  1300  0F1A                     	;# 
  1301  0F1B                     	;# 
  1302  0F1C                     	;# 
  1303  0F1D                     	;# 
  1304  0F1E                     	;# 
  1305  0F1F                     	;# 
  1306  0F20                     	;# 
  1307  0F21                     	;# 
  1308  0F22                     	;# 
  1309  0F23                     	;# 
  1310  0F24                     	;# 
  1311  0F25                     	;# 
  1312  0F26                     	;# 
  1313  0F27                     	;# 
  1314  0F28                     	;# 
  1315  0F29                     	;# 
  1316  0F2A                     	;# 
  1317  0F2B                     	;# 
  1318  0F2C                     	;# 
  1319  0F2D                     	;# 
  1320  0F2E                     	;# 
  1321  0F2F                     	;# 
  1322  0F30                     	;# 
  1323  0F31                     	;# 
  1324  0F32                     	;# 
  1325  0F33                     	;# 
  1326  0F34                     	;# 
  1327  0F35                     	;# 
  1328  0F36                     	;# 
  1329  0F37                     	;# 
  1330  0FE4                     	;# 
  1331  0FE5                     	;# 
  1332  0FE6                     	;# 
  1333  0FE7                     	;# 
  1334  0FE8                     	;# 
  1335  0FE9                     	;# 
  1336  0FEA                     	;# 
  1337  0FEB                     	;# 
  1338  0FED                     	;# 
  1339  0FEE                     	;# 
  1340  0FEF                     	;# 
  1341  0000                     	;# 
  1342  0001                     	;# 
  1343  0002                     	;# 
  1344  0003                     	;# 
  1345  0004                     	;# 
  1346  0005                     	;# 
  1347  0006                     	;# 
  1348  0007                     	;# 
  1349  0008                     	;# 
  1350  0009                     	;# 
  1351  000A                     	;# 
  1352  000B                     	;# 
  1353  000C                     	;# 
  1354  000D                     	;# 
  1355  000E                     	;# 
  1356  0010                     	;# 
  1357  0011                     	;# 
  1358  0012                     	;# 
  1359  0013                     	;# 
  1360  0014                     	;# 
  1361  0015                     	;# 
  1362  0016                     	;# 
  1363  0016                     	;# 
  1364  0017                     	;# 
  1365  0018                     	;# 
  1366  0019                     	;# 
  1367  001A                     	;# 
  1368  001A                     	;# 
  1369  001B                     	;# 
  1370  001B                     	;# 
  1371  001C                     	;# 
  1372  001D                     	;# 
  1373  001E                     	;# 
  1374  001F                     	;# 
  1375  008C                     	;# 
  1376  008D                     	;# 
  1377  008E                     	;# 
  1378  0090                     	;# 
  1379  0091                     	;# 
  1380  0092                     	;# 
  1381  0093                     	;# 
  1382  0094                     	;# 
  1383  0095                     	;# 
  1384  0096                     	;# 
  1385  0098                     	;# 
  1386  0099                     	;# 
  1387  009A                     	;# 
  1388  009B                     	;# 
  1389  009B                     	;# 
  1390  009C                     	;# 
  1391  009D                     	;# 
  1392  009E                     	;# 
  1393  009F                     	;# 
  1394  010C                     	;# 
  1395  010D                     	;# 
  1396  010E                     	;# 
  1397  0111                     	;# 
  1398  0112                     	;# 
  1399  0113                     	;# 
  1400  0114                     	;# 
  1401  0115                     	;# 
  1402  0116                     	;# 
  1403  0117                     	;# 
  1404  0118                     	;# 
  1405  0119                     	;# 
  1406  011C                     	;# 
  1407  018C                     	;# 
  1408  018D                     	;# 
  1409  018E                     	;# 
  1410  0191                     	;# 
  1411  0191                     	;# 
  1412  0192                     	;# 
  1413  0193                     	;# 
  1414  0193                     	;# 
  1415  0194                     	;# 
  1416  0195                     	;# 
  1417  0196                     	;# 
  1418  0197                     	;# 
  1419  0199                     	;# 
  1420  0199                     	;# 
  1421  0199                     	;# 
  1422  019A                     	;# 
  1423  019A                     	;# 
  1424  019A                     	;# 
  1425  019B                     	;# 
  1426  019B                     	;# 
  1427  019B                     	;# 
  1428  019B                     	;# 
  1429  019B                     	;# 
  1430  019C                     	;# 
  1431  019C                     	;# 
  1432  019C                     	;# 
  1433  019D                     	;# 
  1434  019D                     	;# 
  1435  019D                     	;# 
  1436  019E                     	;# 
  1437  019E                     	;# 
  1438  019E                     	;# 
  1439  019F                     	;# 
  1440  019F                     	;# 
  1441  019F                     	;# 
  1442  019F                     	;# 
  1443  019F                     	;# 
  1444  020C                     	;# 
  1445  020D                     	;# 
  1446  020E                     	;# 
  1447  0211                     	;# 
  1448  0211                     	;# 
  1449  0212                     	;# 
  1450  0212                     	;# 
  1451  0213                     	;# 
  1452  0213                     	;# 
  1453  0214                     	;# 
  1454  0214                     	;# 
  1455  0215                     	;# 
  1456  0215                     	;# 
  1457  0215                     	;# 
  1458  0215                     	;# 
  1459  0216                     	;# 
  1460  0216                     	;# 
  1461  0217                     	;# 
  1462  0217                     	;# 
  1463  028C                     	;# 
  1464  028D                     	;# 
  1465  028E                     	;# 
  1466  0291                     	;# 
  1467  0291                     	;# 
  1468  0292                     	;# 
  1469  0293                     	;# 
  1470  0294                     	;# 
  1471  0298                     	;# 
  1472  0298                     	;# 
  1473  0299                     	;# 
  1474  029A                     	;# 
  1475  029B                     	;# 
  1476  029E                     	;# 
  1477  030C                     	;# 
  1478  030D                     	;# 
  1479  030E                     	;# 
  1480  038C                     	;# 
  1481  038D                     	;# 
  1482  038E                     	;# 
  1483  0391                     	;# 
  1484  0392                     	;# 
  1485  0393                     	;# 
  1486  0394                     	;# 
  1487  0395                     	;# 
  1488  0396                     	;# 
  1489  0397                     	;# 
  1490  0398                     	;# 
  1491  0399                     	;# 
  1492  040E                     	;# 
  1493  0413                     	;# 
  1494  0413                     	;# 
  1495  0414                     	;# 
  1496  0414                     	;# 
  1497  0415                     	;# 
  1498  0416                     	;# 
  1499  0417                     	;# 
  1500  0418                     	;# 
  1501  041A                     	;# 
  1502  041A                     	;# 
  1503  041B                     	;# 
  1504  041B                     	;# 
  1505  041C                     	;# 
  1506  041D                     	;# 
  1507  041E                     	;# 
  1508  041F                     	;# 
  1509  0493                     	;# 
  1510  0494                     	;# 
  1511  0495                     	;# 
  1512  0496                     	;# 
  1513  049A                     	;# 
  1514  049B                     	;# 
  1515  049C                     	;# 
  1516  049D                     	;# 
  1517  058C                     	;# 
  1518  058C                     	;# 
  1519  058D                     	;# 
  1520  058E                     	;# 
  1521  058E                     	;# 
  1522  058F                     	;# 
  1523  0590                     	;# 
  1524  0590                     	;# 
  1525  0591                     	;# 
  1526  0592                     	;# 
  1527  0592                     	;# 
  1528  0593                     	;# 
  1529  0594                     	;# 
  1530  0594                     	;# 
  1531  0595                     	;# 
  1532  0596                     	;# 
  1533  0596                     	;# 
  1534  0597                     	;# 
  1535  0598                     	;# 
  1536  0599                     	;# 
  1537  059A                     	;# 
  1538  059B                     	;# 
  1539  059B                     	;# 
  1540  059C                     	;# 
  1541  059D                     	;# 
  1542  060C                     	;# 
  1543  060C                     	;# 
  1544  060D                     	;# 
  1545  060E                     	;# 
  1546  060F                     	;# 
  1547  060F                     	;# 
  1548  0610                     	;# 
  1549  0611                     	;# 
  1550  0612                     	;# 
  1551  0613                     	;# 
  1552  0614                     	;# 
  1553  0617                     	;# 
  1554  0618                     	;# 
  1555  0619                     	;# 
  1556  061A                     	;# 
  1557  061B                     	;# 
  1558  061C                     	;# 
  1559  0691                     	;# 
  1560  0692                     	;# 
  1561  0693                     	;# 
  1562  0694                     	;# 
  1563  0695                     	;# 
  1564  0696                     	;# 
  1565  0697                     	;# 
  1566  0699                     	;# 
  1567  069A                     	;# 
  1568  0711                     	;# 
  1569  0712                     	;# 
  1570  0713                     	;# 
  1571  0714                     	;# 
  1572  0715                     	;# 
  1573  0718                     	;# 
  1574  0718                     	;# 
  1575  0719                     	;# 
  1576  071A                     	;# 
  1577  071A                     	;# 
  1578  071B                     	;# 
  1579  071C                     	;# 
  1580  071D                     	;# 
  1581  0791                     	;# 
  1582  0791                     	;# 
  1583  0792                     	;# 
  1584  0793                     	;# 
  1585  0793                     	;# 
  1586  0794                     	;# 
  1587  0795                     	;# 
  1588  0795                     	;# 
  1589  0796                     	;# 
  1590  0797                     	;# 
  1591  0797                     	;# 
  1592  0798                     	;# 
  1593  0799                     	;# 
  1594  079A                     	;# 
  1595  080C                     	;# 
  1596  080C                     	;# 
  1597  080D                     	;# 
  1598  080E                     	;# 
  1599  080E                     	;# 
  1600  080F                     	;# 
  1601  0810                     	;# 
  1602  0810                     	;# 
  1603  0811                     	;# 
  1604  0812                     	;# 
  1605  0812                     	;# 
  1606  0813                     	;# 
  1607  0814                     	;# 
  1608  0815                     	;# 
  1609  0816                     	;# 
  1610  0817                     	;# 
  1611  0818                     	;# 
  1612  0819                     	;# 
  1613  081A                     	;# 
  1614  081A                     	;# 
  1615  081B                     	;# 
  1616  081C                     	;# 
  1617  081C                     	;# 
  1618  081D                     	;# 
  1619  088C                     	;# 
  1620  088D                     	;# 
  1621  088E                     	;# 
  1622  088F                     	;# 
  1623  088F                     	;# 
  1624  0890                     	;# 
  1625  0891                     	;# 
  1626  0892                     	;# 
  1627  0893                     	;# 
  1628  0893                     	;# 
  1629  0894                     	;# 
  1630  0895                     	;# 
  1631  0896                     	;# 
  1632  0897                     	;# 
  1633  0897                     	;# 
  1634  0898                     	;# 
  1635  0899                     	;# 
  1636  0D8C                     	;# 
  1637  0D8C                     	;# 
  1638  0D8D                     	;# 
  1639  0D8E                     	;# 
  1640  0D8F                     	;# 
  1641  0D8F                     	;# 
  1642  0D90                     	;# 
  1643  0D91                     	;# 
  1644  0D92                     	;# 
  1645  0D92                     	;# 
  1646  0D93                     	;# 
  1647  0D94                     	;# 
  1648  0D95                     	;# 
  1649  0D95                     	;# 
  1650  0D96                     	;# 
  1651  0D97                     	;# 
  1652  0D98                     	;# 
  1653  0D99                     	;# 
  1654  0D9A                     	;# 
  1655  0D9B                     	;# 
  1656  0D9C                     	;# 
  1657  0D9D                     	;# 
  1658  0D9E                     	;# 
  1659  0D9E                     	;# 
  1660  0D9F                     	;# 
  1661  0DA0                     	;# 
  1662  0DA1                     	;# 
  1663  0DA1                     	;# 
  1664  0DA2                     	;# 
  1665  0DA3                     	;# 
  1666  0DA4                     	;# 
  1667  0DA4                     	;# 
  1668  0DA5                     	;# 
  1669  0DA6                     	;# 
  1670  0DA7                     	;# 
  1671  0DA7                     	;# 
  1672  0DA8                     	;# 
  1673  0DA9                     	;# 
  1674  0DAA                     	;# 
  1675  0DAB                     	;# 
  1676  0DAC                     	;# 
  1677  0DAD                     	;# 
  1678  0DAE                     	;# 
  1679  0DAF                     	;# 
  1680  0E0F                     	;# 
  1681  0E10                     	;# 
  1682  0E11                     	;# 
  1683  0E12                     	;# 
  1684  0E13                     	;# 
  1685  0E14                     	;# 
  1686  0E15                     	;# 
  1687  0E16                     	;# 
  1688  0E17                     	;# 
  1689  0E18                     	;# 
  1690  0E19                     	;# 
  1691  0E1A                     	;# 
  1692  0E1B                     	;# 
  1693  0E1C                     	;# 
  1694  0E1D                     	;# 
  1695  0E1E                     	;# 
  1696  0E1F                     	;# 
  1697  0E20                     	;# 
  1698  0E21                     	;# 
  1699  0E22                     	;# 
  1700  0E23                     	;# 
  1701  0E24                     	;# 
  1702  0E25                     	;# 
  1703  0E26                     	;# 
  1704  0E27                     	;# 
  1705  0E28                     	;# 
  1706  0E29                     	;# 
  1707  0E2A                     	;# 
  1708  0E2B                     	;# 
  1709  0E2C                     	;# 
  1710  0E2D                     	;# 
  1711  0E2E                     	;# 
  1712  0E90                     	;# 
  1713  0E91                     	;# 
  1714  0E92                     	;# 
  1715  0E94                     	;# 
  1716  0E95                     	;# 
  1717  0E9C                     	;# 
  1718  0E9D                     	;# 
  1719  0E9E                     	;# 
  1720  0E9F                     	;# 
  1721  0EA0                     	;# 
  1722  0EA1                     	;# 
  1723  0EA2                     	;# 
  1724  0EA3                     	;# 
  1725  0EA4                     	;# 
  1726  0EA5                     	;# 
  1727  0EA6                     	;# 
  1728  0EA7                     	;# 
  1729  0F0F                     	;# 
  1730  0F10                     	;# 
  1731  0F11                     	;# 
  1732  0F12                     	;# 
  1733  0F13                     	;# 
  1734  0F14                     	;# 
  1735  0F15                     	;# 
  1736  0F16                     	;# 
  1737  0F17                     	;# 
  1738  0F18                     	;# 
  1739  0F19                     	;# 
  1740  0F1A                     	;# 
  1741  0F1B                     	;# 
  1742  0F1C                     	;# 
  1743  0F1D                     	;# 
  1744  0F1E                     	;# 
  1745  0F1F                     	;# 
  1746  0F20                     	;# 
  1747  0F21                     	;# 
  1748  0F22                     	;# 
  1749  0F23                     	;# 
  1750  0F24                     	;# 
  1751  0F25                     	;# 
  1752  0F26                     	;# 
  1753  0F27                     	;# 
  1754  0F28                     	;# 
  1755  0F29                     	;# 
  1756  0F2A                     	;# 
  1757  0F2B                     	;# 
  1758  0F2C                     	;# 
  1759  0F2D                     	;# 
  1760  0F2E                     	;# 
  1761  0F2F                     	;# 
  1762  0F30                     	;# 
  1763  0F31                     	;# 
  1764  0F32                     	;# 
  1765  0F33                     	;# 
  1766  0F34                     	;# 
  1767  0F35                     	;# 
  1768  0F36                     	;# 
  1769  0F37                     	;# 
  1770  0FE4                     	;# 
  1771  0FE5                     	;# 
  1772  0FE6                     	;# 
  1773  0FE7                     	;# 
  1774  0FE8                     	;# 
  1775  0FE9                     	;# 
  1776  0FEA                     	;# 
  1777  0FEB                     	;# 
  1778  0FED                     	;# 
  1779  0FEE                     	;# 
  1780  0FEF                     	;# 
  1781  0000                     	;# 
  1782  0001                     	;# 
  1783  0002                     	;# 
  1784  0003                     	;# 
  1785  0004                     	;# 
  1786  0005                     	;# 
  1787  0006                     	;# 
  1788  0007                     	;# 
  1789  0008                     	;# 
  1790  0009                     	;# 
  1791  000A                     	;# 
  1792  000B                     	;# 
  1793  000C                     	;# 
  1794  000D                     	;# 
  1795  000E                     	;# 
  1796  0010                     	;# 
  1797  0011                     	;# 
  1798  0012                     	;# 
  1799  0013                     	;# 
  1800  0014                     	;# 
  1801  0015                     	;# 
  1802  0016                     	;# 
  1803  0016                     	;# 
  1804  0017                     	;# 
  1805  0018                     	;# 
  1806  0019                     	;# 
  1807  001A                     	;# 
  1808  001A                     	;# 
  1809  001B                     	;# 
  1810  001B                     	;# 
  1811  001C                     	;# 
  1812  001D                     	;# 
  1813  001E                     	;# 
  1814  001F                     	;# 
  1815  008C                     	;# 
  1816  008D                     	;# 
  1817  008E                     	;# 
  1818  0090                     	;# 
  1819  0091                     	;# 
  1820  0092                     	;# 
  1821  0093                     	;# 
  1822  0094                     	;# 
  1823  0095                     	;# 
  1824  0096                     	;# 
  1825  0098                     	;# 
  1826  0099                     	;# 
  1827  009A                     	;# 
  1828  009B                     	;# 
  1829  009B                     	;# 
  1830  009C                     	;# 
  1831  009D                     	;# 
  1832  009E                     	;# 
  1833  009F                     	;# 
  1834  010C                     	;# 
  1835  010D                     	;# 
  1836  010E                     	;# 
  1837  0111                     	;# 
  1838  0112                     	;# 
  1839  0113                     	;# 
  1840  0114                     	;# 
  1841  0115                     	;# 
  1842  0116                     	;# 
  1843  0117                     	;# 
  1844  0118                     	;# 
  1845  0119                     	;# 
  1846  011C                     	;# 
  1847  018C                     	;# 
  1848  018D                     	;# 
  1849  018E                     	;# 
  1850  0191                     	;# 
  1851  0191                     	;# 
  1852  0192                     	;# 
  1853  0193                     	;# 
  1854  0193                     	;# 
  1855  0194                     	;# 
  1856  0195                     	;# 
  1857  0196                     	;# 
  1858  0197                     	;# 
  1859  0199                     	;# 
  1860  0199                     	;# 
  1861  0199                     	;# 
  1862  019A                     	;# 
  1863  019A                     	;# 
  1864  019A                     	;# 
  1865  019B                     	;# 
  1866  019B                     	;# 
  1867  019B                     	;# 
  1868  019B                     	;# 
  1869  019B                     	;# 
  1870  019C                     	;# 
  1871  019C                     	;# 
  1872  019C                     	;# 
  1873  019D                     	;# 
  1874  019D                     	;# 
  1875  019D                     	;# 
  1876  019E                     	;# 
  1877  019E                     	;# 
  1878  019E                     	;# 
  1879  019F                     	;# 
  1880  019F                     	;# 
  1881  019F                     	;# 
  1882  019F                     	;# 
  1883  019F                     	;# 
  1884  020C                     	;# 
  1885  020D                     	;# 
  1886  020E                     	;# 
  1887  0211                     	;# 
  1888  0211                     	;# 
  1889  0212                     	;# 
  1890  0212                     	;# 
  1891  0213                     	;# 
  1892  0213                     	;# 
  1893  0214                     	;# 
  1894  0214                     	;# 
  1895  0215                     	;# 
  1896  0215                     	;# 
  1897  0215                     	;# 
  1898  0215                     	;# 
  1899  0216                     	;# 
  1900  0216                     	;# 
  1901  0217                     	;# 
  1902  0217                     	;# 
  1903  028C                     	;# 
  1904  028D                     	;# 
  1905  028E                     	;# 
  1906  0291                     	;# 
  1907  0291                     	;# 
  1908  0292                     	;# 
  1909  0293                     	;# 
  1910  0294                     	;# 
  1911  0298                     	;# 
  1912  0298                     	;# 
  1913  0299                     	;# 
  1914  029A                     	;# 
  1915  029B                     	;# 
  1916  029E                     	;# 
  1917  030C                     	;# 
  1918  030D                     	;# 
  1919  030E                     	;# 
  1920  038C                     	;# 
  1921  038D                     	;# 
  1922  038E                     	;# 
  1923  0391                     	;# 
  1924  0392                     	;# 
  1925  0393                     	;# 
  1926  0394                     	;# 
  1927  0395                     	;# 
  1928  0396                     	;# 
  1929  0397                     	;# 
  1930  0398                     	;# 
  1931  0399                     	;# 
  1932  040E                     	;# 
  1933  0413                     	;# 
  1934  0413                     	;# 
  1935  0414                     	;# 
  1936  0414                     	;# 
  1937  0415                     	;# 
  1938  0416                     	;# 
  1939  0417                     	;# 
  1940  0418                     	;# 
  1941  041A                     	;# 
  1942  041A                     	;# 
  1943  041B                     	;# 
  1944  041B                     	;# 
  1945  041C                     	;# 
  1946  041D                     	;# 
  1947  041E                     	;# 
  1948  041F                     	;# 
  1949  0493                     	;# 
  1950  0494                     	;# 
  1951  0495                     	;# 
  1952  0496                     	;# 
  1953  049A                     	;# 
  1954  049B                     	;# 
  1955  049C                     	;# 
  1956  049D                     	;# 
  1957  058C                     	;# 
  1958  058C                     	;# 
  1959  058D                     	;# 
  1960  058E                     	;# 
  1961  058E                     	;# 
  1962  058F                     	;# 
  1963  0590                     	;# 
  1964  0590                     	;# 
  1965  0591                     	;# 
  1966  0592                     	;# 
  1967  0592                     	;# 
  1968  0593                     	;# 
  1969  0594                     	;# 
  1970  0594                     	;# 
  1971  0595                     	;# 
  1972  0596                     	;# 
  1973  0596                     	;# 
  1974  0597                     	;# 
  1975  0598                     	;# 
  1976  0599                     	;# 
  1977  059A                     	;# 
  1978  059B                     	;# 
  1979  059B                     	;# 
  1980  059C                     	;# 
  1981  059D                     	;# 
  1982  060C                     	;# 
  1983  060C                     	;# 
  1984  060D                     	;# 
  1985  060E                     	;# 
  1986  060F                     	;# 
  1987  060F                     	;# 
  1988  0610                     	;# 
  1989  0611                     	;# 
  1990  0612                     	;# 
  1991  0613                     	;# 
  1992  0614                     	;# 
  1993  0617                     	;# 
  1994  0618                     	;# 
  1995  0619                     	;# 
  1996  061A                     	;# 
  1997  061B                     	;# 
  1998  061C                     	;# 
  1999  0691                     	;# 
  2000  0692                     	;# 
  2001  0693                     	;# 
  2002  0694                     	;# 
  2003  0695                     	;# 
  2004  0696                     	;# 
  2005  0697                     	;# 
  2006  0699                     	;# 
  2007  069A                     	;# 
  2008  0711                     	;# 
  2009  0712                     	;# 
  2010  0713                     	;# 
  2011  0714                     	;# 
  2012  0715                     	;# 
  2013  0718                     	;# 
  2014  0718                     	;# 
  2015  0719                     	;# 
  2016  071A                     	;# 
  2017  071A                     	;# 
  2018  071B                     	;# 
  2019  071C                     	;# 
  2020  071D                     	;# 
  2021  0791                     	;# 
  2022  0791                     	;# 
  2023  0792                     	;# 
  2024  0793                     	;# 
  2025  0793                     	;# 
  2026  0794                     	;# 
  2027  0795                     	;# 
  2028  0795                     	;# 
  2029  0796                     	;# 
  2030  0797                     	;# 
  2031  0797                     	;# 
  2032  0798                     	;# 
  2033  0799                     	;# 
  2034  079A                     	;# 
  2035  080C                     	;# 
  2036  080C                     	;# 
  2037  080D                     	;# 
  2038  080E                     	;# 
  2039  080E                     	;# 
  2040  080F                     	;# 
  2041  0810                     	;# 
  2042  0810                     	;# 
  2043  0811                     	;# 
  2044  0812                     	;# 
  2045  0812                     	;# 
  2046  0813                     	;# 
  2047  0814                     	;# 
  2048  0815                     	;# 
  2049  0816                     	;# 
  2050  0817                     	;# 
  2051  0818                     	;# 
  2052  0819                     	;# 
  2053  081A                     	;# 
  2054  081A                     	;# 
  2055  081B                     	;# 
  2056  081C                     	;# 
  2057  081C                     	;# 
  2058  081D                     	;# 
  2059  088C                     	;# 
  2060  088D                     	;# 
  2061  088E                     	;# 
  2062  088F                     	;# 
  2063  088F                     	;# 
  2064  0890                     	;# 
  2065  0891                     	;# 
  2066  0892                     	;# 
  2067  0893                     	;# 
  2068  0893                     	;# 
  2069  0894                     	;# 
  2070  0895                     	;# 
  2071  0896                     	;# 
  2072  0897                     	;# 
  2073  0897                     	;# 
  2074  0898                     	;# 
  2075  0899                     	;# 
  2076  0D8C                     	;# 
  2077  0D8C                     	;# 
  2078  0D8D                     	;# 
  2079  0D8E                     	;# 
  2080  0D8F                     	;# 
  2081  0D8F                     	;# 
  2082  0D90                     	;# 
  2083  0D91                     	;# 
  2084  0D92                     	;# 
  2085  0D92                     	;# 
  2086  0D93                     	;# 
  2087  0D94                     	;# 
  2088  0D95                     	;# 
  2089  0D95                     	;# 
  2090  0D96                     	;# 
  2091  0D97                     	;# 
  2092  0D98                     	;# 
  2093  0D99                     	;# 
  2094  0D9A                     	;# 
  2095  0D9B                     	;# 
  2096  0D9C                     	;# 
  2097  0D9D                     	;# 
  2098  0D9E                     	;# 
  2099  0D9E                     	;# 
  2100  0D9F                     	;# 
  2101  0DA0                     	;# 
  2102  0DA1                     	;# 
  2103  0DA1                     	;# 
  2104  0DA2                     	;# 
  2105  0DA3                     	;# 
  2106  0DA4                     	;# 
  2107  0DA4                     	;# 
  2108  0DA5                     	;# 
  2109  0DA6                     	;# 
  2110  0DA7                     	;# 
  2111  0DA7                     	;# 
  2112  0DA8                     	;# 
  2113  0DA9                     	;# 
  2114  0DAA                     	;# 
  2115  0DAB                     	;# 
  2116  0DAC                     	;# 
  2117  0DAD                     	;# 
  2118  0DAE                     	;# 
  2119  0DAF                     	;# 
  2120  0E0F                     	;# 
  2121  0E10                     	;# 
  2122  0E11                     	;# 
  2123  0E12                     	;# 
  2124  0E13                     	;# 
  2125  0E14                     	;# 
  2126  0E15                     	;# 
  2127  0E16                     	;# 
  2128  0E17                     	;# 
  2129  0E18                     	;# 
  2130  0E19                     	;# 
  2131  0E1A                     	;# 
  2132  0E1B                     	;# 
  2133  0E1C                     	;# 
  2134  0E1D                     	;# 
  2135  0E1E                     	;# 
  2136  0E1F                     	;# 
  2137  0E20                     	;# 
  2138  0E21                     	;# 
  2139  0E22                     	;# 
  2140  0E23                     	;# 
  2141  0E24                     	;# 
  2142  0E25                     	;# 
  2143  0E26                     	;# 
  2144  0E27                     	;# 
  2145  0E28                     	;# 
  2146  0E29                     	;# 
  2147  0E2A                     	;# 
  2148  0E2B                     	;# 
  2149  0E2C                     	;# 
  2150  0E2D                     	;# 
  2151  0E2E                     	;# 
  2152  0E90                     	;# 
  2153  0E91                     	;# 
  2154  0E92                     	;# 
  2155  0E94                     	;# 
  2156  0E95                     	;# 
  2157  0E9C                     	;# 
  2158  0E9D                     	;# 
  2159  0E9E                     	;# 
  2160  0E9F                     	;# 
  2161  0EA0                     	;# 
  2162  0EA1                     	;# 
  2163  0EA2                     	;# 
  2164  0EA3                     	;# 
  2165  0EA4                     	;# 
  2166  0EA5                     	;# 
  2167  0EA6                     	;# 
  2168  0EA7                     	;# 
  2169  0F0F                     	;# 
  2170  0F10                     	;# 
  2171  0F11                     	;# 
  2172  0F12                     	;# 
  2173  0F13                     	;# 
  2174  0F14                     	;# 
  2175  0F15                     	;# 
  2176  0F16                     	;# 
  2177  0F17                     	;# 
  2178  0F18                     	;# 
  2179  0F19                     	;# 
  2180  0F1A                     	;# 
  2181  0F1B                     	;# 
  2182  0F1C                     	;# 
  2183  0F1D                     	;# 
  2184  0F1E                     	;# 
  2185  0F1F                     	;# 
  2186  0F20                     	;# 
  2187  0F21                     	;# 
  2188  0F22                     	;# 
  2189  0F23                     	;# 
  2190  0F24                     	;# 
  2191  0F25                     	;# 
  2192  0F26                     	;# 
  2193  0F27                     	;# 
  2194  0F28                     	;# 
  2195  0F29                     	;# 
  2196  0F2A                     	;# 
  2197  0F2B                     	;# 
  2198  0F2C                     	;# 
  2199  0F2D                     	;# 
  2200  0F2E                     	;# 
  2201  0F2F                     	;# 
  2202  0F30                     	;# 
  2203  0F31                     	;# 
  2204  0F32                     	;# 
  2205  0F33                     	;# 
  2206  0F34                     	;# 
  2207  0F35                     	;# 
  2208  0F36                     	;# 
  2209  0F37                     	;# 
  2210  0FE4                     	;# 
  2211  0FE5                     	;# 
  2212  0FE6                     	;# 
  2213  0FE7                     	;# 
  2214  0FE8                     	;# 
  2215  0FE9                     	;# 
  2216  0FEA                     	;# 
  2217  0FEB                     	;# 
  2218  0FED                     	;# 
  2219  0FEE                     	;# 
  2220  0FEF                     	;# 
  2221  0000                     	;# 
  2222  0001                     	;# 
  2223  0002                     	;# 
  2224  0003                     	;# 
  2225  0004                     	;# 
  2226  0005                     	;# 
  2227  0006                     	;# 
  2228  0007                     	;# 
  2229  0008                     	;# 
  2230  0009                     	;# 
  2231  000A                     	;# 
  2232  000B                     	;# 
  2233  000C                     	;# 
  2234  000D                     	;# 
  2235  000E                     	;# 
  2236  0010                     	;# 
  2237  0011                     	;# 
  2238  0012                     	;# 
  2239  0013                     	;# 
  2240  0014                     	;# 
  2241  0015                     	;# 
  2242  0016                     	;# 
  2243  0016                     	;# 
  2244  0017                     	;# 
  2245  0018                     	;# 
  2246  0019                     	;# 
  2247  001A                     	;# 
  2248  001A                     	;# 
  2249  001B                     	;# 
  2250  001B                     	;# 
  2251  001C                     	;# 
  2252  001D                     	;# 
  2253  001E                     	;# 
  2254  001F                     	;# 
  2255  008C                     	;# 
  2256  008D                     	;# 
  2257  008E                     	;# 
  2258  0090                     	;# 
  2259  0091                     	;# 
  2260  0092                     	;# 
  2261  0093                     	;# 
  2262  0094                     	;# 
  2263  0095                     	;# 
  2264  0096                     	;# 
  2265  0098                     	;# 
  2266  0099                     	;# 
  2267  009A                     	;# 
  2268  009B                     	;# 
  2269  009B                     	;# 
  2270  009C                     	;# 
  2271  009D                     	;# 
  2272  009E                     	;# 
  2273  009F                     	;# 
  2274  010C                     	;# 
  2275  010D                     	;# 
  2276  010E                     	;# 
  2277  0111                     	;# 
  2278  0112                     	;# 
  2279  0113                     	;# 
  2280  0114                     	;# 
  2281  0115                     	;# 
  2282  0116                     	;# 
  2283  0117                     	;# 
  2284  0118                     	;# 
  2285  0119                     	;# 
  2286  011C                     	;# 
  2287  018C                     	;# 
  2288  018D                     	;# 
  2289  018E                     	;# 
  2290  0191                     	;# 
  2291  0191                     	;# 
  2292  0192                     	;# 
  2293  0193                     	;# 
  2294  0193                     	;# 
  2295  0194                     	;# 
  2296  0195                     	;# 
  2297  0196                     	;# 
  2298  0197                     	;# 
  2299  0199                     	;# 
  2300  0199                     	;# 
  2301  0199                     	;# 
  2302  019A                     	;# 
  2303  019A                     	;# 
  2304  019A                     	;# 
  2305  019B                     	;# 
  2306  019B                     	;# 
  2307  019B                     	;# 
  2308  019B                     	;# 
  2309  019B                     	;# 
  2310  019C                     	;# 
  2311  019C                     	;# 
  2312  019C                     	;# 
  2313  019D                     	;# 
  2314  019D                     	;# 
  2315  019D                     	;# 
  2316  019E                     	;# 
  2317  019E                     	;# 
  2318  019E                     	;# 
  2319  019F                     	;# 
  2320  019F                     	;# 
  2321  019F                     	;# 
  2322  019F                     	;# 
  2323  019F                     	;# 
  2324  020C                     	;# 
  2325  020D                     	;# 
  2326  020E                     	;# 
  2327  0211                     	;# 
  2328  0211                     	;# 
  2329  0212                     	;# 
  2330  0212                     	;# 
  2331  0213                     	;# 
  2332  0213                     	;# 
  2333  0214                     	;# 
  2334  0214                     	;# 
  2335  0215                     	;# 
  2336  0215                     	;# 
  2337  0215                     	;# 
  2338  0215                     	;# 
  2339  0216                     	;# 
  2340  0216                     	;# 
  2341  0217                     	;# 
  2342  0217                     	;# 
  2343  028C                     	;# 
  2344  028D                     	;# 
  2345  028E                     	;# 
  2346  0291                     	;# 
  2347  0291                     	;# 
  2348  0292                     	;# 
  2349  0293                     	;# 
  2350  0294                     	;# 
  2351  0298                     	;# 
  2352  0298                     	;# 
  2353  0299                     	;# 
  2354  029A                     	;# 
  2355  029B                     	;# 
  2356  029E                     	;# 
  2357  030C                     	;# 
  2358  030D                     	;# 
  2359  030E                     	;# 
  2360  038C                     	;# 
  2361  038D                     	;# 
  2362  038E                     	;# 
  2363  0391                     	;# 
  2364  0392                     	;# 
  2365  0393                     	;# 
  2366  0394                     	;# 
  2367  0395                     	;# 
  2368  0396                     	;# 
  2369  0397                     	;# 
  2370  0398                     	;# 
  2371  0399                     	;# 
  2372  040E                     	;# 
  2373  0413                     	;# 
  2374  0413                     	;# 
  2375  0414                     	;# 
  2376  0414                     	;# 
  2377  0415                     	;# 
  2378  0416                     	;# 
  2379  0417                     	;# 
  2380  0418                     	;# 
  2381  041A                     	;# 
  2382  041A                     	;# 
  2383  041B                     	;# 
  2384  041B                     	;# 
  2385  041C                     	;# 
  2386  041D                     	;# 
  2387  041E                     	;# 
  2388  041F                     	;# 
  2389  0493                     	;# 
  2390  0494                     	;# 
  2391  0495                     	;# 
  2392  0496                     	;# 
  2393  049A                     	;# 
  2394  049B                     	;# 
  2395  049C                     	;# 
  2396  049D                     	;# 
  2397  058C                     	;# 
  2398  058C                     	;# 
  2399  058D                     	;# 
  2400  058E                     	;# 
  2401  058E                     	;# 
  2402  058F                     	;# 
  2403  0590                     	;# 
  2404  0590                     	;# 
  2405  0591                     	;# 
  2406  0592                     	;# 
  2407  0592                     	;# 
  2408  0593                     	;# 
  2409  0594                     	;# 
  2410  0594                     	;# 
  2411  0595                     	;# 
  2412  0596                     	;# 
  2413  0596                     	;# 
  2414  0597                     	;# 
  2415  0598                     	;# 
  2416  0599                     	;# 
  2417  059A                     	;# 
  2418  059B                     	;# 
  2419  059B                     	;# 
  2420  059C                     	;# 
  2421  059D                     	;# 
  2422  060C                     	;# 
  2423  060C                     	;# 
  2424  060D                     	;# 
  2425  060E                     	;# 
  2426  060F                     	;# 
  2427  060F                     	;# 
  2428  0610                     	;# 
  2429  0611                     	;# 
  2430  0612                     	;# 
  2431  0613                     	;# 
  2432  0614                     	;# 
  2433  0617                     	;# 
  2434  0618                     	;# 
  2435  0619                     	;# 
  2436  061A                     	;# 
  2437  061B                     	;# 
  2438  061C                     	;# 
  2439  0691                     	;# 
  2440  0692                     	;# 
  2441  0693                     	;# 
  2442  0694                     	;# 
  2443  0695                     	;# 
  2444  0696                     	;# 
  2445  0697                     	;# 
  2446  0699                     	;# 
  2447  069A                     	;# 
  2448  0711                     	;# 
  2449  0712                     	;# 
  2450  0713                     	;# 
  2451  0714                     	;# 
  2452  0715                     	;# 
  2453  0718                     	;# 
  2454  0718                     	;# 
  2455  0719                     	;# 
  2456  071A                     	;# 
  2457  071A                     	;# 
  2458  071B                     	;# 
  2459  071C                     	;# 
  2460  071D                     	;# 
  2461  0791                     	;# 
  2462  0791                     	;# 
  2463  0792                     	;# 
  2464  0793                     	;# 
  2465  0793                     	;# 
  2466  0794                     	;# 
  2467  0795                     	;# 
  2468  0795                     	;# 
  2469  0796                     	;# 
  2470  0797                     	;# 
  2471  0797                     	;# 
  2472  0798                     	;# 
  2473  0799                     	;# 
  2474  079A                     	;# 
  2475  080C                     	;# 
  2476  080C                     	;# 
  2477  080D                     	;# 
  2478  080E                     	;# 
  2479  080E                     	;# 
  2480  080F                     	;# 
  2481  0810                     	;# 
  2482  0810                     	;# 
  2483  0811                     	;# 
  2484  0812                     	;# 
  2485  0812                     	;# 
  2486  0813                     	;# 
  2487  0814                     	;# 
  2488  0815                     	;# 
  2489  0816                     	;# 
  2490  0817                     	;# 
  2491  0818                     	;# 
  2492  0819                     	;# 
  2493  081A                     	;# 
  2494  081A                     	;# 
  2495  081B                     	;# 
  2496  081C                     	;# 
  2497  081C                     	;# 
  2498  081D                     	;# 
  2499  088C                     	;# 
  2500  088D                     	;# 
  2501  088E                     	;# 
  2502  088F                     	;# 
  2503  088F                     	;# 
  2504  0890                     	;# 
  2505  0891                     	;# 
  2506  0892                     	;# 
  2507  0893                     	;# 
  2508  0893                     	;# 
  2509  0894                     	;# 
  2510  0895                     	;# 
  2511  0896                     	;# 
  2512  0897                     	;# 
  2513  0897                     	;# 
  2514  0898                     	;# 
  2515  0899                     	;# 
  2516  0D8C                     	;# 
  2517  0D8C                     	;# 
  2518  0D8D                     	;# 
  2519  0D8E                     	;# 
  2520  0D8F                     	;# 
  2521  0D8F                     	;# 
  2522  0D90                     	;# 
  2523  0D91                     	;# 
  2524  0D92                     	;# 
  2525  0D92                     	;# 
  2526  0D93                     	;# 
  2527  0D94                     	;# 
  2528  0D95                     	;# 
  2529  0D95                     	;# 
  2530  0D96                     	;# 
  2531  0D97                     	;# 
  2532  0D98                     	;# 
  2533  0D99                     	;# 
  2534  0D9A                     	;# 
  2535  0D9B                     	;# 
  2536  0D9C                     	;# 
  2537  0D9D                     	;# 
  2538  0D9E                     	;# 
  2539  0D9E                     	;# 
  2540  0D9F                     	;# 
  2541  0DA0                     	;# 
  2542  0DA1                     	;# 
  2543  0DA1                     	;# 
  2544  0DA2                     	;# 
  2545  0DA3                     	;# 
  2546  0DA4                     	;# 
  2547  0DA4                     	;# 
  2548  0DA5                     	;# 
  2549  0DA6                     	;# 
  2550  0DA7                     	;# 
  2551  0DA7                     	;# 
  2552  0DA8                     	;# 
  2553  0DA9                     	;# 
  2554  0DAA                     	;# 
  2555  0DAB                     	;# 
  2556  0DAC                     	;# 
  2557  0DAD                     	;# 
  2558  0DAE                     	;# 
  2559  0DAF                     	;# 
  2560  0E0F                     	;# 
  2561  0E10                     	;# 
  2562  0E11                     	;# 
  2563  0E12                     	;# 
  2564  0E13                     	;# 
  2565  0E14                     	;# 
  2566  0E15                     	;# 
  2567  0E16                     	;# 
  2568  0E17                     	;# 
  2569  0E18                     	;# 
  2570  0E19                     	;# 
  2571  0E1A                     	;# 
  2572  0E1B                     	;# 
  2573  0E1C                     	;# 
  2574  0E1D                     	;# 
  2575  0E1E                     	;# 
  2576  0E1F                     	;# 
  2577  0E20                     	;# 
  2578  0E21                     	;# 
  2579  0E22                     	;# 
  2580  0E23                     	;# 
  2581  0E24                     	;# 
  2582  0E25                     	;# 
  2583  0E26                     	;# 
  2584  0E27                     	;# 
  2585  0E28                     	;# 
  2586  0E29                     	;# 
  2587  0E2A                     	;# 
  2588  0E2B                     	;# 
  2589  0E2C                     	;# 
  2590  0E2D                     	;# 
  2591  0E2E                     	;# 
  2592  0E90                     	;# 
  2593  0E91                     	;# 
  2594  0E92                     	;# 
  2595  0E94                     	;# 
  2596  0E95                     	;# 
  2597  0E9C                     	;# 
  2598  0E9D                     	;# 
  2599  0E9E                     	;# 
  2600  0E9F                     	;# 
  2601  0EA0                     	;# 
  2602  0EA1                     	;# 
  2603  0EA2                     	;# 
  2604  0EA3                     	;# 
  2605  0EA4                     	;# 
  2606  0EA5                     	;# 
  2607  0EA6                     	;# 
  2608  0EA7                     	;# 
  2609  0F0F                     	;# 
  2610  0F10                     	;# 
  2611  0F11                     	;# 
  2612  0F12                     	;# 
  2613  0F13                     	;# 
  2614  0F14                     	;# 
  2615  0F15                     	;# 
  2616  0F16                     	;# 
  2617  0F17                     	;# 
  2618  0F18                     	;# 
  2619  0F19                     	;# 
  2620  0F1A                     	;# 
  2621  0F1B                     	;# 
  2622  0F1C                     	;# 
  2623  0F1D                     	;# 
  2624  0F1E                     	;# 
  2625  0F1F                     	;# 
  2626  0F20                     	;# 
  2627  0F21                     	;# 
  2628  0F22                     	;# 
  2629  0F23                     	;# 
  2630  0F24                     	;# 
  2631  0F25                     	;# 
  2632  0F26                     	;# 
  2633  0F27                     	;# 
  2634  0F28                     	;# 
  2635  0F29                     	;# 
  2636  0F2A                     	;# 
  2637  0F2B                     	;# 
  2638  0F2C                     	;# 
  2639  0F2D                     	;# 
  2640  0F2E                     	;# 
  2641  0F2F                     	;# 
  2642  0F30                     	;# 
  2643  0F31                     	;# 
  2644  0F32                     	;# 
  2645  0F33                     	;# 
  2646  0F34                     	;# 
  2647  0F35                     	;# 
  2648  0F36                     	;# 
  2649  0F37                     	;# 
  2650  0FE4                     	;# 
  2651  0FE5                     	;# 
  2652  0FE6                     	;# 
  2653  0FE7                     	;# 
  2654  0FE8                     	;# 
  2655  0FE9                     	;# 
  2656  0FEA                     	;# 
  2657  0FEB                     	;# 
  2658  0FED                     	;# 
  2659  0FEE                     	;# 
  2660  0FEF                     	;# 
  2661  0000                     	;# 
  2662  0001                     	;# 
  2663  0002                     	;# 
  2664  0003                     	;# 
  2665  0004                     	;# 
  2666  0005                     	;# 
  2667  0006                     	;# 
  2668  0007                     	;# 
  2669  0008                     	;# 
  2670  0009                     	;# 
  2671  000A                     	;# 
  2672  000B                     	;# 
  2673  000C                     	;# 
  2674  000D                     	;# 
  2675  000E                     	;# 
  2676  0010                     	;# 
  2677  0011                     	;# 
  2678  0012                     	;# 
  2679  0013                     	;# 
  2680  0014                     	;# 
  2681  0015                     	;# 
  2682  0016                     	;# 
  2683  0016                     	;# 
  2684  0017                     	;# 
  2685  0018                     	;# 
  2686  0019                     	;# 
  2687  001A                     	;# 
  2688  001A                     	;# 
  2689  001B                     	;# 
  2690  001B                     	;# 
  2691  001C                     	;# 
  2692  001D                     	;# 
  2693  001E                     	;# 
  2694  001F                     	;# 
  2695  008C                     	;# 
  2696  008D                     	;# 
  2697  008E                     	;# 
  2698  0090                     	;# 
  2699  0091                     	;# 
  2700  0092                     	;# 
  2701  0093                     	;# 
  2702  0094                     	;# 
  2703  0095                     	;# 
  2704  0096                     	;# 
  2705  0098                     	;# 
  2706  0099                     	;# 
  2707  009A                     	;# 
  2708  009B                     	;# 
  2709  009B                     	;# 
  2710  009C                     	;# 
  2711  009D                     	;# 
  2712  009E                     	;# 
  2713  009F                     	;# 
  2714  010C                     	;# 
  2715  010D                     	;# 
  2716  010E                     	;# 
  2717  0111                     	;# 
  2718  0112                     	;# 
  2719  0113                     	;# 
  2720  0114                     	;# 
  2721  0115                     	;# 
  2722  0116                     	;# 
  2723  0117                     	;# 
  2724  0118                     	;# 
  2725  0119                     	;# 
  2726  011C                     	;# 
  2727  018C                     	;# 
  2728  018D                     	;# 
  2729  018E                     	;# 
  2730  0191                     	;# 
  2731  0191                     	;# 
  2732  0192                     	;# 
  2733  0193                     	;# 
  2734  0193                     	;# 
  2735  0194                     	;# 
  2736  0195                     	;# 
  2737  0196                     	;# 
  2738  0197                     	;# 
  2739  0199                     	;# 
  2740  0199                     	;# 
  2741  0199                     	;# 
  2742  019A                     	;# 
  2743  019A                     	;# 
  2744  019A                     	;# 
  2745  019B                     	;# 
  2746  019B                     	;# 
  2747  019B                     	;# 
  2748  019B                     	;# 
  2749  019B                     	;# 
  2750  019C                     	;# 
  2751  019C                     	;# 
  2752  019C                     	;# 
  2753  019D                     	;# 
  2754  019D                     	;# 
  2755  019D                     	;# 
  2756  019E                     	;# 
  2757  019E                     	;# 
  2758  019E                     	;# 
  2759  019F                     	;# 
  2760  019F                     	;# 
  2761  019F                     	;# 
  2762  019F                     	;# 
  2763  019F                     	;# 
  2764  020C                     	;# 
  2765  020D                     	;# 
  2766  020E                     	;# 
  2767  0211                     	;# 
  2768  0211                     	;# 
  2769  0212                     	;# 
  2770  0212                     	;# 
  2771  0213                     	;# 
  2772  0213                     	;# 
  2773  0214                     	;# 
  2774  0214                     	;# 
  2775  0215                     	;# 
  2776  0215                     	;# 
  2777  0215                     	;# 
  2778  0215                     	;# 
  2779  0216                     	;# 
  2780  0216                     	;# 
  2781  0217                     	;# 
  2782  0217                     	;# 
  2783  028C                     	;# 
  2784  028D                     	;# 
  2785  028E                     	;# 
  2786  0291                     	;# 
  2787  0291                     	;# 
  2788  0292                     	;# 
  2789  0293                     	;# 
  2790  0294                     	;# 
  2791  0298                     	;# 
  2792  0298                     	;# 
  2793  0299                     	;# 
  2794  029A                     	;# 
  2795  029B                     	;# 
  2796  029E                     	;# 
  2797  030C                     	;# 
  2798  030D                     	;# 
  2799  030E                     	;# 
  2800  038C                     	;# 
  2801  038D                     	;# 
  2802  038E                     	;# 
  2803  0391                     	;# 
  2804  0392                     	;# 
  2805  0393                     	;# 
  2806  0394                     	;# 
  2807  0395                     	;# 
  2808  0396                     	;# 
  2809  0397                     	;# 
  2810  0398                     	;# 
  2811  0399                     	;# 
  2812  040E                     	;# 
  2813  0413                     	;# 
  2814  0413                     	;# 
  2815  0414                     	;# 
  2816  0414                     	;# 
  2817  0415                     	;# 
  2818  0416                     	;# 
  2819  0417                     	;# 
  2820  0418                     	;# 
  2821  041A                     	;# 
  2822  041A                     	;# 
  2823  041B                     	;# 
  2824  041B                     	;# 
  2825  041C                     	;# 
  2826  041D                     	;# 
  2827  041E                     	;# 
  2828  041F                     	;# 
  2829  0493                     	;# 
  2830  0494                     	;# 
  2831  0495                     	;# 
  2832  0496                     	;# 
  2833  049A                     	;# 
  2834  049B                     	;# 
  2835  049C                     	;# 
  2836  049D                     	;# 
  2837  058C                     	;# 
  2838  058C                     	;# 
  2839  058D                     	;# 
  2840  058E                     	;# 
  2841  058E                     	;# 
  2842  058F                     	;# 
  2843  0590                     	;# 
  2844  0590                     	;# 
  2845  0591                     	;# 
  2846  0592                     	;# 
  2847  0592                     	;# 
  2848  0593                     	;# 
  2849  0594                     	;# 
  2850  0594                     	;# 
  2851  0595                     	;# 
  2852  0596                     	;# 
  2853  0596                     	;# 
  2854  0597                     	;# 
  2855  0598                     	;# 
  2856  0599                     	;# 
  2857  059A                     	;# 
  2858  059B                     	;# 
  2859  059B                     	;# 
  2860  059C                     	;# 
  2861  059D                     	;# 
  2862  060C                     	;# 
  2863  060C                     	;# 
  2864  060D                     	;# 
  2865  060E                     	;# 
  2866  060F                     	;# 
  2867  060F                     	;# 
  2868  0610                     	;# 
  2869  0611                     	;# 
  2870  0612                     	;# 
  2871  0613                     	;# 
  2872  0614                     	;# 
  2873  0617                     	;# 
  2874  0618                     	;# 
  2875  0619                     	;# 
  2876  061A                     	;# 
  2877  061B                     	;# 
  2878  061C                     	;# 
  2879  0691                     	;# 
  2880  0692                     	;# 
  2881  0693                     	;# 
  2882  0694                     	;# 
  2883  0695                     	;# 
  2884  0696                     	;# 
  2885  0697                     	;# 
  2886  0699                     	;# 
  2887  069A                     	;# 
  2888  0711                     	;# 
  2889  0712                     	;# 
  2890  0713                     	;# 
  2891  0714                     	;# 
  2892  0715                     	;# 
  2893  0718                     	;# 
  2894  0718                     	;# 
  2895  0719                     	;# 
  2896  071A                     	;# 
  2897  071A                     	;# 
  2898  071B                     	;# 
  2899  071C                     	;# 
  2900  071D                     	;# 
  2901  0791                     	;# 
  2902  0791                     	;# 
  2903  0792                     	;# 
  2904  0793                     	;# 
  2905  0793                     	;# 
  2906  0794                     	;# 
  2907  0795                     	;# 
  2908  0795                     	;# 
  2909  0796                     	;# 
  2910  0797                     	;# 
  2911  0797                     	;# 
  2912  0798                     	;# 
  2913  0799                     	;# 
  2914  079A                     	;# 
  2915  080C                     	;# 
  2916  080C                     	;# 
  2917  080D                     	;# 
  2918  080E                     	;# 
  2919  080E                     	;# 
  2920  080F                     	;# 
  2921  0810                     	;# 
  2922  0810                     	;# 
  2923  0811                     	;# 
  2924  0812                     	;# 
  2925  0812                     	;# 
  2926  0813                     	;# 
  2927  0814                     	;# 
  2928  0815                     	;# 
  2929  0816                     	;# 
  2930  0817                     	;# 
  2931  0818                     	;# 
  2932  0819                     	;# 
  2933  081A                     	;# 
  2934  081A                     	;# 
  2935  081B                     	;# 
  2936  081C                     	;# 
  2937  081C                     	;# 
  2938  081D                     	;# 
  2939  088C                     	;# 
  2940  088D                     	;# 
  2941  088E                     	;# 
  2942  088F                     	;# 
  2943  088F                     	;# 
  2944  0890                     	;# 
  2945  0891                     	;# 
  2946  0892                     	;# 
  2947  0893                     	;# 
  2948  0893                     	;# 
  2949  0894                     	;# 
  2950  0895                     	;# 
  2951  0896                     	;# 
  2952  0897                     	;# 
  2953  0897                     	;# 
  2954  0898                     	;# 
  2955  0899                     	;# 
  2956  0D8C                     	;# 
  2957  0D8C                     	;# 
  2958  0D8D                     	;# 
  2959  0D8E                     	;# 
  2960  0D8F                     	;# 
  2961  0D8F                     	;# 
  2962  0D90                     	;# 
  2963  0D91                     	;# 
  2964  0D92                     	;# 
  2965  0D92                     	;# 
  2966  0D93                     	;# 
  2967  0D94                     	;# 
  2968  0D95                     	;# 
  2969  0D95                     	;# 
  2970  0D96                     	;# 
  2971  0D97                     	;# 
  2972  0D98                     	;# 
  2973  0D99                     	;# 
  2974  0D9A                     	;# 
  2975  0D9B                     	;# 
  2976  0D9C                     	;# 
  2977  0D9D                     	;# 
  2978  0D9E                     	;# 
  2979  0D9E                     	;# 
  2980  0D9F                     	;# 
  2981  0DA0                     	;# 
  2982  0DA1                     	;# 
  2983  0DA1                     	;# 
  2984  0DA2                     	;# 
  2985  0DA3                     	;# 
  2986  0DA4                     	;# 
  2987  0DA4                     	;# 
  2988  0DA5                     	;# 
  2989  0DA6                     	;# 
  2990  0DA7                     	;# 
  2991  0DA7                     	;# 
  2992  0DA8                     	;# 
  2993  0DA9                     	;# 
  2994  0DAA                     	;# 
  2995  0DAB                     	;# 
  2996  0DAC                     	;# 
  2997  0DAD                     	;# 
  2998  0DAE                     	;# 
  2999  0DAF                     	;# 
  3000  0E0F                     	;# 
  3001  0E10                     	;# 
  3002  0E11                     	;# 
  3003  0E12                     	;# 
  3004  0E13                     	;# 
  3005  0E14                     	;# 
  3006  0E15                     	;# 
  3007  0E16                     	;# 
  3008  0E17                     	;# 
  3009  0E18                     	;# 
  3010  0E19                     	;# 
  3011  0E1A                     	;# 
  3012  0E1B                     	;# 
  3013  0E1C                     	;# 
  3014  0E1D                     	;# 
  3015  0E1E                     	;# 
  3016  0E1F                     	;# 
  3017  0E20                     	;# 
  3018  0E21                     	;# 
  3019  0E22                     	;# 
  3020  0E23                     	;# 
  3021  0E24                     	;# 
  3022  0E25                     	;# 
  3023  0E26                     	;# 
  3024  0E27                     	;# 
  3025  0E28                     	;# 
  3026  0E29                     	;# 
  3027  0E2A                     	;# 
  3028  0E2B                     	;# 
  3029  0E2C                     	;# 
  3030  0E2D                     	;# 
  3031  0E2E                     	;# 
  3032  0E90                     	;# 
  3033  0E91                     	;# 
  3034  0E92                     	;# 
  3035  0E94                     	;# 
  3036  0E95                     	;# 
  3037  0E9C                     	;# 
  3038  0E9D                     	;# 
  3039  0E9E                     	;# 
  3040  0E9F                     	;# 
  3041  0EA0                     	;# 
  3042  0EA1                     	;# 
  3043  0EA2                     	;# 
  3044  0EA3                     	;# 
  3045  0EA4                     	;# 
  3046  0EA5                     	;# 
  3047  0EA6                     	;# 
  3048  0EA7                     	;# 
  3049  0F0F                     	;# 
  3050  0F10                     	;# 
  3051  0F11                     	;# 
  3052  0F12                     	;# 
  3053  0F13                     	;# 
  3054  0F14                     	;# 
  3055  0F15                     	;# 
  3056  0F16                     	;# 
  3057  0F17                     	;# 
  3058  0F18                     	;# 
  3059  0F19                     	;# 
  3060  0F1A                     	;# 
  3061  0F1B                     	;# 
  3062  0F1C                     	;# 
  3063  0F1D                     	;# 
  3064  0F1E                     	;# 
  3065  0F1F                     	;# 
  3066  0F20                     	;# 
  3067  0F21                     	;# 
  3068  0F22                     	;# 
  3069  0F23                     	;# 
  3070  0F24                     	;# 
  3071  0F25                     	;# 
  3072  0F26                     	;# 
  3073  0F27                     	;# 
  3074  0F28                     	;# 
  3075  0F29                     	;# 
  3076  0F2A                     	;# 
  3077  0F2B                     	;# 
  3078  0F2C                     	;# 
  3079  0F2D                     	;# 
  3080  0F2E                     	;# 
  3081  0F2F                     	;# 
  3082  0F30                     	;# 
  3083  0F31                     	;# 
  3084  0F32                     	;# 
  3085  0F33                     	;# 
  3086  0F34                     	;# 
  3087  0F35                     	;# 
  3088  0F36                     	;# 
  3089  0F37                     	;# 
  3090  0FE4                     	;# 
  3091  0FE5                     	;# 
  3092  0FE6                     	;# 
  3093  0FE7                     	;# 
  3094  0FE8                     	;# 
  3095  0FE9                     	;# 
  3096  0FEA                     	;# 
  3097  0FEB                     	;# 
  3098  0FED                     	;# 
  3099  0FEE                     	;# 
  3100  0FEF                     	;# 
  3101  0000                     	;# 
  3102  0001                     	;# 
  3103  0002                     	;# 
  3104  0003                     	;# 
  3105  0004                     	;# 
  3106  0005                     	;# 
  3107  0006                     	;# 
  3108  0007                     	;# 
  3109  0008                     	;# 
  3110  0009                     	;# 
  3111  000A                     	;# 
  3112  000B                     	;# 
  3113  000C                     	;# 
  3114  000D                     	;# 
  3115  000E                     	;# 
  3116  0010                     	;# 
  3117  0011                     	;# 
  3118  0012                     	;# 
  3119  0013                     	;# 
  3120  0014                     	;# 
  3121  0015                     	;# 
  3122  0016                     	;# 
  3123  0016                     	;# 
  3124  0017                     	;# 
  3125  0018                     	;# 
  3126  0019                     	;# 
  3127  001A                     	;# 
  3128  001A                     	;# 
  3129  001B                     	;# 
  3130  001B                     	;# 
  3131  001C                     	;# 
  3132  001D                     	;# 
  3133  001E                     	;# 
  3134  001F                     	;# 
  3135  008C                     	;# 
  3136  008D                     	;# 
  3137  008E                     	;# 
  3138  0090                     	;# 
  3139  0091                     	;# 
  3140  0092                     	;# 
  3141  0093                     	;# 
  3142  0094                     	;# 
  3143  0095                     	;# 
  3144  0096                     	;# 
  3145  0098                     	;# 
  3146  0099                     	;# 
  3147  009A                     	;# 
  3148  009B                     	;# 
  3149  009B                     	;# 
  3150  009C                     	;# 
  3151  009D                     	;# 
  3152  009E                     	;# 
  3153  009F                     	;# 
  3154  010C                     	;# 
  3155  010D                     	;# 
  3156  010E                     	;# 
  3157  0111                     	;# 
  3158  0112                     	;# 
  3159  0113                     	;# 
  3160  0114                     	;# 
  3161  0115                     	;# 
  3162  0116                     	;# 
  3163  0117                     	;# 
  3164  0118                     	;# 
  3165  0119                     	;# 
  3166  011C                     	;# 
  3167  018C                     	;# 
  3168  018D                     	;# 
  3169  018E                     	;# 
  3170  0191                     	;# 
  3171  0191                     	;# 
  3172  0192                     	;# 
  3173  0193                     	;# 
  3174  0193                     	;# 
  3175  0194                     	;# 
  3176  0195                     	;# 
  3177  0196                     	;# 
  3178  0197                     	;# 
  3179  0199                     	;# 
  3180  0199                     	;# 
  3181  0199                     	;# 
  3182  019A                     	;# 
  3183  019A                     	;# 
  3184  019A                     	;# 
  3185  019B                     	;# 
  3186  019B                     	;# 
  3187  019B                     	;# 
  3188  019B                     	;# 
  3189  019B                     	;# 
  3190  019C                     	;# 
  3191  019C                     	;# 
  3192  019C                     	;# 
  3193  019D                     	;# 
  3194  019D                     	;# 
  3195  019D                     	;# 
  3196  019E                     	;# 
  3197  019E                     	;# 
  3198  019E                     	;# 
  3199  019F                     	;# 
  3200  019F                     	;# 
  3201  019F                     	;# 
  3202  019F                     	;# 
  3203  019F                     	;# 
  3204  020C                     	;# 
  3205  020D                     	;# 
  3206  020E                     	;# 
  3207  0211                     	;# 
  3208  0211                     	;# 
  3209  0212                     	;# 
  3210  0212                     	;# 
  3211  0213                     	;# 
  3212  0213                     	;# 
  3213  0214                     	;# 
  3214  0214                     	;# 
  3215  0215                     	;# 
  3216  0215                     	;# 
  3217  0215                     	;# 
  3218  0215                     	;# 
  3219  0216                     	;# 
  3220  0216                     	;# 
  3221  0217                     	;# 
  3222  0217                     	;# 
  3223  028C                     	;# 
  3224  028D                     	;# 
  3225  028E                     	;# 
  3226  0291                     	;# 
  3227  0291                     	;# 
  3228  0292                     	;# 
  3229  0293                     	;# 
  3230  0294                     	;# 
  3231  0298                     	;# 
  3232  0298                     	;# 
  3233  0299                     	;# 
  3234  029A                     	;# 
  3235  029B                     	;# 
  3236  029E                     	;# 
  3237  030C                     	;# 
  3238  030D                     	;# 
  3239  030E                     	;# 
  3240  038C                     	;# 
  3241  038D                     	;# 
  3242  038E                     	;# 
  3243  0391                     	;# 
  3244  0392                     	;# 
  3245  0393                     	;# 
  3246  0394                     	;# 
  3247  0395                     	;# 
  3248  0396                     	;# 
  3249  0397                     	;# 
  3250  0398                     	;# 
  3251  0399                     	;# 
  3252  040E                     	;# 
  3253  0413                     	;# 
  3254  0413                     	;# 
  3255  0414                     	;# 
  3256  0414                     	;# 
  3257  0415                     	;# 
  3258  0416                     	;# 
  3259  0417                     	;# 
  3260  0418                     	;# 
  3261  041A                     	;# 
  3262  041A                     	;# 
  3263  041B                     	;# 
  3264  041B                     	;# 
  3265  041C                     	;# 
  3266  041D                     	;# 
  3267  041E                     	;# 
  3268  041F                     	;# 
  3269  0493                     	;# 
  3270  0494                     	;# 
  3271  0495                     	;# 
  3272  0496                     	;# 
  3273  049A                     	;# 
  3274  049B                     	;# 
  3275  049C                     	;# 
  3276  049D                     	;# 
  3277  058C                     	;# 
  3278  058C                     	;# 
  3279  058D                     	;# 
  3280  058E                     	;# 
  3281  058E                     	;# 
  3282  058F                     	;# 
  3283  0590                     	;# 
  3284  0590                     	;# 
  3285  0591                     	;# 
  3286  0592                     	;# 
  3287  0592                     	;# 
  3288  0593                     	;# 
  3289  0594                     	;# 
  3290  0594                     	;# 
  3291  0595                     	;# 
  3292  0596                     	;# 
  3293  0596                     	;# 
  3294  0597                     	;# 
  3295  0598                     	;# 
  3296  0599                     	;# 
  3297  059A                     	;# 
  3298  059B                     	;# 
  3299  059B                     	;# 
  3300  059C                     	;# 
  3301  059D                     	;# 
  3302  060C                     	;# 
  3303  060C                     	;# 
  3304  060D                     	;# 
  3305  060E                     	;# 
  3306  060F                     	;# 
  3307  060F                     	;# 
  3308  0610                     	;# 
  3309  0611                     	;# 
  3310  0612                     	;# 
  3311  0613                     	;# 
  3312  0614                     	;# 
  3313  0617                     	;# 
  3314  0618                     	;# 
  3315  0619                     	;# 
  3316  061A                     	;# 
  3317  061B                     	;# 
  3318  061C                     	;# 
  3319  0691                     	;# 
  3320  0692                     	;# 
  3321  0693                     	;# 
  3322  0694                     	;# 
  3323  0695                     	;# 
  3324  0696                     	;# 
  3325  0697                     	;# 
  3326  0699                     	;# 
  3327  069A                     	;# 
  3328  0711                     	;# 
  3329  0712                     	;# 
  3330  0713                     	;# 
  3331  0714                     	;# 
  3332  0715                     	;# 
  3333  0718                     	;# 
  3334  0718                     	;# 
  3335  0719                     	;# 
  3336  071A                     	;# 
  3337  071A                     	;# 
  3338  071B                     	;# 
  3339  071C                     	;# 
  3340  071D                     	;# 
  3341  0791                     	;# 
  3342  0791                     	;# 
  3343  0792                     	;# 
  3344  0793                     	;# 
  3345  0793                     	;# 
  3346  0794                     	;# 
  3347  0795                     	;# 
  3348  0795                     	;# 
  3349  0796                     	;# 
  3350  0797                     	;# 
  3351  0797                     	;# 
  3352  0798                     	;# 
  3353  0799                     	;# 
  3354  079A                     	;# 
  3355  080C                     	;# 
  3356  080C                     	;# 
  3357  080D                     	;# 
  3358  080E                     	;# 
  3359  080E                     	;# 
  3360  080F                     	;# 
  3361  0810                     	;# 
  3362  0810                     	;# 
  3363  0811                     	;# 
  3364  0812                     	;# 
  3365  0812                     	;# 
  3366  0813                     	;# 
  3367  0814                     	;# 
  3368  0815                     	;# 
  3369  0816                     	;# 
  3370  0817                     	;# 
  3371  0818                     	;# 
  3372  0819                     	;# 
  3373  081A                     	;# 
  3374  081A                     	;# 
  3375  081B                     	;# 
  3376  081C                     	;# 
  3377  081C                     	;# 
  3378  081D                     	;# 
  3379  088C                     	;# 
  3380  088D                     	;# 
  3381  088E                     	;# 
  3382  088F                     	;# 
  3383  088F                     	;# 
  3384  0890                     	;# 
  3385  0891                     	;# 
  3386  0892                     	;# 
  3387  0893                     	;# 
  3388  0893                     	;# 
  3389  0894                     	;# 
  3390  0895                     	;# 
  3391  0896                     	;# 
  3392  0897                     	;# 
  3393  0897                     	;# 
  3394  0898                     	;# 
  3395  0899                     	;# 
  3396  0D8C                     	;# 
  3397  0D8C                     	;# 
  3398  0D8D                     	;# 
  3399  0D8E                     	;# 
  3400  0D8F                     	;# 
  3401  0D8F                     	;# 
  3402  0D90                     	;# 
  3403  0D91                     	;# 
  3404  0D92                     	;# 
  3405  0D92                     	;# 
  3406  0D93                     	;# 
  3407  0D94                     	;# 
  3408  0D95                     	;# 
  3409  0D95                     	;# 
  3410  0D96                     	;# 
  3411  0D97                     	;# 
  3412  0D98                     	;# 
  3413  0D99                     	;# 
  3414  0D9A                     	;# 
  3415  0D9B                     	;# 
  3416  0D9C                     	;# 
  3417  0D9D                     	;# 
  3418  0D9E                     	;# 
  3419  0D9E                     	;# 
  3420  0D9F                     	;# 
  3421  0DA0                     	;# 
  3422  0DA1                     	;# 
  3423  0DA1                     	;# 
  3424  0DA2                     	;# 
  3425  0DA3                     	;# 
  3426  0DA4                     	;# 
  3427  0DA4                     	;# 
  3428  0DA5                     	;# 
  3429  0DA6                     	;# 
  3430  0DA7                     	;# 
  3431  0DA7                     	;# 
  3432  0DA8                     	;# 
  3433  0DA9                     	;# 
  3434  0DAA                     	;# 
  3435  0DAB                     	;# 
  3436  0DAC                     	;# 
  3437  0DAD                     	;# 
  3438  0DAE                     	;# 
  3439  0DAF                     	;# 
  3440  0E0F                     	;# 
  3441  0E10                     	;# 
  3442  0E11                     	;# 
  3443  0E12                     	;# 
  3444  0E13                     	;# 
  3445  0E14                     	;# 
  3446  0E15                     	;# 
  3447  0E16                     	;# 
  3448  0E17                     	;# 
  3449  0E18                     	;# 
  3450  0E19                     	;# 
  3451  0E1A                     	;# 
  3452  0E1B                     	;# 
  3453  0E1C                     	;# 
  3454  0E1D                     	;# 
  3455  0E1E                     	;# 
  3456  0E1F                     	;# 
  3457  0E20                     	;# 
  3458  0E21                     	;# 
  3459  0E22                     	;# 
  3460  0E23                     	;# 
  3461  0E24                     	;# 
  3462  0E25                     	;# 
  3463  0E26                     	;# 
  3464  0E27                     	;# 
  3465  0E28                     	;# 
  3466  0E29                     	;# 
  3467  0E2A                     	;# 
  3468  0E2B                     	;# 
  3469  0E2C                     	;# 
  3470  0E2D                     	;# 
  3471  0E2E                     	;# 
  3472  0E90                     	;# 
  3473  0E91                     	;# 
  3474  0E92                     	;# 
  3475  0E94                     	;# 
  3476  0E95                     	;# 
  3477  0E9C                     	;# 
  3478  0E9D                     	;# 
  3479  0E9E                     	;# 
  3480  0E9F                     	;# 
  3481  0EA0                     	;# 
  3482  0EA1                     	;# 
  3483  0EA2                     	;# 
  3484  0EA3                     	;# 
  3485  0EA4                     	;# 
  3486  0EA5                     	;# 
  3487  0EA6                     	;# 
  3488  0EA7                     	;# 
  3489  0F0F                     	;# 
  3490  0F10                     	;# 
  3491  0F11                     	;# 
  3492  0F12                     	;# 
  3493  0F13                     	;# 
  3494  0F14                     	;# 
  3495  0F15                     	;# 
  3496  0F16                     	;# 
  3497  0F17                     	;# 
  3498  0F18                     	;# 
  3499  0F19                     	;# 
  3500  0F1A                     	;# 
  3501  0F1B                     	;# 
  3502  0F1C                     	;# 
  3503  0F1D                     	;# 
  3504  0F1E                     	;# 
  3505  0F1F                     	;# 
  3506  0F20                     	;# 
  3507  0F21                     	;# 
  3508  0F22                     	;# 
  3509  0F23                     	;# 
  3510  0F24                     	;# 
  3511  0F25                     	;# 
  3512  0F26                     	;# 
  3513  0F27                     	;# 
  3514  0F28                     	;# 
  3515  0F29                     	;# 
  3516  0F2A                     	;# 
  3517  0F2B                     	;# 
  3518  0F2C                     	;# 
  3519  0F2D                     	;# 
  3520  0F2E                     	;# 
  3521  0F2F                     	;# 
  3522  0F30                     	;# 
  3523  0F31                     	;# 
  3524  0F32                     	;# 
  3525  0F33                     	;# 
  3526  0F34                     	;# 
  3527  0F35                     	;# 
  3528  0F36                     	;# 
  3529  0F37                     	;# 
  3530  0FE4                     	;# 
  3531  0FE5                     	;# 
  3532  0FE6                     	;# 
  3533  0FE7                     	;# 
  3534  0FE8                     	;# 
  3535  0FE9                     	;# 
  3536  0FEA                     	;# 
  3537  0FEB                     	;# 
  3538  0FED                     	;# 
  3539  0FEE                     	;# 
  3540  0FEF                     	;# 
  3541  0000                     	;# 
  3542  0001                     	;# 
  3543  0002                     	;# 
  3544  0003                     	;# 
  3545  0004                     	;# 
  3546  0005                     	;# 
  3547  0006                     	;# 
  3548  0007                     	;# 
  3549  0008                     	;# 
  3550  0009                     	;# 
  3551  000A                     	;# 
  3552  000B                     	;# 
  3553  000C                     	;# 
  3554  000D                     	;# 
  3555  000E                     	;# 
  3556  0010                     	;# 
  3557  0011                     	;# 
  3558  0012                     	;# 
  3559  0013                     	;# 
  3560  0014                     	;# 
  3561  0015                     	;# 
  3562  0016                     	;# 
  3563  0016                     	;# 
  3564  0017                     	;# 
  3565  0018                     	;# 
  3566  0019                     	;# 
  3567  001A                     	;# 
  3568  001A                     	;# 
  3569  001B                     	;# 
  3570  001B                     	;# 
  3571  001C                     	;# 
  3572  001D                     	;# 
  3573  001E                     	;# 
  3574  001F                     	;# 
  3575  008C                     	;# 
  3576  008D                     	;# 
  3577  008E                     	;# 
  3578  0090                     	;# 
  3579  0091                     	;# 
  3580  0092                     	;# 
  3581  0093                     	;# 
  3582  0094                     	;# 
  3583  0095                     	;# 
  3584  0096                     	;# 
  3585  0098                     	;# 
  3586  0099                     	;# 
  3587  009A                     	;# 
  3588  009B                     	;# 
  3589  009B                     	;# 
  3590  009C                     	;# 
  3591  009D                     	;# 
  3592  009E                     	;# 
  3593  009F                     	;# 
  3594  010C                     	;# 
  3595  010D                     	;# 
  3596  010E                     	;# 
  3597  0111                     	;# 
  3598  0112                     	;# 
  3599  0113                     	;# 
  3600  0114                     	;# 
  3601  0115                     	;# 
  3602  0116                     	;# 
  3603  0117                     	;# 
  3604  0118                     	;# 
  3605  0119                     	;# 
  3606  011C                     	;# 
  3607  018C                     	;# 
  3608  018D                     	;# 
  3609  018E                     	;# 
  3610  0191                     	;# 
  3611  0191                     	;# 
  3612  0192                     	;# 
  3613  0193                     	;# 
  3614  0193                     	;# 
  3615  0194                     	;# 
  3616  0195                     	;# 
  3617  0196                     	;# 
  3618  0197                     	;# 
  3619  0199                     	;# 
  3620  0199                     	;# 
  3621  0199                     	;# 
  3622  019A                     	;# 
  3623  019A                     	;# 
  3624  019A                     	;# 
  3625  019B                     	;# 
  3626  019B                     	;# 
  3627  019B                     	;# 
  3628  019B                     	;# 
  3629  019B                     	;# 
  3630  019C                     	;# 
  3631  019C                     	;# 
  3632  019C                     	;# 
  3633  019D                     	;# 
  3634  019D                     	;# 
  3635  019D                     	;# 
  3636  019E                     	;# 
  3637  019E                     	;# 
  3638  019E                     	;# 
  3639  019F                     	;# 
  3640  019F                     	;# 
  3641  019F                     	;# 
  3642  019F                     	;# 
  3643  019F                     	;# 
  3644  020C                     	;# 
  3645  020D                     	;# 
  3646  020E                     	;# 
  3647  0211                     	;# 
  3648  0211                     	;# 
  3649  0212                     	;# 
  3650  0212                     	;# 
  3651  0213                     	;# 
  3652  0213                     	;# 
  3653  0214                     	;# 
  3654  0214                     	;# 
  3655  0215                     	;# 
  3656  0215                     	;# 
  3657  0215                     	;# 
  3658  0215                     	;# 
  3659  0216                     	;# 
  3660  0216                     	;# 
  3661  0217                     	;# 
  3662  0217                     	;# 
  3663  028C                     	;# 
  3664  028D                     	;# 
  3665  028E                     	;# 
  3666  0291                     	;# 
  3667  0291                     	;# 
  3668  0292                     	;# 
  3669  0293                     	;# 
  3670  0294                     	;# 
  3671  0298                     	;# 
  3672  0298                     	;# 
  3673  0299                     	;# 
  3674  029A                     	;# 
  3675  029B                     	;# 
  3676  029E                     	;# 
  3677  030C                     	;# 
  3678  030D                     	;# 
  3679  030E                     	;# 
  3680  038C                     	;# 
  3681  038D                     	;# 
  3682  038E                     	;# 
  3683  0391                     	;# 
  3684  0392                     	;# 
  3685  0393                     	;# 
  3686  0394                     	;# 
  3687  0395                     	;# 
  3688  0396                     	;# 
  3689  0397                     	;# 
  3690  0398                     	;# 
  3691  0399                     	;# 
  3692  040E                     	;# 
  3693  0413                     	;# 
  3694  0413                     	;# 
  3695  0414                     	;# 
  3696  0414                     	;# 
  3697  0415                     	;# 
  3698  0416                     	;# 
  3699  0417                     	;# 
  3700  0418                     	;# 
  3701  041A                     	;# 
  3702  041A                     	;# 
  3703  041B                     	;# 
  3704  041B                     	;# 
  3705  041C                     	;# 
  3706  041D                     	;# 
  3707  041E                     	;# 
  3708  041F                     	;# 
  3709  0493                     	;# 
  3710  0494                     	;# 
  3711  0495                     	;# 
  3712  0496                     	;# 
  3713  049A                     	;# 
  3714  049B                     	;# 
  3715  049C                     	;# 
  3716  049D                     	;# 
  3717  058C                     	;# 
  3718  058C                     	;# 
  3719  058D                     	;# 
  3720  058E                     	;# 
  3721  058E                     	;# 
  3722  058F                     	;# 
  3723  0590                     	;# 
  3724  0590                     	;# 
  3725  0591                     	;# 
  3726  0592                     	;# 
  3727  0592                     	;# 
  3728  0593                     	;# 
  3729  0594                     	;# 
  3730  0594                     	;# 
  3731  0595                     	;# 
  3732  0596                     	;# 
  3733  0596                     	;# 
  3734  0597                     	;# 
  3735  0598                     	;# 
  3736  0599                     	;# 
  3737  059A                     	;# 
  3738  059B                     	;# 
  3739  059B                     	;# 
  3740  059C                     	;# 
  3741  059D                     	;# 
  3742  060C                     	;# 
  3743  060C                     	;# 
  3744  060D                     	;# 
  3745  060E                     	;# 
  3746  060F                     	;# 
  3747  060F                     	;# 
  3748  0610                     	;# 
  3749  0611                     	;# 
  3750  0612                     	;# 
  3751  0613                     	;# 
  3752  0614                     	;# 
  3753  0617                     	;# 
  3754  0618                     	;# 
  3755  0619                     	;# 
  3756  061A                     	;# 
  3757  061B                     	;# 
  3758  061C                     	;# 
  3759  0691                     	;# 
  3760  0692                     	;# 
  3761  0693                     	;# 
  3762  0694                     	;# 
  3763  0695                     	;# 
  3764  0696                     	;# 
  3765  0697                     	;# 
  3766  0699                     	;# 
  3767  069A                     	;# 
  3768  0711                     	;# 
  3769  0712                     	;# 
  3770  0713                     	;# 
  3771  0714                     	;# 
  3772  0715                     	;# 
  3773  0718                     	;# 
  3774  0718                     	;# 
  3775  0719                     	;# 
  3776  071A                     	;# 
  3777  071A                     	;# 
  3778  071B                     	;# 
  3779  071C                     	;# 
  3780  071D                     	;# 
  3781  0791                     	;# 
  3782  0791                     	;# 
  3783  0792                     	;# 
  3784  0793                     	;# 
  3785  0793                     	;# 
  3786  0794                     	;# 
  3787  0795                     	;# 
  3788  0795                     	;# 
  3789  0796                     	;# 
  3790  0797                     	;# 
  3791  0797                     	;# 
  3792  0798                     	;# 
  3793  0799                     	;# 
  3794  079A                     	;# 
  3795  080C                     	;# 
  3796  080C                     	;# 
  3797  080D                     	;# 
  3798  080E                     	;# 
  3799  080E                     	;# 
  3800  080F                     	;# 
  3801  0810                     	;# 
  3802  0810                     	;# 
  3803  0811                     	;# 
  3804  0812                     	;# 
  3805  0812                     	;# 
  3806  0813                     	;# 
  3807  0814                     	;# 
  3808  0815                     	;# 
  3809  0816                     	;# 
  3810  0817                     	;# 
  3811  0818                     	;# 
  3812  0819                     	;# 
  3813  081A                     	;# 
  3814  081A                     	;# 
  3815  081B                     	;# 
  3816  081C                     	;# 
  3817  081C                     	;# 
  3818  081D                     	;# 
  3819  088C                     	;# 
  3820  088D                     	;# 
  3821  088E                     	;# 
  3822  088F                     	;# 
  3823  088F                     	;# 
  3824  0890                     	;# 
  3825  0891                     	;# 
  3826  0892                     	;# 
  3827  0893                     	;# 
  3828  0893                     	;# 
  3829  0894                     	;# 
  3830  0895                     	;# 
  3831  0896                     	;# 
  3832  0897                     	;# 
  3833  0897                     	;# 
  3834  0898                     	;# 
  3835  0899                     	;# 
  3836  0D8C                     	;# 
  3837  0D8C                     	;# 
  3838  0D8D                     	;# 
  3839  0D8E                     	;# 
  3840  0D8F                     	;# 
  3841  0D8F                     	;# 
  3842  0D90                     	;# 
  3843  0D91                     	;# 
  3844  0D92                     	;# 
  3845  0D92                     	;# 
  3846  0D93                     	;# 
  3847  0D94                     	;# 
  3848  0D95                     	;# 
  3849  0D95                     	;# 
  3850  0D96                     	;# 
  3851  0D97                     	;# 
  3852  0D98                     	;# 
  3853  0D99                     	;# 
  3854  0D9A                     	;# 
  3855  0D9B                     	;# 
  3856  0D9C                     	;# 
  3857  0D9D                     	;# 
  3858  0D9E                     	;# 
  3859  0D9E                     	;# 
  3860  0D9F                     	;# 
  3861  0DA0                     	;# 
  3862  0DA1                     	;# 
  3863  0DA1                     	;# 
  3864  0DA2                     	;# 
  3865  0DA3                     	;# 
  3866  0DA4                     	;# 
  3867  0DA4                     	;# 
  3868  0DA5                     	;# 
  3869  0DA6                     	;# 
  3870  0DA7                     	;# 
  3871  0DA7                     	;# 
  3872  0DA8                     	;# 
  3873  0DA9                     	;# 
  3874  0DAA                     	;# 
  3875  0DAB                     	;# 
  3876  0DAC                     	;# 
  3877  0DAD                     	;# 
  3878  0DAE                     	;# 
  3879  0DAF                     	;# 
  3880  0E0F                     	;# 
  3881  0E10                     	;# 
  3882  0E11                     	;# 
  3883  0E12                     	;# 
  3884  0E13                     	;# 
  3885  0E14                     	;# 
  3886  0E15                     	;# 
  3887  0E16                     	;# 
  3888  0E17                     	;# 
  3889  0E18                     	;# 
  3890  0E19                     	;# 
  3891  0E1A                     	;# 
  3892  0E1B                     	;# 
  3893  0E1C                     	;# 
  3894  0E1D                     	;# 
  3895  0E1E                     	;# 
  3896  0E1F                     	;# 
  3897  0E20                     	;# 
  3898  0E21                     	;# 
  3899  0E22                     	;# 
  3900  0E23                     	;# 
  3901  0E24                     	;# 
  3902  0E25                     	;# 
  3903  0E26                     	;# 
  3904  0E27                     	;# 
  3905  0E28                     	;# 
  3906  0E29                     	;# 
  3907  0E2A                     	;# 
  3908  0E2B                     	;# 
  3909  0E2C                     	;# 
  3910  0E2D                     	;# 
  3911  0E2E                     	;# 
  3912  0E90                     	;# 
  3913  0E91                     	;# 
  3914  0E92                     	;# 
  3915  0E94                     	;# 
  3916  0E95                     	;# 
  3917  0E9C                     	;# 
  3918  0E9D                     	;# 
  3919  0E9E                     	;# 
  3920  0E9F                     	;# 
  3921  0EA0                     	;# 
  3922  0EA1                     	;# 
  3923  0EA2                     	;# 
  3924  0EA3                     	;# 
  3925  0EA4                     	;# 
  3926  0EA5                     	;# 
  3927  0EA6                     	;# 
  3928  0EA7                     	;# 
  3929  0F0F                     	;# 
  3930  0F10                     	;# 
  3931  0F11                     	;# 
  3932  0F12                     	;# 
  3933  0F13                     	;# 
  3934  0F14                     	;# 
  3935  0F15                     	;# 
  3936  0F16                     	;# 
  3937  0F17                     	;# 
  3938  0F18                     	;# 
  3939  0F19                     	;# 
  3940  0F1A                     	;# 
  3941  0F1B                     	;# 
  3942  0F1C                     	;# 
  3943  0F1D                     	;# 
  3944  0F1E                     	;# 
  3945  0F1F                     	;# 
  3946  0F20                     	;# 
  3947  0F21                     	;# 
  3948  0F22                     	;# 
  3949  0F23                     	;# 
  3950  0F24                     	;# 
  3951  0F25                     	;# 
  3952  0F26                     	;# 
  3953  0F27                     	;# 
  3954  0F28                     	;# 
  3955  0F29                     	;# 
  3956  0F2A                     	;# 
  3957  0F2B                     	;# 
  3958  0F2C                     	;# 
  3959  0F2D                     	;# 
  3960  0F2E                     	;# 
  3961  0F2F                     	;# 
  3962  0F30                     	;# 
  3963  0F31                     	;# 
  3964  0F32                     	;# 
  3965  0F33                     	;# 
  3966  0F34                     	;# 
  3967  0F35                     	;# 
  3968  0F36                     	;# 
  3969  0F37                     	;# 
  3970  0FE4                     	;# 
  3971  0FE5                     	;# 
  3972  0FE6                     	;# 
  3973  0FE7                     	;# 
  3974  0FE8                     	;# 
  3975  0FE9                     	;# 
  3976  0FEA                     	;# 
  3977  0FEB                     	;# 
  3978  0FED                     	;# 
  3979  0FEE                     	;# 
  3980  0FEF                     	;# 
  3981  0000                     	;# 
  3982  0001                     	;# 
  3983  0002                     	;# 
  3984  0003                     	;# 
  3985  0004                     	;# 
  3986  0005                     	;# 
  3987  0006                     	;# 
  3988  0007                     	;# 
  3989  0008                     	;# 
  3990  0009                     	;# 
  3991  000A                     	;# 
  3992  000B                     	;# 
  3993  000C                     	;# 
  3994  000D                     	;# 
  3995  000E                     	;# 
  3996  0010                     	;# 
  3997  0011                     	;# 
  3998  0012                     	;# 
  3999  0013                     	;# 
  4000  0014                     	;# 
  4001  0015                     	;# 
  4002  0016                     	;# 
  4003  0016                     	;# 
  4004  0017                     	;# 
  4005  0018                     	;# 
  4006  0019                     	;# 
  4007  001A                     	;# 
  4008  001A                     	;# 
  4009  001B                     	;# 
  4010  001B                     	;# 
  4011  001C                     	;# 
  4012  001D                     	;# 
  4013  001E                     	;# 
  4014  001F                     	;# 
  4015  008C                     	;# 
  4016  008D                     	;# 
  4017  008E                     	;# 
  4018  0090                     	;# 
  4019  0091                     	;# 
  4020  0092                     	;# 
  4021  0093                     	;# 
  4022  0094                     	;# 
  4023  0095                     	;# 
  4024  0096                     	;# 
  4025  0098                     	;# 
  4026  0099                     	;# 
  4027  009A                     	;# 
  4028  009B                     	;# 
  4029  009B                     	;# 
  4030  009C                     	;# 
  4031  009D                     	;# 
  4032  009E                     	;# 
  4033  009F                     	;# 
  4034  010C                     	;# 
  4035  010D                     	;# 
  4036  010E                     	;# 
  4037  0111                     	;# 
  4038  0112                     	;# 
  4039  0113                     	;# 
  4040  0114                     	;# 
  4041  0115                     	;# 
  4042  0116                     	;# 
  4043  0117                     	;# 
  4044  0118                     	;# 
  4045  0119                     	;# 
  4046  011C                     	;# 
  4047  018C                     	;# 
  4048  018D                     	;# 
  4049  018E                     	;# 
  4050  0191                     	;# 
  4051  0191                     	;# 
  4052  0192                     	;# 
  4053  0193                     	;# 
  4054  0193                     	;# 
  4055  0194                     	;# 
  4056  0195                     	;# 
  4057  0196                     	;# 
  4058  0197                     	;# 
  4059  0199                     	;# 
  4060  0199                     	;# 
  4061  0199                     	;# 
  4062  019A                     	;# 
  4063  019A                     	;# 
  4064  019A                     	;# 
  4065  019B                     	;# 
  4066  019B                     	;# 
  4067  019B                     	;# 
  4068  019B                     	;# 
  4069  019B                     	;# 
  4070  019C                     	;# 
  4071  019C                     	;# 
  4072  019C                     	;# 
  4073  019D                     	;# 
  4074  019D                     	;# 
  4075  019D                     	;# 
  4076  019E                     	;# 
  4077  019E                     	;# 
  4078  019E                     	;# 
  4079  019F                     	;# 
  4080  019F                     	;# 
  4081  019F                     	;# 
  4082  019F                     	;# 
  4083  019F                     	;# 
  4084  020C                     	;# 
  4085  020D                     	;# 
  4086  020E                     	;# 
  4087  0211                     	;# 
  4088  0211                     	;# 
  4089  0212                     	;# 
  4090  0212                     	;# 
  4091  0213                     	;# 
  4092  0213                     	;# 
  4093  0214                     	;# 
  4094  0214                     	;# 
  4095  0215                     	;# 
  4096  0215                     	;# 
  4097  0215                     	;# 
  4098  0215                     	;# 
  4099  0216                     	;# 
  4100  0216                     	;# 
  4101  0217                     	;# 
  4102  0217                     	;# 
  4103  028C                     	;# 
  4104  028D                     	;# 
  4105  028E                     	;# 
  4106  0291                     	;# 
  4107  0291                     	;# 
  4108  0292                     	;# 
  4109  0293                     	;# 
  4110  0294                     	;# 
  4111  0298                     	;# 
  4112  0298                     	;# 
  4113  0299                     	;# 
  4114  029A                     	;# 
  4115  029B                     	;# 
  4116  029E                     	;# 
  4117  030C                     	;# 
  4118  030D                     	;# 
  4119  030E                     	;# 
  4120  038C                     	;# 
  4121  038D                     	;# 
  4122  038E                     	;# 
  4123  0391                     	;# 
  4124  0392                     	;# 
  4125  0393                     	;# 
  4126  0394                     	;# 
  4127  0395                     	;# 
  4128  0396                     	;# 
  4129  0397                     	;# 
  4130  0398                     	;# 
  4131  0399                     	;# 
  4132  040E                     	;# 
  4133  0413                     	;# 
  4134  0413                     	;# 
  4135  0414                     	;# 
  4136  0414                     	;# 
  4137  0415                     	;# 
  4138  0416                     	;# 
  4139  0417                     	;# 
  4140  0418                     	;# 
  4141  041A                     	;# 
  4142  041A                     	;# 
  4143  041B                     	;# 
  4144  041B                     	;# 
  4145  041C                     	;# 
  4146  041D                     	;# 
  4147  041E                     	;# 
  4148  041F                     	;# 
  4149  0493                     	;# 
  4150  0494                     	;# 
  4151  0495                     	;# 
  4152  0496                     	;# 
  4153  049A                     	;# 
  4154  049B                     	;# 
  4155  049C                     	;# 
  4156  049D                     	;# 
  4157  058C                     	;# 
  4158  058C                     	;# 
  4159  058D                     	;# 
  4160  058E                     	;# 
  4161  058E                     	;# 
  4162  058F                     	;# 
  4163  0590                     	;# 
  4164  0590                     	;# 
  4165  0591                     	;# 
  4166  0592                     	;# 
  4167  0592                     	;# 
  4168  0593                     	;# 
  4169  0594                     	;# 
  4170  0594                     	;# 
  4171  0595                     	;# 
  4172  0596                     	;# 
  4173  0596                     	;# 
  4174  0597                     	;# 
  4175  0598                     	;# 
  4176  0599                     	;# 
  4177  059A                     	;# 
  4178  059B                     	;# 
  4179  059B                     	;# 
  4180  059C                     	;# 
  4181  059D                     	;# 
  4182  060C                     	;# 
  4183  060C                     	;# 
  4184  060D                     	;# 
  4185  060E                     	;# 
  4186  060F                     	;# 
  4187  060F                     	;# 
  4188  0610                     	;# 
  4189  0611                     	;# 
  4190  0612                     	;# 
  4191  0613                     	;# 
  4192  0614                     	;# 
  4193  0617                     	;# 
  4194  0618                     	;# 
  4195  0619                     	;# 
  4196  061A                     	;# 
  4197  061B                     	;# 
  4198  061C                     	;# 
  4199  0691                     	;# 
  4200  0692                     	;# 
  4201  0693                     	;# 
  4202  0694                     	;# 
  4203  0695                     	;# 
  4204  0696                     	;# 
  4205  0697                     	;# 
  4206  0699                     	;# 
  4207  069A                     	;# 
  4208  0711                     	;# 
  4209  0712                     	;# 
  4210  0713                     	;# 
  4211  0714                     	;# 
  4212  0715                     	;# 
  4213  0718                     	;# 
  4214  0718                     	;# 
  4215  0719                     	;# 
  4216  071A                     	;# 
  4217  071A                     	;# 
  4218  071B                     	;# 
  4219  071C                     	;# 
  4220  071D                     	;# 
  4221  0791                     	;# 
  4222  0791                     	;# 
  4223  0792                     	;# 
  4224  0793                     	;# 
  4225  0793                     	;# 
  4226  0794                     	;# 
  4227  0795                     	;# 
  4228  0795                     	;# 
  4229  0796                     	;# 
  4230  0797                     	;# 
  4231  0797                     	;# 
  4232  0798                     	;# 
  4233  0799                     	;# 
  4234  079A                     	;# 
  4235  080C                     	;# 
  4236  080C                     	;# 
  4237  080D                     	;# 
  4238  080E                     	;# 
  4239  080E                     	;# 
  4240  080F                     	;# 
  4241  0810                     	;# 
  4242  0810                     	;# 
  4243  0811                     	;# 
  4244  0812                     	;# 
  4245  0812                     	;# 
  4246  0813                     	;# 
  4247  0814                     	;# 
  4248  0815                     	;# 
  4249  0816                     	;# 
  4250  0817                     	;# 
  4251  0818                     	;# 
  4252  0819                     	;# 
  4253  081A                     	;# 
  4254  081A                     	;# 
  4255  081B                     	;# 
  4256  081C                     	;# 
  4257  081C                     	;# 
  4258  081D                     	;# 
  4259  088C                     	;# 
  4260  088D                     	;# 
  4261  088E                     	;# 
  4262  088F                     	;# 
  4263  088F                     	;# 
  4264  0890                     	;# 
  4265  0891                     	;# 
  4266  0892                     	;# 
  4267  0893                     	;# 
  4268  0893                     	;# 
  4269  0894                     	;# 
  4270  0895                     	;# 
  4271  0896                     	;# 
  4272  0897                     	;# 
  4273  0897                     	;# 
  4274  0898                     	;# 
  4275  0899                     	;# 
  4276  0D8C                     	;# 
  4277  0D8C                     	;# 
  4278  0D8D                     	;# 
  4279  0D8E                     	;# 
  4280  0D8F                     	;# 
  4281  0D8F                     	;# 
  4282  0D90                     	;# 
  4283  0D91                     	;# 
  4284  0D92                     	;# 
  4285  0D92                     	;# 
  4286  0D93                     	;# 
  4287  0D94                     	;# 
  4288  0D95                     	;# 
  4289  0D95                     	;# 
  4290  0D96                     	;# 
  4291  0D97                     	;# 
  4292  0D98                     	;# 
  4293  0D99                     	;# 
  4294  0D9A                     	;# 
  4295  0D9B                     	;# 
  4296  0D9C                     	;# 
  4297  0D9D                     	;# 
  4298  0D9E                     	;# 
  4299  0D9E                     	;# 
  4300  0D9F                     	;# 
  4301  0DA0                     	;# 
  4302  0DA1                     	;# 
  4303  0DA1                     	;# 
  4304  0DA2                     	;# 
  4305  0DA3                     	;# 
  4306  0DA4                     	;# 
  4307  0DA4                     	;# 
  4308  0DA5                     	;# 
  4309  0DA6                     	;# 
  4310  0DA7                     	;# 
  4311  0DA7                     	;# 
  4312  0DA8                     	;# 
  4313  0DA9                     	;# 
  4314  0DAA                     	;# 
  4315  0DAB                     	;# 
  4316  0DAC                     	;# 
  4317  0DAD                     	;# 
  4318  0DAE                     	;# 
  4319  0DAF                     	;# 
  4320  0E0F                     	;# 
  4321  0E10                     	;# 
  4322  0E11                     	;# 
  4323  0E12                     	;# 
  4324  0E13                     	;# 
  4325  0E14                     	;# 
  4326  0E15                     	;# 
  4327  0E16                     	;# 
  4328  0E17                     	;# 
  4329  0E18                     	;# 
  4330  0E19                     	;# 
  4331  0E1A                     	;# 
  4332  0E1B                     	;# 
  4333  0E1C                     	;# 
  4334  0E1D                     	;# 
  4335  0E1E                     	;# 
  4336  0E1F                     	;# 
  4337  0E20                     	;# 
  4338  0E21                     	;# 
  4339  0E22                     	;# 
  4340  0E23                     	;# 
  4341  0E24                     	;# 
  4342  0E25                     	;# 
  4343  0E26                     	;# 
  4344  0E27                     	;# 
  4345  0E28                     	;# 
  4346  0E29                     	;# 
  4347  0E2A                     	;# 
  4348  0E2B                     	;# 
  4349  0E2C                     	;# 
  4350  0E2D                     	;# 
  4351  0E2E                     	;# 
  4352  0E90                     	;# 
  4353  0E91                     	;# 
  4354  0E92                     	;# 
  4355  0E94                     	;# 
  4356  0E95                     	;# 
  4357  0E9C                     	;# 
  4358  0E9D                     	;# 
  4359  0E9E                     	;# 
  4360  0E9F                     	;# 
  4361  0EA0                     	;# 
  4362  0EA1                     	;# 
  4363  0EA2                     	;# 
  4364  0EA3                     	;# 
  4365  0EA4                     	;# 
  4366  0EA5                     	;# 
  4367  0EA6                     	;# 
  4368  0EA7                     	;# 
  4369  0F0F                     	;# 
  4370  0F10                     	;# 
  4371  0F11                     	;# 
  4372  0F12                     	;# 
  4373  0F13                     	;# 
  4374  0F14                     	;# 
  4375  0F15                     	;# 
  4376  0F16                     	;# 
  4377  0F17                     	;# 
  4378  0F18                     	;# 
  4379  0F19                     	;# 
  4380  0F1A                     	;# 
  4381  0F1B                     	;# 
  4382  0F1C                     	;# 
  4383  0F1D                     	;# 
  4384  0F1E                     	;# 
  4385  0F1F                     	;# 
  4386  0F20                     	;# 
  4387  0F21                     	;# 
  4388  0F22                     	;# 
  4389  0F23                     	;# 
  4390  0F24                     	;# 
  4391  0F25                     	;# 
  4392  0F26                     	;# 
  4393  0F27                     	;# 
  4394  0F28                     	;# 
  4395  0F29                     	;# 
  4396  0F2A                     	;# 
  4397  0F2B                     	;# 
  4398  0F2C                     	;# 
  4399  0F2D                     	;# 
  4400  0F2E                     	;# 
  4401  0F2F                     	;# 
  4402  0F30                     	;# 
  4403  0F31                     	;# 
  4404  0F32                     	;# 
  4405  0F33                     	;# 
  4406  0F34                     	;# 
  4407  0F35                     	;# 
  4408  0F36                     	;# 
  4409  0F37                     	;# 
  4410  0FE4                     	;# 
  4411  0FE5                     	;# 
  4412  0FE6                     	;# 
  4413  0FE7                     	;# 
  4414  0FE8                     	;# 
  4415  0FE9                     	;# 
  4416  0FEA                     	;# 
  4417  0FEB                     	;# 
  4418  0FED                     	;# 
  4419  0FEE                     	;# 
  4420  0FEF                     	;# 
  4421  0000                     	;# 
  4422  0001                     	;# 
  4423  0002                     	;# 
  4424  0003                     	;# 
  4425  0004                     	;# 
  4426  0005                     	;# 
  4427  0006                     	;# 
  4428  0007                     	;# 
  4429  0008                     	;# 
  4430  0009                     	;# 
  4431  000A                     	;# 
  4432  000B                     	;# 
  4433  000C                     	;# 
  4434  000D                     	;# 
  4435  000E                     	;# 
  4436  0010                     	;# 
  4437  0011                     	;# 
  4438  0012                     	;# 
  4439  0013                     	;# 
  4440  0014                     	;# 
  4441  0015                     	;# 
  4442  0016                     	;# 
  4443  0016                     	;# 
  4444  0017                     	;# 
  4445  0018                     	;# 
  4446  0019                     	;# 
  4447  001A                     	;# 
  4448  001A                     	;# 
  4449  001B                     	;# 
  4450  001B                     	;# 
  4451  001C                     	;# 
  4452  001D                     	;# 
  4453  001E                     	;# 
  4454  001F                     	;# 
  4455  008C                     	;# 
  4456  008D                     	;# 
  4457  008E                     	;# 
  4458  0090                     	;# 
  4459  0091                     	;# 
  4460  0092                     	;# 
  4461  0093                     	;# 
  4462  0094                     	;# 
  4463  0095                     	;# 
  4464  0096                     	;# 
  4465  0098                     	;# 
  4466  0099                     	;# 
  4467  009A                     	;# 
  4468  009B                     	;# 
  4469  009B                     	;# 
  4470  009C                     	;# 
  4471  009D                     	;# 
  4472  009E                     	;# 
  4473  009F                     	;# 
  4474  010C                     	;# 
  4475  010D                     	;# 
  4476  010E                     	;# 
  4477  0111                     	;# 
  4478  0112                     	;# 
  4479  0113                     	;# 
  4480  0114                     	;# 
  4481  0115                     	;# 
  4482  0116                     	;# 
  4483  0117                     	;# 
  4484  0118                     	;# 
  4485  0119                     	;# 
  4486  011C                     	;# 
  4487  018C                     	;# 
  4488  018D                     	;# 
  4489  018E                     	;# 
  4490  0191                     	;# 
  4491  0191                     	;# 
  4492  0192                     	;# 
  4493  0193                     	;# 
  4494  0193                     	;# 
  4495  0194                     	;# 
  4496  0195                     	;# 
  4497  0196                     	;# 
  4498  0197                     	;# 
  4499  0199                     	;# 
  4500  0199                     	;# 
  4501  0199                     	;# 
  4502  019A                     	;# 
  4503  019A                     	;# 
  4504  019A                     	;# 
  4505  019B                     	;# 
  4506  019B                     	;# 
  4507  019B                     	;# 
  4508  019B                     	;# 
  4509  019B                     	;# 
  4510  019C                     	;# 
  4511  019C                     	;# 
  4512  019C                     	;# 
  4513  019D                     	;# 
  4514  019D                     	;# 
  4515  019D                     	;# 
  4516  019E                     	;# 
  4517  019E                     	;# 
  4518  019E                     	;# 
  4519  019F                     	;# 
  4520  019F                     	;# 
  4521  019F                     	;# 
  4522  019F                     	;# 
  4523  019F                     	;# 
  4524  020C                     	;# 
  4525  020D                     	;# 
  4526  020E                     	;# 
  4527  0211                     	;# 
  4528  0211                     	;# 
  4529  0212                     	;# 
  4530  0212                     	;# 
  4531  0213                     	;# 
  4532  0213                     	;# 
  4533  0214                     	;# 
  4534  0214                     	;# 
  4535  0215                     	;# 
  4536  0215                     	;# 
  4537  0215                     	;# 
  4538  0215                     	;# 
  4539  0216                     	;# 
  4540  0216                     	;# 
  4541  0217                     	;# 
  4542  0217                     	;# 
  4543  028C                     	;# 
  4544  028D                     	;# 
  4545  028E                     	;# 
  4546  0291                     	;# 
  4547  0291                     	;# 
  4548  0292                     	;# 
  4549  0293                     	;# 
  4550  0294                     	;# 
  4551  0298                     	;# 
  4552  0298                     	;# 
  4553  0299                     	;# 
  4554  029A                     	;# 
  4555  029B                     	;# 
  4556  029E                     	;# 
  4557  030C                     	;# 
  4558  030D                     	;# 
  4559  030E                     	;# 
  4560  038C                     	;# 
  4561  038D                     	;# 
  4562  038E                     	;# 
  4563  0391                     	;# 
  4564  0392                     	;# 
  4565  0393                     	;# 
  4566  0394                     	;# 
  4567  0395                     	;# 
  4568  0396                     	;# 
  4569  0397                     	;# 
  4570  0398                     	;# 
  4571  0399                     	;# 
  4572  040E                     	;# 
  4573  0413                     	;# 
  4574  0413                     	;# 
  4575  0414                     	;# 
  4576  0414                     	;# 
  4577  0415                     	;# 
  4578  0416                     	;# 
  4579  0417                     	;# 
  4580  0418                     	;# 
  4581  041A                     	;# 
  4582  041A                     	;# 
  4583  041B                     	;# 
  4584  041B                     	;# 
  4585  041C                     	;# 
  4586  041D                     	;# 
  4587  041E                     	;# 
  4588  041F                     	;# 
  4589  0493                     	;# 
  4590  0494                     	;# 
  4591  0495                     	;# 
  4592  0496                     	;# 
  4593  049A                     	;# 
  4594  049B                     	;# 
  4595  049C                     	;# 
  4596  049D                     	;# 
  4597  058C                     	;# 
  4598  058C                     	;# 
  4599  058D                     	;# 
  4600  058E                     	;# 
  4601  058E                     	;# 
  4602  058F                     	;# 
  4603  0590                     	;# 
  4604  0590                     	;# 
  4605  0591                     	;# 
  4606  0592                     	;# 
  4607  0592                     	;# 
  4608  0593                     	;# 
  4609  0594                     	;# 
  4610  0594                     	;# 
  4611  0595                     	;# 
  4612  0596                     	;# 
  4613  0596                     	;# 
  4614  0597                     	;# 
  4615  0598                     	;# 
  4616  0599                     	;# 
  4617  059A                     	;# 
  4618  059B                     	;# 
  4619  059B                     	;# 
  4620  059C                     	;# 
  4621  059D                     	;# 
  4622  060C                     	;# 
  4623  060C                     	;# 
  4624  060D                     	;# 
  4625  060E                     	;# 
  4626  060F                     	;# 
  4627  060F                     	;# 
  4628  0610                     	;# 
  4629  0611                     	;# 
  4630  0612                     	;# 
  4631  0613                     	;# 
  4632  0614                     	;# 
  4633  0617                     	;# 
  4634  0618                     	;# 
  4635  0619                     	;# 
  4636  061A                     	;# 
  4637  061B                     	;# 
  4638  061C                     	;# 
  4639  0691                     	;# 
  4640  0692                     	;# 
  4641  0693                     	;# 
  4642  0694                     	;# 
  4643  0695                     	;# 
  4644  0696                     	;# 
  4645  0697                     	;# 
  4646  0699                     	;# 
  4647  069A                     	;# 
  4648  0711                     	;# 
  4649  0712                     	;# 
  4650  0713                     	;# 
  4651  0714                     	;# 
  4652  0715                     	;# 
  4653  0718                     	;# 
  4654  0718                     	;# 
  4655  0719                     	;# 
  4656  071A                     	;# 
  4657  071A                     	;# 
  4658  071B                     	;# 
  4659  071C                     	;# 
  4660  071D                     	;# 
  4661  0791                     	;# 
  4662  0791                     	;# 
  4663  0792                     	;# 
  4664  0793                     	;# 
  4665  0793                     	;# 
  4666  0794                     	;# 
  4667  0795                     	;# 
  4668  0795                     	;# 
  4669  0796                     	;# 
  4670  0797                     	;# 
  4671  0797                     	;# 
  4672  0798                     	;# 
  4673  0799                     	;# 
  4674  079A                     	;# 
  4675  080C                     	;# 
  4676  080C                     	;# 
  4677  080D                     	;# 
  4678  080E                     	;# 
  4679  080E                     	;# 
  4680  080F                     	;# 
  4681  0810                     	;# 
  4682  0810                     	;# 
  4683  0811                     	;# 
  4684  0812                     	;# 
  4685  0812                     	;# 
  4686  0813                     	;# 
  4687  0814                     	;# 
  4688  0815                     	;# 
  4689  0816                     	;# 
  4690  0817                     	;# 
  4691  0818                     	;# 
  4692  0819                     	;# 
  4693  081A                     	;# 
  4694  081A                     	;# 
  4695  081B                     	;# 
  4696  081C                     	;# 
  4697  081C                     	;# 
  4698  081D                     	;# 
  4699  088C                     	;# 
  4700  088D                     	;# 
  4701  088E                     	;# 
  4702  088F                     	;# 
  4703  088F                     	;# 
  4704  0890                     	;# 
  4705  0891                     	;# 
  4706  0892                     	;# 
  4707  0893                     	;# 
  4708  0893                     	;# 
  4709  0894                     	;# 
  4710  0895                     	;# 
  4711  0896                     	;# 
  4712  0897                     	;# 
  4713  0897                     	;# 
  4714  0898                     	;# 
  4715  0899                     	;# 
  4716  0D8C                     	;# 
  4717  0D8C                     	;# 
  4718  0D8D                     	;# 
  4719  0D8E                     	;# 
  4720  0D8F                     	;# 
  4721  0D8F                     	;# 
  4722  0D90                     	;# 
  4723  0D91                     	;# 
  4724  0D92                     	;# 
  4725  0D92                     	;# 
  4726  0D93                     	;# 
  4727  0D94                     	;# 
  4728  0D95                     	;# 
  4729  0D95                     	;# 
  4730  0D96                     	;# 
  4731  0D97                     	;# 
  4732  0D98                     	;# 
  4733  0D99                     	;# 
  4734  0D9A                     	;# 
  4735  0D9B                     	;# 
  4736  0D9C                     	;# 
  4737  0D9D                     	;# 
  4738  0D9E                     	;# 
  4739  0D9E                     	;# 
  4740  0D9F                     	;# 
  4741  0DA0                     	;# 
  4742  0DA1                     	;# 
  4743  0DA1                     	;# 
  4744  0DA2                     	;# 
  4745  0DA3                     	;# 
  4746  0DA4                     	;# 
  4747  0DA4                     	;# 
  4748  0DA5                     	;# 
  4749  0DA6                     	;# 
  4750  0DA7                     	;# 
  4751  0DA7                     	;# 
  4752  0DA8                     	;# 
  4753  0DA9                     	;# 
  4754  0DAA                     	;# 
  4755  0DAB                     	;# 
  4756  0DAC                     	;# 
  4757  0DAD                     	;# 
  4758  0DAE                     	;# 
  4759  0DAF                     	;# 
  4760  0E0F                     	;# 
  4761  0E10                     	;# 
  4762  0E11                     	;# 
  4763  0E12                     	;# 
  4764  0E13                     	;# 
  4765  0E14                     	;# 
  4766  0E15                     	;# 
  4767  0E16                     	;# 
  4768  0E17                     	;# 
  4769  0E18                     	;# 
  4770  0E19                     	;# 
  4771  0E1A                     	;# 
  4772  0E1B                     	;# 
  4773  0E1C                     	;# 
  4774  0E1D                     	;# 
  4775  0E1E                     	;# 
  4776  0E1F                     	;# 
  4777  0E20                     	;# 
  4778  0E21                     	;# 
  4779  0E22                     	;# 
  4780  0E23                     	;# 
  4781  0E24                     	;# 
  4782  0E25                     	;# 
  4783  0E26                     	;# 
  4784  0E27                     	;# 
  4785  0E28                     	;# 
  4786  0E29                     	;# 
  4787  0E2A                     	;# 
  4788  0E2B                     	;# 
  4789  0E2C                     	;# 
  4790  0E2D                     	;# 
  4791  0E2E                     	;# 
  4792  0E90                     	;# 
  4793  0E91                     	;# 
  4794  0E92                     	;# 
  4795  0E94                     	;# 
  4796  0E95                     	;# 
  4797  0E9C                     	;# 
  4798  0E9D                     	;# 
  4799  0E9E                     	;# 
  4800  0E9F                     	;# 
  4801  0EA0                     	;# 
  4802  0EA1                     	;# 
  4803  0EA2                     	;# 
  4804  0EA3                     	;# 
  4805  0EA4                     	;# 
  4806  0EA5                     	;# 
  4807  0EA6                     	;# 
  4808  0EA7                     	;# 
  4809  0F0F                     	;# 
  4810  0F10                     	;# 
  4811  0F11                     	;# 
  4812  0F12                     	;# 
  4813  0F13                     	;# 
  4814  0F14                     	;# 
  4815  0F15                     	;# 
  4816  0F16                     	;# 
  4817  0F17                     	;# 
  4818  0F18                     	;# 
  4819  0F19                     	;# 
  4820  0F1A                     	;# 
  4821  0F1B                     	;# 
  4822  0F1C                     	;# 
  4823  0F1D                     	;# 
  4824  0F1E                     	;# 
  4825  0F1F                     	;# 
  4826  0F20                     	;# 
  4827  0F21                     	;# 
  4828  0F22                     	;# 
  4829  0F23                     	;# 
  4830  0F24                     	;# 
  4831  0F25                     	;# 
  4832  0F26                     	;# 
  4833  0F27                     	;# 
  4834  0F28                     	;# 
  4835  0F29                     	;# 
  4836  0F2A                     	;# 
  4837  0F2B                     	;# 
  4838  0F2C                     	;# 
  4839  0F2D                     	;# 
  4840  0F2E                     	;# 
  4841  0F2F                     	;# 
  4842  0F30                     	;# 
  4843  0F31                     	;# 
  4844  0F32                     	;# 
  4845  0F33                     	;# 
  4846  0F34                     	;# 
  4847  0F35                     	;# 
  4848  0F36                     	;# 
  4849  0F37                     	;# 
  4850  0FE4                     	;# 
  4851  0FE5                     	;# 
  4852  0FE6                     	;# 
  4853  0FE7                     	;# 
  4854  0FE8                     	;# 
  4855  0FE9                     	;# 
  4856  0FEA                     	;# 
  4857  0FEB                     	;# 
  4858  0FED                     	;# 
  4859  0FEE                     	;# 
  4860  0FEF                     	;# 
  4861  0000                     	;# 
  4862  0001                     	;# 
  4863  0002                     	;# 
  4864  0003                     	;# 
  4865  0004                     	;# 
  4866  0005                     	;# 
  4867  0006                     	;# 
  4868  0007                     	;# 
  4869  0008                     	;# 
  4870  0009                     	;# 
  4871  000A                     	;# 
  4872  000B                     	;# 
  4873  000C                     	;# 
  4874  000D                     	;# 
  4875  000E                     	;# 
  4876  0010                     	;# 
  4877  0011                     	;# 
  4878  0012                     	;# 
  4879  0013                     	;# 
  4880  0014                     	;# 
  4881  0015                     	;# 
  4882  0016                     	;# 
  4883  0016                     	;# 
  4884  0017                     	;# 
  4885  0018                     	;# 
  4886  0019                     	;# 
  4887  001A                     	;# 
  4888  001A                     	;# 
  4889  001B                     	;# 
  4890  001B                     	;# 
  4891  001C                     	;# 
  4892  001D                     	;# 
  4893  001E                     	;# 
  4894  001F                     	;# 
  4895  008C                     	;# 
  4896  008D                     	;# 
  4897  008E                     	;# 
  4898  0090                     	;# 
  4899  0091                     	;# 
  4900  0092                     	;# 
  4901  0093                     	;# 
  4902  0094                     	;# 
  4903  0095                     	;# 
  4904  0096                     	;# 
  4905  0098                     	;# 
  4906  0099                     	;# 
  4907  009A                     	;# 
  4908  009B                     	;# 
  4909  009B                     	;# 
  4910  009C                     	;# 
  4911  009D                     	;# 
  4912  009E                     	;# 
  4913  009F                     	;# 
  4914  010C                     	;# 
  4915  010D                     	;# 
  4916  010E                     	;# 
  4917  0111                     	;# 
  4918  0112                     	;# 
  4919  0113                     	;# 
  4920  0114                     	;# 
  4921  0115                     	;# 
  4922  0116                     	;# 
  4923  0117                     	;# 
  4924  0118                     	;# 
  4925  0119                     	;# 
  4926  011C                     	;# 
  4927  018C                     	;# 
  4928  018D                     	;# 
  4929  018E                     	;# 
  4930  0191                     	;# 
  4931  0191                     	;# 
  4932  0192                     	;# 
  4933  0193                     	;# 
  4934  0193                     	;# 
  4935  0194                     	;# 
  4936  0195                     	;# 
  4937  0196                     	;# 
  4938  0197                     	;# 
  4939  0199                     	;# 
  4940  0199                     	;# 
  4941  0199                     	;# 
  4942  019A                     	;# 
  4943  019A                     	;# 
  4944  019A                     	;# 
  4945  019B                     	;# 
  4946  019B                     	;# 
  4947  019B                     	;# 
  4948  019B                     	;# 
  4949  019B                     	;# 
  4950  019C                     	;# 
  4951  019C                     	;# 
  4952  019C                     	;# 
  4953  019D                     	;# 
  4954  019D                     	;# 
  4955  019D                     	;# 
  4956  019E                     	;# 
  4957  019E                     	;# 
  4958  019E                     	;# 
  4959  019F                     	;# 
  4960  019F                     	;# 
  4961  019F                     	;# 
  4962  019F                     	;# 
  4963  019F                     	;# 
  4964  020C                     	;# 
  4965  020D                     	;# 
  4966  020E                     	;# 
  4967  0211                     	;# 
  4968  0211                     	;# 
  4969  0212                     	;# 
  4970  0212                     	;# 
  4971  0213                     	;# 
  4972  0213                     	;# 
  4973  0214                     	;# 
  4974  0214                     	;# 
  4975  0215                     	;# 
  4976  0215                     	;# 
  4977  0215                     	;# 
  4978  0215                     	;# 
  4979  0216                     	;# 
  4980  0216                     	;# 
  4981  0217                     	;# 
  4982  0217                     	;# 
  4983  028C                     	;# 
  4984  028D                     	;# 
  4985  028E                     	;# 
  4986  0291                     	;# 
  4987  0291                     	;# 
  4988  0292                     	;# 
  4989  0293                     	;# 
  4990  0294                     	;# 
  4991  0298                     	;# 
  4992  0298                     	;# 
  4993  0299                     	;# 
  4994  029A                     	;# 
  4995  029B                     	;# 
  4996  029E                     	;# 
  4997  030C                     	;# 
  4998  030D                     	;# 
  4999  030E                     	;# 
  5000  038C                     	;# 
  5001  038D                     	;# 
  5002  038E                     	;# 
  5003  0391                     	;# 
  5004  0392                     	;# 
  5005  0393                     	;# 
  5006  0394                     	;# 
  5007  0395                     	;# 
  5008  0396                     	;# 
  5009  0397                     	;# 
  5010  0398                     	;# 
  5011  0399                     	;# 
  5012  040E                     	;# 
  5013  0413                     	;# 
  5014  0413                     	;# 
  5015  0414                     	;# 
  5016  0414                     	;# 
  5017  0415                     	;# 
  5018  0416                     	;# 
  5019  0417                     	;# 
  5020  0418                     	;# 
  5021  041A                     	;# 
  5022  041A                     	;# 
  5023  041B                     	;# 
  5024  041B                     	;# 
  5025  041C                     	;# 
  5026  041D                     	;# 
  5027  041E                     	;# 
  5028  041F                     	;# 
  5029  0493                     	;# 
  5030  0494                     	;# 
  5031  0495                     	;# 
  5032  0496                     	;# 
  5033  049A                     	;# 
  5034  049B                     	;# 
  5035  049C                     	;# 
  5036  049D                     	;# 
  5037  058C                     	;# 
  5038  058C                     	;# 
  5039  058D                     	;# 
  5040  058E                     	;# 
  5041  058E                     	;# 
  5042  058F                     	;# 
  5043  0590                     	;# 
  5044  0590                     	;# 
  5045  0591                     	;# 
  5046  0592                     	;# 
  5047  0592                     	;# 
  5048  0593                     	;# 
  5049  0594                     	;# 
  5050  0594                     	;# 
  5051  0595                     	;# 
  5052  0596                     	;# 
  5053  0596                     	;# 
  5054  0597                     	;# 
  5055  0598                     	;# 
  5056  0599                     	;# 
  5057  059A                     	;# 
  5058  059B                     	;# 
  5059  059B                     	;# 
  5060  059C                     	;# 
  5061  059D                     	;# 
  5062  060C                     	;# 
  5063  060C                     	;# 
  5064  060D                     	;# 
  5065  060E                     	;# 
  5066  060F                     	;# 
  5067  060F                     	;# 
  5068  0610                     	;# 
  5069  0611                     	;# 
  5070  0612                     	;# 
  5071  0613                     	;# 
  5072  0614                     	;# 
  5073  0617                     	;# 
  5074  0618                     	;# 
  5075  0619                     	;# 
  5076  061A                     	;# 
  5077  061B                     	;# 
  5078  061C                     	;# 
  5079  0691                     	;# 
  5080  0692                     	;# 
  5081  0693                     	;# 
  5082  0694                     	;# 
  5083  0695                     	;# 
  5084  0696                     	;# 
  5085  0697                     	;# 
  5086  0699                     	;# 
  5087  069A                     	;# 
  5088  0711                     	;# 
  5089  0712                     	;# 
  5090  0713                     	;# 
  5091  0714                     	;# 
  5092  0715                     	;# 
  5093  0718                     	;# 
  5094  0718                     	;# 
  5095  0719                     	;# 
  5096  071A                     	;# 
  5097  071A                     	;# 
  5098  071B                     	;# 
  5099  071C                     	;# 
  5100  071D                     	;# 
  5101  0791                     	;# 
  5102  0791                     	;# 
  5103  0792                     	;# 
  5104  0793                     	;# 
  5105  0793                     	;# 
  5106  0794                     	;# 
  5107  0795                     	;# 
  5108  0795                     	;# 
  5109  0796                     	;# 
  5110  0797                     	;# 
  5111  0797                     	;# 
  5112  0798                     	;# 
  5113  0799                     	;# 
  5114  079A                     	;# 
  5115  080C                     	;# 
  5116  080C                     	;# 
  5117  080D                     	;# 
  5118  080E                     	;# 
  5119  080E                     	;# 
  5120  080F                     	;# 
  5121  0810                     	;# 
  5122  0810                     	;# 
  5123  0811                     	;# 
  5124  0812                     	;# 
  5125  0812                     	;# 
  5126  0813                     	;# 
  5127  0814                     	;# 
  5128  0815                     	;# 
  5129  0816                     	;# 
  5130  0817                     	;# 
  5131  0818                     	;# 
  5132  0819                     	;# 
  5133  081A                     	;# 
  5134  081A                     	;# 
  5135  081B                     	;# 
  5136  081C                     	;# 
  5137  081C                     	;# 
  5138  081D                     	;# 
  5139  088C                     	;# 
  5140  088D                     	;# 
  5141  088E                     	;# 
  5142  088F                     	;# 
  5143  088F                     	;# 
  5144  0890                     	;# 
  5145  0891                     	;# 
  5146  0892                     	;# 
  5147  0893                     	;# 
  5148  0893                     	;# 
  5149  0894                     	;# 
  5150  0895                     	;# 
  5151  0896                     	;# 
  5152  0897                     	;# 
  5153  0897                     	;# 
  5154  0898                     	;# 
  5155  0899                     	;# 
  5156  0D8C                     	;# 
  5157  0D8C                     	;# 
  5158  0D8D                     	;# 
  5159  0D8E                     	;# 
  5160  0D8F                     	;# 
  5161  0D8F                     	;# 
  5162  0D90                     	;# 
  5163  0D91                     	;# 
  5164  0D92                     	;# 
  5165  0D92                     	;# 
  5166  0D93                     	;# 
  5167  0D94                     	;# 
  5168  0D95                     	;# 
  5169  0D95                     	;# 
  5170  0D96                     	;# 
  5171  0D97                     	;# 
  5172  0D98                     	;# 
  5173  0D99                     	;# 
  5174  0D9A                     	;# 
  5175  0D9B                     	;# 
  5176  0D9C                     	;# 
  5177  0D9D                     	;# 
  5178  0D9E                     	;# 
  5179  0D9E                     	;# 
  5180  0D9F                     	;# 
  5181  0DA0                     	;# 
  5182  0DA1                     	;# 
  5183  0DA1                     	;# 
  5184  0DA2                     	;# 
  5185  0DA3                     	;# 
  5186  0DA4                     	;# 
  5187  0DA4                     	;# 
  5188  0DA5                     	;# 
  5189  0DA6                     	;# 
  5190  0DA7                     	;# 
  5191  0DA7                     	;# 
  5192  0DA8                     	;# 
  5193  0DA9                     	;# 
  5194  0DAA                     	;# 
  5195  0DAB                     	;# 
  5196  0DAC                     	;# 
  5197  0DAD                     	;# 
  5198  0DAE                     	;# 
  5199  0DAF                     	;# 
  5200  0E0F                     	;# 
  5201  0E10                     	;# 
  5202  0E11                     	;# 
  5203  0E12                     	;# 
  5204  0E13                     	;# 
  5205  0E14                     	;# 
  5206  0E15                     	;# 
  5207  0E16                     	;# 
  5208  0E17                     	;# 
  5209  0E18                     	;# 
  5210  0E19                     	;# 
  5211  0E1A                     	;# 
  5212  0E1B                     	;# 
  5213  0E1C                     	;# 
  5214  0E1D                     	;# 
  5215  0E1E                     	;# 
  5216  0E1F                     	;# 
  5217  0E20                     	;# 
  5218  0E21                     	;# 
  5219  0E22                     	;# 
  5220  0E23                     	;# 
  5221  0E24                     	;# 
  5222  0E25                     	;# 
  5223  0E26                     	;# 
  5224  0E27                     	;# 
  5225  0E28                     	;# 
  5226  0E29                     	;# 
  5227  0E2A                     	;# 
  5228  0E2B                     	;# 
  5229  0E2C                     	;# 
  5230  0E2D                     	;# 
  5231  0E2E                     	;# 
  5232  0E90                     	;# 
  5233  0E91                     	;# 
  5234  0E92                     	;# 
  5235  0E94                     	;# 
  5236  0E95                     	;# 
  5237  0E9C                     	;# 
  5238  0E9D                     	;# 
  5239  0E9E                     	;# 
  5240  0E9F                     	;# 
  5241  0EA0                     	;# 
  5242  0EA1                     	;# 
  5243  0EA2                     	;# 
  5244  0EA3                     	;# 
  5245  0EA4                     	;# 
  5246  0EA5                     	;# 
  5247  0EA6                     	;# 
  5248  0EA7                     	;# 
  5249  0F0F                     	;# 
  5250  0F10                     	;# 
  5251  0F11                     	;# 
  5252  0F12                     	;# 
  5253  0F13                     	;# 
  5254  0F14                     	;# 
  5255  0F15                     	;# 
  5256  0F16                     	;# 
  5257  0F17                     	;# 
  5258  0F18                     	;# 
  5259  0F19                     	;# 
  5260  0F1A                     	;# 
  5261  0F1B                     	;# 
  5262  0F1C                     	;# 
  5263  0F1D                     	;# 
  5264  0F1E                     	;# 
  5265  0F1F                     	;# 
  5266  0F20                     	;# 
  5267  0F21                     	;# 
  5268  0F22                     	;# 
  5269  0F23                     	;# 
  5270  0F24                     	;# 
  5271  0F25                     	;# 
  5272  0F26                     	;# 
  5273  0F27                     	;# 
  5274  0F28                     	;# 
  5275  0F29                     	;# 
  5276  0F2A                     	;# 
  5277  0F2B                     	;# 
  5278  0F2C                     	;# 
  5279  0F2D                     	;# 
  5280  0F2E                     	;# 
  5281  0F2F                     	;# 
  5282  0F30                     	;# 
  5283  0F31                     	;# 
  5284  0F32                     	;# 
  5285  0F33                     	;# 
  5286  0F34                     	;# 
  5287  0F35                     	;# 
  5288  0F36                     	;# 
  5289  0F37                     	;# 
  5290  0FE4                     	;# 
  5291  0FE5                     	;# 
  5292  0FE6                     	;# 
  5293  0FE7                     	;# 
  5294  0FE8                     	;# 
  5295  0FE9                     	;# 
  5296  0FEA                     	;# 
  5297  0FEB                     	;# 
  5298  0FED                     	;# 
  5299  0FEE                     	;# 
  5300  0FEF                     	;# 
  5301                           
  5302                           	psect	stringtext
  5303  0400                     __pstringtext:	
  5304  0400                     _ledFullOff:	
  5305  0400  3400               	retlw	0
  5306  0401  3400               	retlw	0
  5307  0402  3400               	retlw	0
  5308  0403                     __end_of_ledFullOff:	
  5309  0403                     _ledFullOn:	
  5310  0403  3414               	retlw	20
  5311  0404  3414               	retlw	20
  5312  0405  3414               	retlw	20
  5313  0406                     __end_of_ledFullOn:	
  5314  0406                     _CMD_SET_DIRECT:	
  5315  0406  3453               	retlw	83
  5316  0407  3465               	retlw	101
  5317  0408  3474               	retlw	116
  5318  0409  344C               	retlw	76
  5319  040A  3445               	retlw	69
  5320  040B  3444               	retlw	68
  5321  040C  3420               	retlw	32
  5322  040D  3444               	retlw	68
  5323  040E  3449               	retlw	73
  5324  040F  3452               	retlw	82
  5325  0410  3445               	retlw	69
  5326  0411  3443               	retlw	67
  5327  0412  3454               	retlw	84
  5328  0413  340D               	retlw	13
  5329  0414  340A               	retlw	10
  5330  0415  3400               	retlw	0
  5331  0416                     __end_of_CMD_SET_DIRECT:	
  5332  0416                     _CMD_SET_STARRY:	
  5333  0416  3453               	retlw	83
  5334  0417  3465               	retlw	101
  5335  0418  3474               	retlw	116
  5336  0419  344C               	retlw	76
  5337  041A  3445               	retlw	69
  5338  041B  3444               	retlw	68
  5339  041C  3420               	retlw	32
  5340  041D  3453               	retlw	83
  5341  041E  3454               	retlw	84
  5342  041F  3441               	retlw	65
  5343  0420  3452               	retlw	82
  5344  0421  3452               	retlw	82
  5345  0422  3459               	retlw	89
  5346  0423  340D               	retlw	13
  5347  0424  340A               	retlw	10
  5348  0425  3400               	retlw	0
  5349  0426                     __end_of_CMD_SET_STARRY:	
  5350  0426                     _CMD_SET_PARTY:	
  5351  0426  3453               	retlw	83
  5352  0427  3465               	retlw	101
  5353  0428  3474               	retlw	116
  5354  0429  344C               	retlw	76
  5355  042A  3445               	retlw	69
  5356  042B  3444               	retlw	68
  5357  042C  3420               	retlw	32
  5358  042D  3450               	retlw	80
  5359  042E  3441               	retlw	65
  5360  042F  3452               	retlw	82
  5361  0430  3454               	retlw	84
  5362  0431  3459               	retlw	89
  5363  0432  340D               	retlw	13
  5364  0433  340A               	retlw	10
  5365  0434  3400               	retlw	0
  5366  0435                     __end_of_CMD_SET_PARTY:	
  5367  0435                     _CMD_GET_STATE:	
  5368  0435  3447               	retlw	71
  5369  0436  3465               	retlw	101
  5370  0437  3474               	retlw	116
  5371  0438  344C               	retlw	76
  5372  0439  3445               	retlw	69
  5373  043A  3444               	retlw	68
  5374  043B  3453               	retlw	83
  5375  043C  3474               	retlw	116
  5376  043D  3461               	retlw	97
  5377  043E  3474               	retlw	116
  5378  043F  3465               	retlw	101
  5379  0440  340D               	retlw	13
  5380  0441  340A               	retlw	10
  5381  0442  3400               	retlw	0
  5382  0443                     __end_of_CMD_GET_STATE:	
  5383  0443                     _CMD_SET_XMAS:	
  5384  0443  3453               	retlw	83
  5385  0444  3465               	retlw	101
  5386  0445  3474               	retlw	116
  5387  0446  344C               	retlw	76
  5388  0447  3445               	retlw	69
  5389  0448  3444               	retlw	68
  5390  0449  3420               	retlw	32
  5391  044A  3458               	retlw	88
  5392  044B  344D               	retlw	77
  5393  044C  3441               	retlw	65
  5394  044D  3453               	retlw	83
  5395  044E  340D               	retlw	13
  5396  044F  340A               	retlw	10
  5397  0450  3400               	retlw	0
  5398  0451                     __end_of_CMD_SET_XMAS:	
  5399  0451                     _CMD_SET_OFF:	
  5400  0451  3453               	retlw	83
  5401  0452  3465               	retlw	101
  5402  0453  3474               	retlw	116
  5403  0454  344C               	retlw	76
  5404  0455  3445               	retlw	69
  5405  0456  3444               	retlw	68
  5406  0457  3420               	retlw	32
  5407  0458  344F               	retlw	79
  5408  0459  3466               	retlw	102
  5409  045A  3466               	retlw	102
  5410  045B  340D               	retlw	13
  5411  045C  340A               	retlw	10
  5412  045D  3400               	retlw	0
  5413  045E                     __end_of_CMD_SET_OFF:	
  5414  000B                     _INTCONbits	set	11
  5415  0010                     _PIR1bits	set	16
  5416  001E                     _T2CLKCON	set	30
  5417  001C                     _T2CON	set	28
  5418  001C                     _T2CONbits	set	28
  5419  001D                     _T2HLT	set	29
  5420  001B                     _T2PR	set	27
  5421  001F                     _T2RST	set	31
  5422  001A                     _T2TMR	set	26
  5423  005F                     _GIE	set	95
  5424  009D                     _ADCON0	set	157
  5425  009E                     _ADCON1	set	158
  5426  009F                     _ADCON2	set	159
  5427  009C                     _ADRESH	set	156
  5428  009B                     _ADRESL	set	155
  5429  0095                     _OPTION_REGbits	set	149
  5430  0099                     _OSCCON	set	153
  5431  009A                     _OSCSTAT	set	154
  5432  0098                     _OSCTUNE	set	152
  5433  0090                     _PIE1bits	set	144
  5434  008C                     _TRISA	set	140
  5435  008D                     _TRISB	set	141
  5436  008E                     _TRISC	set	142
  5437  04D6                     _PLLR	set	1238
  5438  010C                     _LATA	set	268
  5439  010D                     _LATB	set	269
  5440  010E                     _LATC	set	270
  5441  018C                     _ANSELA	set	396
  5442  018D                     _ANSELB	set	397
  5443  018E                     _ANSELC	set	398
  5444  019F                     _BAUD1CON	set	415
  5445  0199                     _RC1REG	set	409
  5446  019D                     _RC1STA	set	413
  5447  019D                     _RC1STAbits	set	413
  5448  019C                     _SPBRGH	set	412
  5449  019B                     _SPBRGL	set	411
  5450  019A                     _TX1REG	set	410
  5451  019E                     _TX1STA	set	414
  5452  0212                     _SSP1ADD	set	530
  5453  0215                     _SSP1CON1	set	533
  5454  0215                     _SSP1CON1bits	set	533
  5455  0214                     _SSP1STAT	set	532
  5456  0214                     _SSP1STATbits	set	532
  5457  0211                     _SSPBUF	set	529
  5458  020D                     _WPUB	set	525
  5459  020E                     _WPUC	set	526
  5460  029E                     _CCPTMRSbits	set	670
  5461  1CB6                     _IOCBF6	set	7350
  5462  1CB7                     _IOCBF7	set	7351
  5463  1CA6                     _IOCBP6	set	7334
  5464  1CA7                     _IOCBP7	set	7335
  5465  1CCB                     _IOCCF3	set	7371
  5466  1CCC                     _IOCCF4	set	7372
  5467  1CCD                     _IOCCF5	set	7373
  5468  1CCE                     _IOCCF6	set	7374
  5469  1CCF                     _IOCCF7	set	7375
  5470  1CBB                     _IOCCP3	set	7355
  5471  1CBC                     _IOCCP4	set	7356
  5472  1CBD                     _IOCCP5	set	7357
  5473  1CBE                     _IOCCP6	set	7358
  5474  1CBF                     _IOCCP7	set	7359
  5475  0619                     _PWM3CON	set	1561
  5476  0618                     _PWM3DCH	set	1560
  5477  0617                     _PWM3DCL	set	1559
  5478  0E0F                     _PPSLOCK	set	3599
  5479  0E0F                     _PPSLOCKbits	set	3599
  5480  0E24                     _RXPPS	set	3620
  5481  0E20                     _SSPCLKPPS	set	3616
  5482  0E21                     _SSPDATPPS	set	3617
  5483  0E95                     _RA5PPS	set	3733
  5484  0E9C                     _RB4PPS	set	3740
  5485  0EA0                     _RC0PPS	set	3744
  5486  0EA1                     _RC1PPS	set	3745
  5487  0F2E                     _CLC4CON	set	3886
  5488  0F34                     _CLC4GLS0	set	3892
  5489  0F35                     _CLC4GLS1	set	3893
  5490  0F36                     _CLC4GLS2	set	3894
  5491  0F37                     _CLC4GLS3	set	3895
  5492  0F2F                     _CLC4POL	set	3887
  5493  0F30                     _CLC4SEL0	set	3888
  5494  0F31                     _CLC4SEL1	set	3889
  5495  0F32                     _CLC4SEL2	set	3890
  5496  0F33                     _CLC4SEL3	set	3891
  5497  045E                     STR_7:	
  5498  045E  3449               	retlw	73	;'I'
  5499  045F  346E               	retlw	110	;'n'
  5500  0460  3476               	retlw	118	;'v'
  5501  0461  3461               	retlw	97	;'a'
  5502  0462  346C               	retlw	108	;'l'
  5503  0463  3469               	retlw	105	;'i'
  5504  0464  3464               	retlw	100	;'d'
  5505  0465  3420               	retlw	32	;' '
  5506  0466  3443               	retlw	67	;'C'
  5507  0467  346F               	retlw	111	;'o'
  5508  0468  346D               	retlw	109	;'m'
  5509  0469  346D               	retlw	109	;'m'
  5510  046A  3461               	retlw	97	;'a'
  5511  046B  346E               	retlw	110	;'n'
  5512  046C  3464               	retlw	100	;'d'
  5513  046D  3420               	retlw	32	;' '
  5514  046E  340D               	retlw	13
  5515  046F  340A               	retlw	10
  5516  0470  3400               	retlw	0
  5517  0471                     STR_2:	
  5518  0471  3444               	retlw	68	;'D'
  5519  0472  3469               	retlw	105	;'i'
  5520  0473  3472               	retlw	114	;'r'
  5521  0474  3465               	retlw	101	;'e'
  5522  0475  3463               	retlw	99	;'c'
  5523  0476  3474               	retlw	116	;'t'
  5524  0477  3420               	retlw	32	;' '
  5525  0478  3463               	retlw	99	;'c'
  5526  0479  346F               	retlw	111	;'o'
  5527  047A  346C               	retlw	108	;'l'
  5528  047B  346F               	retlw	111	;'o'
  5529  047C  3472               	retlw	114	;'r'
  5530  047D  340D               	retlw	13
  5531  047E  340A               	retlw	10
  5532  047F  3400               	retlw	0
  5533  0480                     STR_1:	
  5534  0480  344C               	retlw	76	;'L'
  5535  0481  3445               	retlw	69	;'E'
  5536  0482  3444               	retlw	68	;'D'
  5537  0483  3420               	retlw	32	;' '
  5538  0484  3469               	retlw	105	;'i'
  5539  0485  3473               	retlw	115	;'s'
  5540  0486  3420               	retlw	32	;' '
  5541  0487  344F               	retlw	79	;'O'
  5542  0488  3446               	retlw	70	;'F'
  5543  0489  3446               	retlw	70	;'F'
  5544  048A  340D               	retlw	13
  5545  048B  340A               	retlw	10
  5546  048C  3400               	retlw	0
  5547  048D                     STR_3:	
  5548  048D  3453               	retlw	83	;'S'
  5549  048E  3474               	retlw	116	;'t'
  5550  048F  3461               	retlw	97	;'a'
  5551  0490  3472               	retlw	114	;'r'
  5552  0491  3472               	retlw	114	;'r'
  5553  0492  3479               	retlw	121	;'y'
  5554  0493  340D               	retlw	13
  5555  0494  340A               	retlw	10
  5556  0495  3400               	retlw	0
  5557  0496                     STR_8:	
  5558  0496  3444               	retlw	68	;'D'
  5559  0497  344F               	retlw	79	;'O'
  5560  0498  344E               	retlw	78	;'N'
  5561  0499  3445               	retlw	69	;'E'
  5562  049A  3421               	retlw	33	;'!'
  5563  049B  340D               	retlw	13
  5564  049C  340A               	retlw	10
  5565  049D  3400               	retlw	0
  5566  049E                     STR_6:	
  5567  049E  3445               	retlw	69	;'E'
  5568  049F  3452               	retlw	82	;'R'
  5569  04A0  3452               	retlw	82	;'R'
  5570  04A1  344F               	retlw	79	;'O'
  5571  04A2  3452               	retlw	82	;'R'
  5572  04A3  340D               	retlw	13
  5573  04A4  340A               	retlw	10
  5574  04A5  3400               	retlw	0
  5575  04A6                     STR_5:	
  5576  04A6  3450               	retlw	80	;'P'
  5577  04A7  3461               	retlw	97	;'a'
  5578  04A8  3472               	retlw	114	;'r'
  5579  04A9  3474               	retlw	116	;'t'
  5580  04AA  3479               	retlw	121	;'y'
  5581  04AB  340D               	retlw	13
  5582  04AC  340A               	retlw	10
  5583  04AD  3400               	retlw	0
  5584  04AE                     STR_4:	
  5585  04AE  3458               	retlw	88	;'X'
  5586  04AF  346D               	retlw	109	;'m'
  5587  04B0  3461               	retlw	97	;'a'
  5588  04B1  3473               	retlw	115	;'s'
  5589  04B2  340D               	retlw	13
  5590  04B3  340A               	retlw	10
  5591  04B4  3400               	retlw	0
  5592  045E                     
  5593                           ; #config settings
  5594  0000                     
  5595                           	psect	cinit
  5596  0020                     start_initialization:	
  5597  0020                     __initialization:	
  5598                           
  5599                           ; Clear objects allocated to BANK0
  5600  0020  3020               	movlw	low __pbssBANK0
  5601  0021  0084               	movwf	4
  5602  0022  3000               	movlw	high __pbssBANK0
  5603  0023  0085               	movwf	5
  5604  0024  3038               	movlw	56
  5605  0025  3185  2504  3180   	fcall	clear_ram0
  5606  0028                     end_of_initialization:	
  5607                           ;End of C runtime variable initialization code
  5608                           
  5609  0028                     __end_of__initialization:	
  5610  0028  0020               	movlb	0
  5611  0029  282A               	ljmp	_main	;jump to C main() function
  5612  002A                     __pmaintext:	
  5613 ;;
  5614 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  5615 ;;
  5616 ;; *************** function _main *****************
  5617 ;; Defined at:
  5618 ;;		line 56 in file "../src/main.c"
  5619 ;; Parameters:    Size  Location     Type
  5620 ;;		None
  5621 ;; Auto vars:     Size  Location     Type
  5622 ;;		None
  5623 ;; Return value:  Size  Location     Type
  5624 ;;		None               void
  5625 ;; Registers used:
  5626 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5627 ;; Tracked objects:
  5628 ;;		On entry : B1F/0
  5629 ;;		On exit  : 0/0
  5630 ;;		Unchanged: 0/0
  5631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5634 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5635 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5636 ;;Total ram usage:        3 bytes
  5637 ;; Hardware stack levels required when called:    6
  5638 ;; This function calls:
  5639 ;;		_COMM_Task
  5640 ;;		_LED_Task
  5641 ;;		_LED_Test
  5642 ;;		_SYSTEM_Initialize
  5643 ;; This function is called by:
  5644 ;;		Startup code after reset
  5645 ;; This function uses a non-reentrant model
  5646 ;;
  5647                           
  5648                           
  5649                           ;psect for function _main
  5650  002A                     _main:	
  5651                           
  5652                           ;main.c: 59: SYSTEM_Initialize();
  5653                           
  5654                           ;incstack = 0
  5655                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5656  002A  2324  3180         	fcall	_SYSTEM_Initialize
  5657                           
  5658                           ;main.c: 62: (INTCONbits.GIE = 1);
  5659  002C  178B               	bsf	11,7	;volatile
  5660                           
  5661                           ;main.c: 65: (INTCONbits.PEIE = 1);
  5662  002D  170B               	bsf	11,6	;volatile
  5663                           
  5664                           ;main.c: 68: LED_Test();
  5665  002E  2041  3180         	fcall	_LED_Test
  5666  0030                     l2076:	
  5667                           
  5668                           ;main.c: 71: {
  5669                           ;main.c: 72: COMM_Task();
  5670  0030  2114  3180         	fcall	_COMM_Task
  5671                           
  5672                           ;main.c: 73: LED_Task();
  5673  0032  2095  3180         	fcall	_LED_Task
  5674                           
  5675                           ;main.c: 74: _delay((unsigned long)((100)*(32000000/4000.0)));
  5676  0034  3005               	movlw	5
  5677  0035  00DA               	movwf	??_main+2
  5678  0036  300F               	movlw	15
  5679  0037  00D9               	movwf	??_main+1
  5680  0038  30F4               	movlw	244
  5681  0039  00D8               	movwf	??_main
  5682  003A                     u1287:	
  5683  003A  0BD8               	decfsz	??_main,f
  5684  003B  283A               	goto	u1287
  5685  003C  0BD9               	decfsz	??_main+1,f
  5686  003D  283A               	goto	u1287
  5687  003E  0BDA               	decfsz	??_main+2,f
  5688  003F  283A               	goto	u1287
  5689  0040  2830               	goto	l2076
  5690  0041                     __end_of_main:	
  5691  0041                     __ptext11:	
  5692 ;; *************** function _LED_Test *****************
  5693 ;; Defined at:
  5694 ;;		line 13 in file "../src/LED.c"
  5695 ;; Parameters:    Size  Location     Type
  5696 ;;		None
  5697 ;; Auto vars:     Size  Location     Type
  5698 ;;  j               1    6[COMMON] unsigned char 
  5699 ;;  i               1    5[COMMON] unsigned char 
  5700 ;; Return value:  Size  Location     Type
  5701 ;;		None               void
  5702 ;; Registers used:
  5703 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5704 ;; Tracked objects:
  5705 ;;		On entry : 1F/5
  5706 ;;		On exit  : 0/0
  5707 ;;		Unchanged: 0/0
  5708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5710 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5711 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5712 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5713 ;;Total ram usage:        5 bytes
  5714 ;; Hardware stack levels used:    1
  5715 ;; Hardware stack levels required when called:    4
  5716 ;; This function calls:
  5717 ;;		_ledSendByte
  5718 ;; This function is called by:
  5719 ;;		_main
  5720 ;; This function uses a non-reentrant model
  5721 ;;
  5722                           
  5723                           
  5724                           ;psect for function _LED_Test
  5725  0041                     _LED_Test:	
  5726                           
  5727                           ;LED.c: 17: for(uint8_t i=0; i<6; i++)
  5728                           
  5729                           ;incstack = 0
  5730                           ; Regs used in _LED_Test: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5731  0041  01F5               	clrf	LED_Test@i
  5732  0042                     l1814:	
  5733                           
  5734                           ;LED.c: 18: {
  5735                           ;LED.c: 19: for(uint8_t j=0;j<6;j++)
  5736  0042  01F6               	clrf	LED_Test@j
  5737  0043                     l1820:	
  5738                           
  5739                           ;LED.c: 20: {
  5740                           ;LED.c: 21: if(j==i)
  5741  0043  0876               	movf	LED_Test@j,w
  5742  0044  0675               	xorwf	LED_Test@i,w
  5743  0045  1D03               	skipz
  5744  0046  2879               	goto	l1824
  5745                           
  5746                           ;LED.c: 22: {
  5747                           ;LED.c: 23: ledSendByte(ledFullOn.Green);
  5748  0047  3004               	movlw	low ((_ledFullOn+1)| (0+32768))
  5749  0048  0084               	movwf	4
  5750  0049  3084               	movlw	high ((_ledFullOn+1)| (0+32768))
  5751  004A  0085               	movwf	5
  5752  004B  0800               	movf	0,w	;code access
  5753  004C                     i1L__ptext14:	
  5754                           
  5755                           ;psect for function _ledSendByte
  5756  004C                     i1L_ledSendByte:	
  5757                           
  5758                           ;incstack = 0
  5759                           ; Regs used in _ledSendByte: [wreg+status,2+status,0+pclath+cstack]
  5760                           ;ledSendByte@data stored from wreg
  5761  004C  00F1               	movwf	ledSendByte@data
  5762  004D                     i1Ll1668:	
  5763                           
  5764                           ;LED.c: 147: SPI_Exchange8bit(data);
  5765  004D  0871               	movf	ledSendByte@data,w
  5766  004E  210B  3180         	fcall	_SPI_Exchange8bit
  5767  0050                     i1Ll65:	
  5768                           
  5769                           ;LED.c: 24: ledSendByte(ledFullOn.Red);
  5770  0050  3003               	movlw	low (_ledFullOn| (0+32768))
  5771  0051  0084               	movwf	4
  5772  0052  3084               	movlw	high (_ledFullOn| (0+32768))
  5773  0053  0085               	movwf	5
  5774  0054  0800               	movf	0,w	;code access
  5775  0055                     i2L__ptext14:	
  5776                           
  5777                           ;psect for function _ledSendByte
  5778  0055                     i2L_ledSendByte:	
  5779                           
  5780                           ;incstack = 0
  5781                           ; Regs used in _ledSendByte: [wreg+status,2+status,0+pclath+cstack]
  5782                           ;ledSendByte@data stored from wreg
  5783  0055  00F1               	movwf	ledSendByte@data
  5784  0056                     i2Ll1668:	
  5785                           
  5786                           ;LED.c: 147: SPI_Exchange8bit(data);
  5787  0056  0871               	movf	ledSendByte@data,w
  5788  0057  210B  3180         	fcall	_SPI_Exchange8bit
  5789  0059                     i2Ll65:	
  5790                           
  5791                           ;LED.c: 25: ledSendByte(ledFullOn.Blue);
  5792  0059  3005               	movlw	low ((_ledFullOn+2)| (0+32768))
  5793  005A  0084               	movwf	4
  5794  005B  3084               	movlw	high ((_ledFullOn+2)| (0+32768))
  5795  005C  0085               	movwf	5
  5796  005D  0800               	movf	0,w	;code access
  5797  005E                     i3L__ptext14:	
  5798                           
  5799                           ;psect for function _ledSendByte
  5800  005E                     i3L_ledSendByte:	
  5801                           
  5802                           ;incstack = 0
  5803                           ; Regs used in _ledSendByte: [wreg+status,2+status,0+pclath+cstack]
  5804                           ;ledSendByte@data stored from wreg
  5805  005E  00F1               	movwf	ledSendByte@data
  5806  005F                     i3Ll1668:	
  5807                           
  5808                           ;LED.c: 147: SPI_Exchange8bit(data);
  5809  005F  0871               	movf	ledSendByte@data,w
  5810  0060  210B  3180         	fcall	_SPI_Exchange8bit
  5811  0062                     i3Ll65:	
  5812  0062                     iL32:	
  5813                           ;LED.c: 26: }
  5814                           
  5815  0062  3006               	movlw	6
  5816  0063  0AF6               	incf	LED_Test@j,f
  5817  0064  0276               	subwf	LED_Test@j,w
  5818  0065  1C03               	skipc
  5819  0066  2843               	goto	l1820
  5820                           
  5821                           ;LED.c: 32: }
  5822                           ;LED.c: 33: }
  5823                           ;LED.c: 34: _delay((unsigned long)((50)*(32000000/4000.0)));
  5824  0067  3003               	movlw	3
  5825  0068  00F4               	movwf	??_LED_Test+2
  5826  0069  3008               	movlw	8
  5827  006A  00F3               	movwf	??_LED_Test+1
  5828  006B  3078               	movlw	120
  5829  006C  00F2               	movwf	??_LED_Test
  5830  006D                     u1297:	
  5831  006D  0BF2               	decfsz	??_LED_Test,f
  5832  006E  286D               	goto	u1297
  5833  006F  0BF3               	decfsz	??_LED_Test+1,f
  5834  0070  286D               	goto	u1297
  5835  0071  0BF4               	decfsz	??_LED_Test+2,f
  5836  0072  286D               	goto	u1297
  5837  0073  3006               	movlw	6
  5838  0074  0AF5               	incf	LED_Test@i,f
  5839  0075  0275               	subwf	LED_Test@i,w
  5840  0076  1803               	btfsc	3,0
  5841  0077  0008               	return
  5842  0078  2842               	goto	l1814
  5843  0079                     l1824:	
  5844                           
  5845                           ;LED.c: 27: else
  5846                           ;LED.c: 28: {
  5847                           ;LED.c: 29: ledSendByte(ledFullOff.Green);
  5848  0079  3001               	movlw	low ((_ledFullOff+1)| (0+32768))
  5849  007A  0084               	movwf	4
  5850  007B  3084               	movlw	high ((_ledFullOff+1)| (0+32768))
  5851  007C  0085               	movwf	5
  5852  007D  0800               	movf	0,w	;code access
  5853  007E                     i4L__ptext14:	
  5854                           
  5855                           ;psect for function _ledSendByte
  5856  007E                     i4L_ledSendByte:	
  5857                           
  5858                           ;incstack = 0
  5859                           ; Regs used in _ledSendByte: [wreg+status,2+status,0+pclath+cstack]
  5860                           ;ledSendByte@data stored from wreg
  5861  007E  00F1               	movwf	ledSendByte@data
  5862  007F                     i4Ll1668:	
  5863                           
  5864                           ;LED.c: 147: SPI_Exchange8bit(data);
  5865  007F  0871               	movf	ledSendByte@data,w
  5866  0080  210B  3180         	fcall	_SPI_Exchange8bit
  5867  0082                     i4Ll65:	
  5868                           
  5869                           ;LED.c: 30: ledSendByte(ledFullOff.Red);
  5870  0082  3000               	movlw	low (_ledFullOff| (0+32768))
  5871  0083  0084               	movwf	4
  5872  0084  3084               	movlw	high (_ledFullOff| (0+32768))
  5873  0085  0085               	movwf	5
  5874  0086  0800               	movf	0,w	;code access
  5875  0087                     i5L__ptext14:	
  5876                           
  5877                           ;psect for function _ledSendByte
  5878  0087                     i5L_ledSendByte:	
  5879                           
  5880                           ;incstack = 0
  5881                           ; Regs used in _ledSendByte: [wreg+status,2+status,0+pclath+cstack]
  5882                           ;ledSendByte@data stored from wreg
  5883  0087  00F1               	movwf	ledSendByte@data
  5884  0088                     i5Ll1668:	
  5885                           
  5886                           ;LED.c: 147: SPI_Exchange8bit(data);
  5887  0088  0871               	movf	ledSendByte@data,w
  5888  0089  210B  3180         	fcall	_SPI_Exchange8bit
  5889  008B                     i5Ll65:	
  5890                           
  5891                           ;LED.c: 31: ledSendByte(ledFullOff.Blue);
  5892  008B  3002               	movlw	low ((_ledFullOff+2)| (0+32768))
  5893  008C  0084               	movwf	4
  5894  008D  3084               	movlw	high ((_ledFullOff+2)| (0+32768))
  5895  008E  0085               	movwf	5
  5896  008F  0800               	movf	0,w	;code access
  5897  0090                     i6L__ptext14:	
  5898                           
  5899                           ;psect for function _ledSendByte
  5900  0090                     i6L_ledSendByte:	
  5901                           
  5902                           ;incstack = 0
  5903                           ; Regs used in _ledSendByte: [wreg+status,2+status,0+pclath+cstack]
  5904                           ;ledSendByte@data stored from wreg
  5905  0090  00F1               	movwf	ledSendByte@data
  5906  0091                     i6Ll1668:	
  5907                           
  5908                           ;LED.c: 147: SPI_Exchange8bit(data);
  5909  0091  0871               	movf	ledSendByte@data,w
  5910  0092  210B  3180         	fcall	_SPI_Exchange8bit
  5911  0094                     i6Ll65:	
  5912  0094  2862               	ljmp	iL32
  5913  0095                     __end_of_LED_Test:	
  5914  0095                     __ptext12:	
  5915 ;; *************** function _LED_Task *****************
  5916 ;; Defined at:
  5917 ;;		line 39 in file "../src/LED.c"
  5918 ;; Parameters:    Size  Location     Type
  5919 ;;		None
  5920 ;; Auto vars:     Size  Location     Type
  5921 ;;  i               2    7[COMMON] unsigned int 
  5922 ;;  i               2    5[COMMON] unsigned int 
  5923 ;; Return value:  Size  Location     Type
  5924 ;;		None               void
  5925 ;; Registers used:
  5926 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5927 ;; Tracked objects:
  5928 ;;		On entry : 0/5
  5929 ;;		On exit  : 1F/0
  5930 ;;		Unchanged: 0/0
  5931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5933 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5935 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5936 ;;Total ram usage:        4 bytes
  5937 ;; Hardware stack levels used:    1
  5938 ;; Hardware stack levels required when called:    5
  5939 ;; This function calls:
  5940 ;;		_ledSetColor
  5941 ;; This function is called by:
  5942 ;;		_main
  5943 ;; This function uses a non-reentrant model
  5944 ;;
  5945                           
  5946                           
  5947                           ;psect for function _LED_Task
  5948  0095                     _LED_Task:	
  5949                           
  5950                           ;LED.c: 41: static uint8_t ledOFF = 0;
  5951                           ;LED.c: 42: switch(LED_mode)
  5952                           
  5953                           ;incstack = 0
  5954                           ; Regs used in _LED_Task: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5955  0095  28FF               	goto	l1884
  5956  0096                     l1838:	
  5957                           
  5958                           ;LED.c: 45: if(ledOFF ==0)
  5959  0096  0840               	movf	LED_Task@ledOFF,w
  5960  0097  1D03               	btfss	3,2
  5961  0098  0008               	return
  5962                           
  5963                           ;LED.c: 46: {
  5964                           ;LED.c: 47: GIE = 0;
  5965  0099  138B               	bcf	11,7	;volatile
  5966                           
  5967                           ;LED.c: 48: for(uint16_t i=0;i<6;i++)
  5968  009A  01F5               	clrf	LED_Task@i
  5969  009B  01F6               	clrf	LED_Task@i+1
  5970  009C                     l1848:	
  5971                           
  5972                           ;LED.c: 49: {
  5973                           ;LED.c: 50: ledSetColor(ledFullOff);
  5974  009C  3000               	movlw	low (_ledFullOff| (0+32768))
  5975  009D  0084               	movwf	4
  5976  009E  3084               	movlw	high (_ledFullOff| (0+32768))
  5977  009F  0085               	movwf	5
  5978  00A0  3F00               	moviw [0]fsr0
  5979  00A1  00F2               	movwf	ledSetColor@ledColor
  5980  00A2  3F01               	moviw [1]fsr0
  5981  00A3  00F3               	movwf	ledSetColor@ledColor+1
  5982  00A4  3F02               	moviw [2]fsr0
  5983  00A5  00F4               	movwf	ledSetColor@ledColor+2
  5984  00A6                     i7L__ptext13:	
  5985                           
  5986                           ;psect for function _ledSetColor
  5987  00A6                     i7L_ledSetColor:	
  5988  00A6                     i7Ll1698:	
  5989                           
  5990                           ;LED.c: 90: ledSendByte(ledColor.Green);
  5991  00A6  0873               	movf	ledSetColor@ledColor+1,w
  5992  00A7                     i9L__ptext14:	
  5993                           
  5994                           ;psect for function _ledSendByte
  5995  00A7                     i9L_ledSendByte:	
  5996                           
  5997                           ;incstack = 0
  5998                           ; Regs used in _ledSendByte: [wreg+status,2+status,0+pclath+cstack]
  5999                           ;ledSendByte@data stored from wreg
  6000  00A7  00F1               	movwf	ledSendByte@data
  6001  00A8                     i9Ll1668:	
  6002                           
  6003                           ;LED.c: 147: SPI_Exchange8bit(data);
  6004  00A8  0871               	movf	ledSendByte@data,w
  6005  00A9  210B  3180         	fcall	_SPI_Exchange8bit
  6006  00AB                     i9Ll65:	
  6007                           
  6008                           ;LED.c: 91: ledSendByte(ledColor.Red);
  6009  00AB  0872               	movf	ledSetColor@ledColor,w
  6010  00AC                     i10L__ptext14:	
  6011                           
  6012                           ;psect for function _ledSendByte
  6013  00AC                     i10L_ledSendByte:	
  6014                           
  6015                           ;incstack = 0
  6016                           ; Regs used in _ledSendByte: [wreg+status,2+status,0+pclath+cstack]
  6017                           ;ledSendByte@data stored from wreg
  6018  00AC  00F1               	movwf	ledSendByte@data
  6019  00AD                     i10Ll1668:	
  6020                           
  6021                           ;LED.c: 147: SPI_Exchange8bit(data);
  6022  00AD  0871               	movf	ledSendByte@data,w
  6023  00AE  210B  3180         	fcall	_SPI_Exchange8bit
  6024  00B0                     i10Ll65:	
  6025                           
  6026                           ;LED.c: 92: ledSendByte(ledColor.Blue);
  6027  00B0  0874               	movf	ledSetColor@ledColor+2,w
  6028  00B1                     i11L__ptext14:	
  6029                           
  6030                           ;psect for function _ledSendByte
  6031  00B1                     i11L_ledSendByte:	
  6032                           
  6033                           ;incstack = 0
  6034                           ; Regs used in _ledSendByte: [wreg+status,2+status,0+pclath+cstack]
  6035                           ;ledSendByte@data stored from wreg
  6036  00B1  00F1               	movwf	ledSendByte@data
  6037  00B2                     i11Ll1668:	
  6038                           
  6039                           ;LED.c: 147: SPI_Exchange8bit(data);
  6040  00B2  0871               	movf	ledSendByte@data,w
  6041  00B3  210B  3180         	fcall	_SPI_Exchange8bit
  6042  00B5                     i11Ll65:	
  6043  00B5  28B6               	ljmp	iL38
  6044  00B6                     i7Ll55:	
  6045  00B6                     iL38:	
  6046  00B6  0AF5               	incf	LED_Task@i,f
  6047  00B7  1903               	skipnz
  6048  00B8  0AF6               	incf	LED_Task@i+1,f
  6049  00B9  3000               	movlw	0
  6050  00BA  0276               	subwf	LED_Task@i+1,w
  6051  00BB  3006               	movlw	6
  6052  00BC  1903               	skipnz
  6053  00BD  0275               	subwf	LED_Task@i,w
  6054  00BE  1C03               	skipc
  6055  00BF  289C               	goto	l1848
  6056                           
  6057                           ;LED.c: 51: }
  6058                           ;LED.c: 52: GIE = 1;
  6059  00C0  178B               	bsf	11,7	;volatile
  6060                           
  6061                           ;LED.c: 53: ledOFF = 1;
  6062  00C1  0020               	movlb	0	; select bank0
  6063  00C2  01C0               	clrf	LED_Task@ledOFF
  6064  00C3  0AC0               	incf	LED_Task@ledOFF,f
  6065  00C4  0008               	return
  6066  00C5                     l1854:	
  6067                           
  6068                           ;LED.c: 57: if(LED_currentColor.Blue!=LED_SetColor.Blue
  6069                           ;LED.c: 58: || LED_currentColor.Red!=LED_SetColor.Red
  6070                           ;LED.c: 59: || LED_currentColor.Green!=LED_SetColor.Green)
  6071  00C5  083D               	movf	_LED_currentColor+2,w
  6072  00C6  063A               	xorwf	_LED_SetColor+2,w
  6073  00C7  1D03               	skipz
  6074  00C8  28D1               	goto	l45
  6075  00C9  083B               	movf	_LED_currentColor,w
  6076  00CA  0638               	xorwf	_LED_SetColor,w
  6077  00CB  1D03               	skipz
  6078  00CC  28D1               	goto	l45
  6079  00CD  083C               	movf	_LED_currentColor+1,w
  6080  00CE  0639               	xorwf	_LED_SetColor+1,w
  6081  00CF  1903               	skipnz
  6082  00D0  0008               	return
  6083  00D1                     l45:	
  6084                           
  6085                           ;LED.c: 60: {
  6086                           ;LED.c: 61: GIE = 0;
  6087  00D1  138B               	bcf	11,7	;volatile
  6088                           
  6089                           ;LED.c: 62: for(uint16_t i=0;i<6;i++)
  6090  00D2  01F7               	clrf	LED_Task@i_80
  6091  00D3  01F8               	clrf	LED_Task@i_80+1
  6092  00D4                     l1866:	
  6093                           
  6094                           ;LED.c: 63: {
  6095                           ;LED.c: 64: ledSetColor(LED_SetColor);
  6096  00D4  0020               	movlb	0	; select bank0
  6097  00D5  0838               	movf	_LED_SetColor,w
  6098  00D6  00F2               	movwf	ledSetColor@ledColor
  6099  00D7  0839               	movf	_LED_SetColor+1,w
  6100  00D8  00F3               	movwf	ledSetColor@ledColor+1
  6101  00D9  083A               	movf	_LED_SetColor+2,w
  6102  00DA  00F4               	movwf	ledSetColor@ledColor+2
  6103  00DB                     i8L__ptext13:	
  6104                           
  6105                           ;psect for function _ledSetColor
  6106  00DB                     i8L_ledSetColor:	
  6107  00DB                     i8Ll1698:	
  6108                           
  6109                           ;LED.c: 90: ledSendByte(ledColor.Green);
  6110  00DB  0873               	movf	ledSetColor@ledColor+1,w
  6111  00DC                     i12L__ptext14:	
  6112                           
  6113                           ;psect for function _ledSendByte
  6114  00DC                     i12L_ledSendByte:	
  6115                           
  6116                           ;incstack = 0
  6117                           ; Regs used in _ledSendByte: [wreg+status,2+status,0+pclath+cstack]
  6118                           ;ledSendByte@data stored from wreg
  6119  00DC  00F1               	movwf	ledSendByte@data
  6120  00DD                     i12Ll1668:	
  6121                           
  6122                           ;LED.c: 147: SPI_Exchange8bit(data);
  6123  00DD  0871               	movf	ledSendByte@data,w
  6124  00DE  210B  3180         	fcall	_SPI_Exchange8bit
  6125  00E0                     i12Ll65:	
  6126                           
  6127                           ;LED.c: 91: ledSendByte(ledColor.Red);
  6128  00E0  0872               	movf	ledSetColor@ledColor,w
  6129  00E1                     i13L__ptext14:	
  6130                           
  6131                           ;psect for function _ledSendByte
  6132  00E1                     i13L_ledSendByte:	
  6133                           
  6134                           ;incstack = 0
  6135                           ; Regs used in _ledSendByte: [wreg+status,2+status,0+pclath+cstack]
  6136                           ;ledSendByte@data stored from wreg
  6137  00E1  00F1               	movwf	ledSendByte@data
  6138  00E2                     i13Ll1668:	
  6139                           
  6140                           ;LED.c: 147: SPI_Exchange8bit(data);
  6141  00E2  0871               	movf	ledSendByte@data,w
  6142  00E3  210B  3180         	fcall	_SPI_Exchange8bit
  6143  00E5                     i13Ll65:	
  6144                           
  6145                           ;LED.c: 92: ledSendByte(ledColor.Blue);
  6146  00E5  0874               	movf	ledSetColor@ledColor+2,w
  6147  00E6                     i14L__ptext14:	
  6148                           
  6149                           ;psect for function _ledSendByte
  6150  00E6                     i14L_ledSendByte:	
  6151                           
  6152                           ;incstack = 0
  6153                           ; Regs used in _ledSendByte: [wreg+status,2+status,0+pclath+cstack]
  6154                           ;ledSendByte@data stored from wreg
  6155  00E6  00F1               	movwf	ledSendByte@data
  6156  00E7                     i14Ll1668:	
  6157                           
  6158                           ;LED.c: 147: SPI_Exchange8bit(data);
  6159  00E7  0871               	movf	ledSendByte@data,w
  6160  00E8  210B  3180         	fcall	_SPI_Exchange8bit
  6161  00EA                     i14Ll65:	
  6162  00EA  28EB               	ljmp	iL44
  6163  00EB                     i8Ll55:	
  6164  00EB                     iL44:	
  6165  00EB  0AF7               	incf	LED_Task@i_80,f
  6166  00EC  1903               	skipnz
  6167  00ED  0AF8               	incf	LED_Task@i_80+1,f
  6168  00EE  3000               	movlw	0
  6169  00EF  0278               	subwf	LED_Task@i_80+1,w
  6170  00F0  3006               	movlw	6
  6171  00F1  1903               	skipnz
  6172  00F2  0277               	subwf	LED_Task@i_80,w
  6173  00F3  1C03               	skipc
  6174  00F4  28D4               	goto	l1866
  6175                           
  6176                           ;LED.c: 65: }
  6177                           ;LED.c: 66: GIE = 1;
  6178  00F5  178B               	bsf	11,7	;volatile
  6179                           
  6180                           ;LED.c: 67: LED_currentColor = LED_SetColor;
  6181  00F6  0020               	movlb	0	; select bank0
  6182  00F7  0838               	movf	_LED_SetColor,w
  6183  00F8  00BB               	movwf	_LED_currentColor
  6184  00F9  0839               	movf	_LED_SetColor+1,w
  6185  00FA  00BC               	movwf	_LED_currentColor+1
  6186  00FB  083A               	movf	_LED_SetColor+2,w
  6187  00FC  00BD               	movwf	_LED_currentColor+2
  6188  00FD                     l1874:	
  6189                           
  6190                           ;LED.c: 68: ledOFF = 0;
  6191  00FD  01C0               	clrf	LED_Task@ledOFF
  6192  00FE  0008               	return
  6193  00FF                     l1884:	
  6194  00FF  0020               	movlb	0	; select bank0
  6195  0100  0841               	movf	_LED_mode,w
  6196                           
  6197                           ; Switch size 1, requested type "speed"
  6198                           ; Number of cases is 5, Range of values is 0 to 4
  6199                           ; switch strategies available:
  6200                           ; Name         Instructions Cycles
  6201                           ; direct_byte           16     6 (fixed)
  6202                           ; simple_byte           16     9 (average)
  6203                           ; jumptable            260     6 (fixed)
  6204                           ;	Chosen strategy is direct_byte
  6205  0101  0084               	movwf	4
  6206  0102  3005               	movlw	5
  6207  0103  0204               	subwf	4,w
  6208  0104  1803               	skipnc
  6209  0105  0008               	return
  6210  0106  3183               	movlp	high S2178
  6211  0107  3504               	lslf	4,w
  6212  0108  3EDD               	addlw	low S2178
  6213  0109  0082               	movwf	2
  6214  010A  0008               	return
  6215  010B                     __end_of_LED_Task:	
  6216  010B                     __ptext15:	
  6217 ;; *************** function _SPI_Exchange8bit *****************
  6218 ;; Defined at:
  6219 ;;		line 77 in file "mcc_generated_files/spi.c"
  6220 ;; Parameters:    Size  Location     Type
  6221 ;;  data            1    wreg     unsigned char 
  6222 ;; Auto vars:     Size  Location     Type
  6223 ;;  data            1    0[COMMON] unsigned char 
  6224 ;; Return value:  Size  Location     Type
  6225 ;;                  1    wreg      unsigned char 
  6226 ;; Registers used:
  6227 ;;		wreg
  6228 ;; Tracked objects:
  6229 ;;		On entry : 0/5
  6230 ;;		On exit  : 1F/4
  6231 ;;		Unchanged: 0/0
  6232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6234 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6236 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6237 ;;Total ram usage:        1 bytes
  6238 ;; Hardware stack levels used:    1
  6239 ;; Hardware stack levels required when called:    2
  6240 ;; This function calls:
  6241 ;;		Nothing
  6242 ;; This function is called by:
  6243 ;;		_ledSendByte
  6244 ;; This function uses a non-reentrant model
  6245 ;;
  6246                           
  6247                           
  6248                           ;psect for function _SPI_Exchange8bit
  6249  010B                     _SPI_Exchange8bit:	
  6250                           
  6251                           ;incstack = 0
  6252                           ; Regs used in _SPI_Exchange8bit: [wreg]
  6253                           ;SPI_Exchange8bit@data stored from wreg
  6254  010B  00F0               	movwf	SPI_Exchange8bit@data
  6255                           
  6256                           ;spi.c: 79: SSP1CON1bits.WCOL = 0;
  6257  010C  0024               	movlb	4	; select bank4
  6258  010D  1395               	bcf	21,7	;volatile
  6259                           
  6260                           ;spi.c: 81: SSPBUF = data;
  6261  010E  0870               	movf	SPI_Exchange8bit@data,w
  6262  010F  0091               	movwf	17	;volatile
  6263  0110                     l486:	
  6264                           ;spi.c: 83: while (SSP1STATbits.BF == 0x0) {
  6265                           
  6266  0110  1C14               	btfss	20,0	;volatile
  6267  0111  2910               	goto	l486
  6268                           
  6269                           ;spi.c: 84: }
  6270                           ;spi.c: 86: return (SSPBUF);
  6271  0112  0811               	movf	17,w	;volatile
  6272  0113  0008               	return
  6273  0114                     __end_of_SPI_Exchange8bit:	
  6274  0114                     __ptext16:	
  6275 ;; *************** function _COMM_Task *****************
  6276 ;; Defined at:
  6277 ;;		line 52 in file "../src/serialCommand.c"
  6278 ;; Parameters:    Size  Location     Type
  6279 ;;		None
  6280 ;; Auto vars:     Size  Location     Type
  6281 ;;  receiveData     1   13[COMMON] unsigned char 
  6282 ;;  b               1   12[COMMON] unsigned char 
  6283 ;;  g               1   11[COMMON] unsigned char 
  6284 ;;  r               1   10[COMMON] unsigned char 
  6285 ;; Return value:  Size  Location     Type
  6286 ;;		None               void
  6287 ;; Registers used:
  6288 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6289 ;; Tracked objects:
  6290 ;;		On entry : 0/5
  6291 ;;		On exit  : 0/0
  6292 ;;		Unchanged: 0/0
  6293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6295 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6297 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6298 ;;Total ram usage:        4 bytes
  6299 ;; Hardware stack levels used:    1
  6300 ;; Hardware stack levels required when called:    4
  6301 ;; This function calls:
  6302 ;;		_EUSART_Read
  6303 ;;		_UART_HexSrtingToBinary
  6304 ;;		_memset
  6305 ;;		_outputString
  6306 ;;		_strcmp
  6307 ;; This function is called by:
  6308 ;;		_main
  6309 ;; This function uses a non-reentrant model
  6310 ;;
  6311                           
  6312                           
  6313                           ;psect for function _COMM_Task
  6314  0114                     _COMM_Task:	
  6315                           
  6316                           ;serialCommand.c: 54: uint8_t receiveData,r,g,b;
  6317                           ;serialCommand.c: 55: static COMM_RECEIVE_STATE UART_ReceiveState = COMM_IDEL;
  6318                           ;serialCommand.c: 56: static uint8_t receiveCounter;
  6319                           ;serialCommand.c: 58: if((eusartRxCount))
  6320                           
  6321                           ;incstack = 0
  6322                           ; Regs used in _COMM_Task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6323  0114  0020               	movlb	0	; select bank0
  6324  0115  0842               	movf	_eusartRxCount,w	;volatile
  6325  0116  1903               	btfsc	3,2
  6326  0117  0008               	return
  6327                           
  6328                           ;serialCommand.c: 59: {
  6329                           ;serialCommand.c: 60: receiveData = EUSART_Read();
  6330  0118  22A7  3180         	fcall	_EUSART_Read
  6331  011A  00FD               	movwf	COMM_Task@receiveData
  6332                           
  6333                           ;serialCommand.c: 64: switch(UART_ReceiveState)
  6334  011B  0020               	movlb	0	; select bank0
  6335  011C  083E               	movf	COMM_Task@UART_ReceiveState,w
  6336                           
  6337                           ; Switch size 1, requested type "speed"
  6338                           ; Number of cases is 5, Range of values is 0 to 4
  6339                           ; switch strategies available:
  6340                           ; Name         Instructions Cycles
  6341                           ; direct_byte           16     6 (fixed)
  6342                           ; simple_byte           16     9 (average)
  6343                           ; jumptable            260     6 (fixed)
  6344                           ;	Chosen strategy is direct_byte
  6345  011D  0084               	movwf	4
  6346  011E  3005               	movlw	5
  6347  011F  0204               	subwf	4,w
  6348  0120  1803               	skipnc
  6349  0121  29D9               	goto	l1950
  6350  0122  3183               	movlp	high S2182
  6351  0123  3504               	lslf	4,w
  6352  0124  3EF1               	addlw	low S2182
  6353  0125  0082               	movwf	2
  6354  0126  0008               	return
  6355  0127                     l1896:	
  6356  0127  3010               	movlw	16
  6357                           
  6358                           ;serialCommand.c: 67: memset(inputCommand,0,16);
  6359  0128  01F0               	clrf	memset@c
  6360  0129  01F1               	clrf	memset@c+1
  6361  012A  00F2               	movwf	memset@n
  6362  012B  3048               	movlw	(low (_inputCommand| 0))& (0+255)
  6363  012C  01F3               	clrf	memset@n+1
  6364  012D  22BD  3180         	fcall	_memset
  6365                           
  6366                           ;serialCommand.c: 69: if(receiveData == 'S')
  6367  012F  3053               	movlw	83
  6368  0130  067D               	xorwf	COMM_Task@receiveData,w
  6369  0131  1D03               	btfss	3,2
  6370  0132  2943               	goto	l1906
  6371                           
  6372                           ;serialCommand.c: 70: {
  6373                           ;serialCommand.c: 71: UART_ReceiveState = COMM_PROCESS_SET_COMMAND;
  6374  0133  0020               	movlb	0	; select bank0
  6375  0134  3053               	movlw	83
  6376  0135  01BE               	clrf	COMM_Task@UART_ReceiveState
  6377  0136  0ABE               	incf	COMM_Task@UART_ReceiveState,f
  6378                           
  6379                           ;serialCommand.c: 72: inputCommand[0] = 'S';
  6380  0137  293C               	goto	L2
  6381  0138                     l1908:	
  6382                           
  6383                           ;serialCommand.c: 76: {
  6384                           ;serialCommand.c: 77: UART_ReceiveState = COMM_PROCESS_GET_COMMAND;
  6385  0138  3002               	movlw	2
  6386  0139  0020               	movlb	0	; select bank0
  6387  013A  00BE               	movwf	COMM_Task@UART_ReceiveState
  6388                           
  6389                           ;serialCommand.c: 78: inputCommand[0] = 'G';
  6390  013B  3047               	movlw	71
  6391  013C                     L2:	
  6392  013C  00C8               	movwf	_inputCommand
  6393  013D  2941               	goto	l1904
  6394  013E                     l1914:	
  6395                           
  6396                           ;serialCommand.c: 82: {
  6397                           ;serialCommand.c: 83: UART_ReceiveState = COMM_PROCESS_COLOR;
  6398  013E  3003               	movlw	3
  6399  013F  0020               	movlb	0	; select bank0
  6400  0140  00BE               	movwf	COMM_Task@UART_ReceiveState
  6401  0141                     l1904:	
  6402                           
  6403                           ;serialCommand.c: 73: receiveCounter = 0;
  6404  0141  01BF               	clrf	COMM_Task@receiveCounter
  6405                           
  6406                           ;serialCommand.c: 74: }
  6407  0142  0008               	return
  6408  0143                     l1906:	
  6409                           
  6410                           ;serialCommand.c: 75: else if(receiveData == 'G')
  6411  0143  3047               	movlw	71
  6412  0144  067D               	xorwf	COMM_Task@receiveData,w
  6413  0145  1903               	btfsc	3,2
  6414  0146  2938               	goto	l1908
  6415                           
  6416                           ;serialCommand.c: 81: else if (receiveData == 'C')
  6417  0147  3043               	movlw	67
  6418  0148  067D               	xorwf	COMM_Task@receiveData,w
  6419  0149  1903               	btfsc	3,2
  6420  014A  293E               	goto	l1914
  6421                           
  6422                           ;serialCommand.c: 86: else if (receiveData == '\r'||receiveData =='\n')
  6423  014B  300D               	movlw	13
  6424  014C  067D               	xorwf	COMM_Task@receiveData,w
  6425  014D  1903               	btfsc	3,2
  6426  014E  0008               	return
  6427  014F  300A               	movlw	10
  6428  0150  067D               	xorwf	COMM_Task@receiveData,w
  6429  0151  1903               	btfsc	3,2
  6430  0152  0008               	return
  6431                           
  6432                           ;serialCommand.c: 90: else
  6433                           ;serialCommand.c: 91: {
  6434                           ;serialCommand.c: 92: UART_ReceiveState = COMM_PROCESS_TRASH;
  6435  0153  3004               	movlw	4
  6436  0154  0020               	movlb	0	; select bank0
  6437  0155  00BE               	movwf	COMM_Task@UART_ReceiveState
  6438  0156  0008               	return
  6439  0157                     l1924:	
  6440                           
  6441                           ;serialCommand.c: 96: inputCommand[++receiveCounter] = receiveData;
  6442  0157  0ABF               	incf	COMM_Task@receiveCounter,f
  6443  0158  083F               	movf	COMM_Task@receiveCounter,w
  6444  0159  3E48               	addlw	(low (_inputCommand| 0))& (0+255)
  6445  015A  0086               	movwf	6
  6446  015B  0187               	clrf	7
  6447  015C  087D               	movf	COMM_Task@receiveData,w
  6448  015D  0081               	movwf	1
  6449                           
  6450                           ;serialCommand.c: 97: if(receiveData == '\n')
  6451  015E  300A               	movlw	10
  6452  015F  067D               	xorwf	COMM_Task@receiveData,w
  6453  0160  1D03               	btfss	3,2
  6454  0161  0008               	return
  6455                           
  6456                           ;serialCommand.c: 98: {
  6457                           ;serialCommand.c: 99: if(strcmp(CMD_GET_STATE,inputCommand)==0)
  6458  0162  3035               	movlw	low (_CMD_GET_STATE| (0+32768))
  6459  0163  00F0               	movwf	strcmp@s1
  6460  0164  3084               	movlw	high (_CMD_GET_STATE| (0+32768))
  6461  0165  00F1               	movwf	strcmp@s1+1
  6462  0166  3048               	movlw	(low (_inputCommand| 0))& (0+255)
  6463  0167  00F2               	movwf	strcmp@s2
  6464  0168  2231  3180         	fcall	_strcmp
  6465  016A  0870               	movf	?_strcmp,w
  6466  016B  0471               	iorwf	?_strcmp+1,w
  6467  016C  1903               	btfsc	3,2
  6468  016D  2987               	goto	l1946
  6469  016E  2A23               	goto	l2016
  6470  016F                     l1932:	
  6471                           
  6472                           ;serialCommand.c: 104: outputString("LED is OFF\r\n");
  6473  016F  3080               	movlw	low (STR_1| (0+32768))
  6474  0170  00F5               	movwf	outputString@string
  6475  0171  3084               	movlw	high (STR_1| (0+32768))
  6476  0172  29D7               	goto	L3
  6477  0173                     l1934:	
  6478                           ;serialCommand.c: 105: break;
  6479                           
  6480                           
  6481                           ;serialCommand.c: 107: outputString("Direct color\r\n");
  6482  0173  3071               	movlw	low (STR_2| (0+32768))
  6483  0174  00F5               	movwf	outputString@string
  6484  0175  3084               	movlw	high (STR_2| (0+32768))
  6485  0176  29D7               	goto	L3
  6486  0177                     l1936:	
  6487                           ;serialCommand.c: 108: break;
  6488                           
  6489                           
  6490                           ;serialCommand.c: 110: outputString("Starry\r\n");
  6491  0177  308D               	movlw	low (STR_3| (0+32768))
  6492  0178  00F5               	movwf	outputString@string
  6493  0179  3084               	movlw	high (STR_3| (0+32768))
  6494  017A  29D7               	goto	L3
  6495  017B                     l1938:	
  6496                           ;serialCommand.c: 111: break;
  6497                           
  6498                           
  6499                           ;serialCommand.c: 113: outputString("Xmas\r\n");
  6500  017B  30AE               	movlw	low (STR_4| (0+32768))
  6501  017C  00F5               	movwf	outputString@string
  6502  017D  3084               	movlw	high (STR_4| (0+32768))
  6503  017E  29D7               	goto	L3
  6504  017F                     l1940:	
  6505                           ;serialCommand.c: 114: break;
  6506                           
  6507                           
  6508                           ;serialCommand.c: 116: outputString("Party\r\n");
  6509  017F  30A6               	movlw	low (STR_5| (0+32768))
  6510  0180  00F5               	movwf	outputString@string
  6511  0181  3084               	movlw	high (STR_5| (0+32768))
  6512  0182  29D7               	goto	L3
  6513  0183                     l1942:	
  6514                           ;serialCommand.c: 117: break;
  6515                           
  6516                           
  6517                           ;serialCommand.c: 119: outputString("ERROR\r\n");
  6518  0183  309E               	movlw	low (STR_6| (0+32768))
  6519  0184  00F5               	movwf	outputString@string
  6520  0185  3084               	movlw	high (STR_6| (0+32768))
  6521  0186  29D7               	goto	L3
  6522  0187                     l1946:	
  6523                           ;serialCommand.c: 120: break;
  6524                           
  6525  0187  0020               	movlb	0	; select bank0
  6526  0188  0841               	movf	_LED_mode,w
  6527                           
  6528                           ; Switch size 1, requested type "speed"
  6529                           ; Number of cases is 5, Range of values is 0 to 4
  6530                           ; switch strategies available:
  6531                           ; Name         Instructions Cycles
  6532                           ; direct_byte           16     6 (fixed)
  6533                           ; simple_byte           16     9 (average)
  6534                           ; jumptable            260     6 (fixed)
  6535                           ;	Chosen strategy is direct_byte
  6536  0189  0084               	movwf	4
  6537  018A  3005               	movlw	5
  6538  018B  0204               	subwf	4,w
  6539  018C  1803               	skipnc
  6540  018D  2983               	goto	l1942
  6541  018E  3183               	movlp	high S2180
  6542  018F  3504               	lslf	4,w
  6543  0190  3EE7               	addlw	low S2180
  6544  0191  0082               	movwf	2
  6545  0192  2A23               	goto	l2016
  6546  0193                     l1958:	
  6547                           ;serialCommand.c: 123: else
  6548                           ;serialCommand.c: 124: {
  6549                           ;serialCommand.c: 125: outputString("Invalid Command \r\n");
  6550                           
  6551                           
  6552                           ;serialCommand.c: 135: {
  6553                           ;serialCommand.c: 136: LED_mode = LED_OFF;
  6554  0193  0020               	movlb	0	; select bank0
  6555  0194  01C1               	clrf	_LED_mode
  6556  0195  29D4               	goto	L8
  6557  0196                     l1964:	
  6558                           ;serialCommand.c: 138: }
  6559                           
  6560                           ;serialCommand.c: 137: outputString("DONE!\r\n");
  6561                           
  6562                           
  6563                           ;serialCommand.c: 140: {
  6564                           ;serialCommand.c: 141: LED_mode = LED_DIRECT;
  6565  0196  0020               	movlb	0	; select bank0
  6566  0197  3040               	movlw	64
  6567  0198  01C1               	clrf	_LED_mode
  6568  0199  0AC1               	incf	_LED_mode,f
  6569                           
  6570                           ;serialCommand.c: 142: LED_SetColor.Green = 64;
  6571  019A  00B9               	movwf	_LED_SetColor+1
  6572                           
  6573                           ;serialCommand.c: 143: LED_SetColor.Red = 64;
  6574  019B  00B8               	movwf	_LED_SetColor
  6575  019C  29D3               	goto	L9
  6576  019D                     l1972:	
  6577                           ;serialCommand.c: 146: }
  6578                           
  6579                           ;serialCommand.c: 145: outputString("DONE!\r\n");
  6580                           
  6581                           ;serialCommand.c: 144: LED_SetColor.Blue = 64;
  6582                           
  6583                           
  6584                           ;serialCommand.c: 148: {
  6585                           ;serialCommand.c: 149: LED_mode = LED_STARRY;
  6586  019D  3002               	movlw	2
  6587  019E  29A2               	goto	L11
  6588  019F                     l1978:	
  6589                           ;serialCommand.c: 151: }
  6590                           
  6591                           ;serialCommand.c: 150: outputString("DONE!\r\n");
  6592                           
  6593                           
  6594                           ;serialCommand.c: 153: {
  6595                           ;serialCommand.c: 154: LED_mode = LED_XMAS;
  6596  019F  3003               	movlw	3
  6597  01A0  29A2               	goto	L11
  6598  01A1                     l1984:	
  6599                           ;serialCommand.c: 156: }
  6600                           
  6601                           ;serialCommand.c: 155: outputString("DONE!\r\n");
  6602                           
  6603                           
  6604                           ;serialCommand.c: 158: {
  6605                           ;serialCommand.c: 159: LED_mode = LED_PARTY;
  6606  01A1  3004               	movlw	4
  6607  01A2                     L11:	
  6608  01A2  0020               	movlb	0	; select bank0
  6609  01A3  00C1               	movwf	_LED_mode
  6610  01A4  29D4               	goto	L8
  6611  01A5                     l1992:	
  6612                           ;serialCommand.c: 162: else
  6613                           ;serialCommand.c: 163: {
  6614                           ;serialCommand.c: 164: outputString("Invalid Command \r\n");
  6615                           
  6616                           ;serialCommand.c: 160: outputString("DONE!\r\n");
  6617                           
  6618                           
  6619                           ;serialCommand.c: 171: inputCommand[receiveCounter++] = receiveData;
  6620  01A5  083F               	movf	COMM_Task@receiveCounter,w
  6621  01A6  3E48               	addlw	(low (_inputCommand| 0))& (0+255)
  6622  01A7  0086               	movwf	6
  6623  01A8  0187               	clrf	7
  6624  01A9  087D               	movf	COMM_Task@receiveData,w
  6625  01AA  0081               	movwf	1
  6626  01AB  3002               	movlw	2
  6627  01AC  0ABF               	incf	COMM_Task@receiveCounter,f
  6628                           
  6629                           ;serialCommand.c: 172: if(receiveCounter == 2)
  6630  01AD  063F               	xorwf	COMM_Task@receiveCounter,w
  6631  01AE  1D03               	btfss	3,2
  6632  01AF  29B5               	goto	l2000
  6633                           
  6634                           ;serialCommand.c: 173: {
  6635                           ;serialCommand.c: 174: r = UART_HexSrtingToBinary(inputCommand);
  6636  01B0  3048               	movlw	(low (_inputCommand| 0))& (0+255)
  6637  01B1  226D  3180         	fcall	_UART_HexSrtingToBinary
  6638  01B3  00FA               	movwf	COMM_Task@r
  6639                           
  6640                           ;serialCommand.c: 175: }
  6641  01B4  29C6               	goto	l2008
  6642  01B5                     l2000:	
  6643                           
  6644                           ;serialCommand.c: 176: else if(receiveCounter == 4)
  6645  01B5  3004               	movlw	4
  6646  01B6  063F               	xorwf	COMM_Task@receiveCounter,w
  6647  01B7  1D03               	btfss	3,2
  6648  01B8  29BE               	goto	l2004
  6649                           
  6650                           ;serialCommand.c: 177: {
  6651                           ;serialCommand.c: 178: g = UART_HexSrtingToBinary(inputCommand+2);
  6652  01B9  304A               	movlw	(low ((_inputCommand| 0+2)))& (0+255)
  6653  01BA  226D  3180         	fcall	_UART_HexSrtingToBinary
  6654  01BC  00FB               	movwf	COMM_Task@g
  6655                           
  6656                           ;serialCommand.c: 179: }
  6657  01BD  29C6               	goto	l2008
  6658  01BE                     l2004:	
  6659                           
  6660                           ;serialCommand.c: 180: else if(receiveCounter == 6)
  6661  01BE  3006               	movlw	6
  6662  01BF  063F               	xorwf	COMM_Task@receiveCounter,w
  6663  01C0  1D03               	btfss	3,2
  6664  01C1  29C6               	goto	l2008
  6665                           
  6666                           ;serialCommand.c: 181: {
  6667                           ;serialCommand.c: 182: b = UART_HexSrtingToBinary(inputCommand+4);
  6668  01C2  304C               	movlw	(low ((_inputCommand| 0+4)))& (0+255)
  6669  01C3  226D  3180         	fcall	_UART_HexSrtingToBinary
  6670  01C5  00FC               	movwf	COMM_Task@b
  6671  01C6                     l2008:	
  6672                           
  6673                           ;serialCommand.c: 183: }
  6674                           ;serialCommand.c: 184: if(receiveData =='\n')
  6675  01C6  300A               	movlw	10
  6676  01C7  067D               	xorwf	COMM_Task@receiveData,w
  6677  01C8  1D03               	btfss	3,2
  6678  01C9  0008               	return
  6679                           
  6680                           ;serialCommand.c: 185: {
  6681                           ;serialCommand.c: 186: if(receiveCounter == 8)
  6682  01CA  3008               	movlw	8
  6683  01CB  063F               	xorwf	COMM_Task@receiveCounter,w
  6684  01CC  1D03               	btfss	3,2
  6685  01CD  2A23               	goto	l2016
  6686                           
  6687                           ;serialCommand.c: 187: {
  6688                           ;serialCommand.c: 188: LED_SetColor.Green = g;
  6689  01CE  087B               	movf	COMM_Task@g,w
  6690  01CF  00B9               	movwf	_LED_SetColor+1
  6691                           
  6692                           ;serialCommand.c: 189: LED_SetColor.Red = r;
  6693  01D0  087A               	movf	COMM_Task@r,w
  6694  01D1  00B8               	movwf	_LED_SetColor
  6695                           
  6696                           ;serialCommand.c: 190: LED_SetColor.Blue = b;
  6697  01D2  087C               	movf	COMM_Task@b,w
  6698  01D3                     L9:	
  6699  01D3  00BA               	movwf	_LED_SetColor+2
  6700  01D4                     L8:	
  6701                           
  6702                           ;serialCommand.c: 191: outputString("DONE!\r\n");
  6703  01D4  3096               	movlw	low (STR_8| (0+32768))
  6704  01D5  00F5               	movwf	outputString@string
  6705  01D6  3084               	movlw	high (STR_8| (0+32768))
  6706  01D7                     L3:	
  6707  01D7  00F6               	movwf	outputString@string+1
  6708  01D8  22CF               	fcall	_outputString
  6709  01D9                     l1950:	
  6710                           ;serialCommand.c: 161: }
  6711                           
  6712                           
  6713                           ;serialCommand.c: 126: }
  6714                           ;serialCommand.c: 127: UART_ReceiveState = COMM_IDEL;
  6715  01D9  0020               	movlb	0	; select bank0
  6716  01DA  01BE               	clrf	COMM_Task@UART_ReceiveState
  6717  01DB  0008               	return
  6718  01DC                     l1952:	
  6719                           
  6720                           ;serialCommand.c: 131: inputCommand[++receiveCounter] = receiveData;
  6721  01DC  0ABF               	incf	COMM_Task@receiveCounter,f
  6722  01DD  083F               	movf	COMM_Task@receiveCounter,w
  6723  01DE  3E48               	addlw	(low (_inputCommand| 0))& (0+255)
  6724  01DF  0086               	movwf	6
  6725  01E0  0187               	clrf	7
  6726  01E1  087D               	movf	COMM_Task@receiveData,w
  6727  01E2  0081               	movwf	1
  6728                           
  6729                           ;serialCommand.c: 132: if(receiveData == '\n')
  6730  01E3  300A               	movlw	10
  6731  01E4  067D               	xorwf	COMM_Task@receiveData,w
  6732  01E5  1D03               	btfss	3,2
  6733  01E6  0008               	return
  6734                           
  6735                           ;serialCommand.c: 133: {
  6736                           ;serialCommand.c: 134: if(strcmp(CMD_SET_OFF,inputCommand)==0)
  6737  01E7  3051               	movlw	low (_CMD_SET_OFF| (0+32768))
  6738  01E8  00F0               	movwf	strcmp@s1
  6739  01E9  3084               	movlw	high (_CMD_SET_OFF| (0+32768))
  6740  01EA  00F1               	movwf	strcmp@s1+1
  6741  01EB  3048               	movlw	(low (_inputCommand| 0))& (0+255)
  6742  01EC  00F2               	movwf	strcmp@s2
  6743  01ED  2231  3180         	fcall	_strcmp
  6744  01EF  0870               	movf	?_strcmp,w
  6745  01F0  0471               	iorwf	?_strcmp+1,w
  6746  01F1  1903               	btfsc	3,2
  6747  01F2  2993               	goto	l1958
  6748                           
  6749                           ;serialCommand.c: 139: else if(strcmp(CMD_SET_DIRECT,inputCommand)==0)
  6750  01F3  3006               	movlw	low (_CMD_SET_DIRECT| (0+32768))
  6751  01F4  00F0               	movwf	strcmp@s1
  6752  01F5  3084               	movlw	high (_CMD_SET_DIRECT| (0+32768))
  6753  01F6  00F1               	movwf	strcmp@s1+1
  6754  01F7  3048               	movlw	(low (_inputCommand| 0))& (0+255)
  6755  01F8  00F2               	movwf	strcmp@s2
  6756  01F9  2231  3180         	fcall	_strcmp
  6757  01FB  0870               	movf	?_strcmp,w
  6758  01FC  0471               	iorwf	?_strcmp+1,w
  6759  01FD  1903               	btfsc	3,2
  6760  01FE  2996               	goto	l1964
  6761                           
  6762                           ;serialCommand.c: 147: else if(strcmp(CMD_SET_STARRY,inputCommand)==0)
  6763  01FF  3016               	movlw	low (_CMD_SET_STARRY| (0+32768))
  6764  0200  00F0               	movwf	strcmp@s1
  6765  0201  3084               	movlw	high (_CMD_SET_STARRY| (0+32768))
  6766  0202  00F1               	movwf	strcmp@s1+1
  6767  0203  3048               	movlw	(low (_inputCommand| 0))& (0+255)
  6768  0204  00F2               	movwf	strcmp@s2
  6769  0205  2231  3180         	fcall	_strcmp
  6770  0207  0870               	movf	?_strcmp,w
  6771  0208  0471               	iorwf	?_strcmp+1,w
  6772  0209  1903               	btfsc	3,2
  6773  020A  299D               	goto	l1972
  6774                           
  6775                           ;serialCommand.c: 152: else if(strcmp(CMD_SET_XMAS,inputCommand)==0)
  6776  020B  3043               	movlw	low (_CMD_SET_XMAS| (0+32768))
  6777  020C  00F0               	movwf	strcmp@s1
  6778  020D  3084               	movlw	high (_CMD_SET_XMAS| (0+32768))
  6779  020E  00F1               	movwf	strcmp@s1+1
  6780  020F  3048               	movlw	(low (_inputCommand| 0))& (0+255)
  6781  0210  00F2               	movwf	strcmp@s2
  6782  0211  2231  3180         	fcall	_strcmp
  6783  0213  0870               	movf	?_strcmp,w
  6784  0214  0471               	iorwf	?_strcmp+1,w
  6785  0215  1903               	btfsc	3,2
  6786  0216  299F               	goto	l1978
  6787                           
  6788                           ;serialCommand.c: 157: else if(strcmp(CMD_SET_PARTY,inputCommand)==0)
  6789  0217  3026               	movlw	low (_CMD_SET_PARTY| (0+32768))
  6790  0218  00F0               	movwf	strcmp@s1
  6791  0219  3084               	movlw	high (_CMD_SET_PARTY| (0+32768))
  6792  021A  00F1               	movwf	strcmp@s1+1
  6793  021B  3048               	movlw	(low (_inputCommand| 0))& (0+255)
  6794  021C  00F2               	movwf	strcmp@s2
  6795  021D  2231  3180         	fcall	_strcmp
  6796  021F  0870               	movf	?_strcmp,w
  6797  0220  0471               	iorwf	?_strcmp+1,w
  6798  0221  1903               	btfsc	3,2
  6799  0222  29A1               	goto	l1984
  6800  0223                     l2016:	
  6801                           ;serialCommand.c: 192: }
  6802                           
  6803                           
  6804                           ;serialCommand.c: 193: else
  6805                           ;serialCommand.c: 194: {
  6806                           ;serialCommand.c: 195: outputString("Invalid Command \r\n");
  6807  0223  305E               	movlw	low (STR_7| (0+32768))
  6808  0224  00F5               	movwf	outputString@string
  6809  0225  3084               	movlw	high (STR_7| (0+32768))
  6810  0226  29D7               	goto	L3
  6811  0227                     l2020:	
  6812                           
  6813                           ;serialCommand.c: 201: if(receiveData == '\n')
  6814  0227  300A               	movlw	10
  6815  0228  067D               	xorwf	COMM_Task@receiveData,w
  6816  0229  1D03               	btfss	3,2
  6817  022A  0008               	return
  6818  022B  305E               	movlw	low (STR_7| (0+32768))
  6819                           
  6820                           ;serialCommand.c: 202: {
  6821                           ;serialCommand.c: 203: UART_ReceiveState = COMM_IDEL;
  6822  022C  01BE               	clrf	COMM_Task@UART_ReceiveState
  6823                           
  6824                           ;serialCommand.c: 204: outputString("Invalid Command \r\n");
  6825  022D  00F5               	movwf	outputString@string
  6826  022E  3084               	movlw	high (STR_7| (0+32768))
  6827  022F  00F6               	movwf	outputString@string+1
  6828  0230  2ACF               	ljmp	l1700
  6829  0231                     __end_of_COMM_Task:	
  6830  0231                     __ptext17:	
  6831 ;; *************** function _strcmp *****************
  6832 ;; Defined at:
  6833 ;;		line 5 in file "/Applications/microchip/xc8/v1.34/sources/common/strcmp.c"
  6834 ;; Parameters:    Size  Location     Type
  6835 ;;  s1              2    0[COMMON] PTR const unsigned char 
  6836 ;;		 -> CMD_SET_PARTY(15), CMD_SET_XMAS(14), CMD_SET_STARRY(16), CMD_SET_DIRECT(16), 
  6837 ;;		 -> CMD_SET_OFF(13), CMD_GET_STATE(14), 
  6838 ;;  s2              1    2[COMMON] PTR const unsigned char 
  6839 ;;		 -> inputCommand(16), 
  6840 ;; Auto vars:     Size  Location     Type
  6841 ;;  t1              1    5[COMMON] unsigned char 
  6842 ;;  t2              1    4[COMMON] unsigned char 
  6843 ;;  t0              1    3[COMMON] unsigned char 
  6844 ;; Return value:  Size  Location     Type
  6845 ;;                  2    0[COMMON] int 
  6846 ;; Registers used:
  6847 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  6848 ;; Tracked objects:
  6849 ;;		On entry : 0/0
  6850 ;;		On exit  : 0/0
  6851 ;;		Unchanged: 0/0
  6852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6853 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6854 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6856 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6857 ;;Total ram usage:        6 bytes
  6858 ;; Hardware stack levels used:    1
  6859 ;; Hardware stack levels required when called:    2
  6860 ;; This function calls:
  6861 ;;		Nothing
  6862 ;; This function is called by:
  6863 ;;		_COMM_Task
  6864 ;; This function uses a non-reentrant model
  6865 ;;
  6866                           
  6867                           
  6868                           ;psect for function _strcmp
  6869  0231                     _strcmp:	
  6870  0231                     l1758:	
  6871                           ;incstack = 0
  6872                           ; Regs used in _strcmp: [wreg-fsr1h+status,2+status,0+pclath]
  6873                           
  6874  0231  0870               	movf	strcmp@s1,w
  6875  0232  0084               	movwf	4
  6876  0233  0871               	movf	strcmp@s1+1,w
  6877  0234  0085               	movwf	5
  6878  0235  0800               	movf	0,w	;code access
  6879  0236  00F3               	movwf	strcmp@t0
  6880  0237  0872               	movf	strcmp@s2,w
  6881  0238  0086               	movwf	6
  6882  0239  0187               	clrf	7
  6883  023A  0801               	movf	1,w
  6884  023B  00F5               	movwf	strcmp@t1
  6885  023C  0873               	movf	strcmp@t0,w
  6886  023D  1903               	btfsc	3,2
  6887  023E  2A65               	goto	l1790
  6888  023F  3002               	movlw	2
  6889  0240  07F0               	addwf	strcmp@s1,f
  6890  0241  1803               	skipnc
  6891  0242  0AF1               	incf	strcmp@s1+1,f
  6892  0243  0873               	movf	strcmp@t0,w
  6893  0244  0675               	xorwf	strcmp@t1,w
  6894  0245  1D03               	btfss	3,2
  6895  0246  2A65               	goto	l1790
  6896  0247  30FF               	movlw	255
  6897  0248  0770               	addwf	strcmp@s1,w
  6898  0249  0084               	movwf	4
  6899  024A  30FF               	movlw	255
  6900  024B  3D71               	addwfc	strcmp@s1+1,w
  6901  024C  0085               	movwf	5
  6902  024D  0800               	movf	0,w	;code access
  6903  024E  00F4               	movwf	strcmp@t2
  6904  024F  0872               	movf	strcmp@s2,w
  6905  0250  0086               	movwf	6
  6906  0251  3F41               	moviw [1]fsr1
  6907  0252  00F5               	movwf	strcmp@t1
  6908  0253  0874               	movf	strcmp@t2,w
  6909  0254  1D03               	btfss	3,2
  6910  0255  2A5E               	goto	l1780
  6911  0256                     l1776:	
  6912  0256  0874               	movf	strcmp@t2,w
  6913  0257  00F0               	movwf	?_strcmp
  6914  0258  01F1               	clrf	?_strcmp+1
  6915  0259  0875               	movf	strcmp@t1,w
  6916  025A  02F0               	subwf	?_strcmp,f
  6917  025B  1C03               	skipc
  6918  025C  03F1               	decf	?_strcmp+1,f
  6919  025D  0008               	return
  6920  025E                     l1780:	
  6921  025E  0AF2               	incf	strcmp@s2,f
  6922  025F  0AF2               	incf	strcmp@s2,f
  6923  0260  0875               	movf	strcmp@t1,w
  6924  0261  0674               	xorwf	strcmp@t2,w
  6925  0262  1D03               	btfss	3,2
  6926  0263  2A56               	goto	l1776
  6927  0264  2A31               	goto	l1758
  6928  0265                     l1790:	
  6929  0265  0873               	movf	strcmp@t0,w
  6930  0266  00F0               	movwf	?_strcmp
  6931  0267  01F1               	clrf	?_strcmp+1
  6932  0268  0875               	movf	strcmp@t1,w
  6933  0269  02F0               	subwf	?_strcmp,f
  6934  026A  1C03               	skipc
  6935  026B  03F1               	decf	?_strcmp+1,f
  6936  026C  0008               	return
  6937  026D                     __end_of_strcmp:	
  6938  026D                     __ptext22:	
  6939 ;; *************** function _UART_HexSrtingToBinary *****************
  6940 ;; Defined at:
  6941 ;;		line 35 in file "../src/serialCommand.c"
  6942 ;; Parameters:    Size  Location     Type
  6943 ;;  data            1    wreg     PTR unsigned char 
  6944 ;;		 -> inputCommand(16), 
  6945 ;; Auto vars:     Size  Location     Type
  6946 ;;  data            1    3[COMMON] PTR unsigned char 
  6947 ;;		 -> inputCommand(16), 
  6948 ;;  i               1    2[COMMON] unsigned char 
  6949 ;; Return value:  Size  Location     Type
  6950 ;;                  1    wreg      unsigned char 
  6951 ;; Registers used:
  6952 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6953 ;; Tracked objects:
  6954 ;;		On entry : 1F/0
  6955 ;;		On exit  : 1F/0
  6956 ;;		Unchanged: 1F/0
  6957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6959 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6960 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6961 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6962 ;;Total ram usage:        4 bytes
  6963 ;; Hardware stack levels used:    1
  6964 ;; Hardware stack levels required when called:    2
  6965 ;; This function calls:
  6966 ;;		Nothing
  6967 ;; This function is called by:
  6968 ;;		_COMM_Task
  6969 ;; This function uses a non-reentrant model
  6970 ;;
  6971                           
  6972                           
  6973                           ;psect for function _UART_HexSrtingToBinary
  6974  026D                     _UART_HexSrtingToBinary:	
  6975                           
  6976                           ;incstack = 0
  6977                           ; Regs used in _UART_HexSrtingToBinary: [wreg-fsr1h+status,2+status,0]
  6978                           ;UART_HexSrtingToBinary@data stored from wreg
  6979  026D  00F3               	movwf	UART_HexSrtingToBinary@data
  6980                           
  6981                           ;serialCommand.c: 37: for(uint8_t i=0; i<2; i++)
  6982  026E  01F2               	clrf	UART_HexSrtingToBinary@i
  6983  026F                     l1714:	
  6984                           
  6985                           ;serialCommand.c: 38: {
  6986                           ;serialCommand.c: 39: if(data[i]>=0x30 && data[i]<=0x39)
  6987  026F  0872               	movf	UART_HexSrtingToBinary@i,w
  6988  0270  0773               	addwf	UART_HexSrtingToBinary@data,w
  6989  0271  00F0               	movwf	??_UART_HexSrtingToBinary
  6990  0272  0086               	movwf	6
  6991  0273  3030               	movlw	48
  6992  0274  0187               	clrf	7
  6993  0275  0201               	subwf	1,w
  6994  0276  0872               	movf	UART_HexSrtingToBinary@i,w
  6995  0277  1C03               	skipc
  6996  0278  2A8C               	goto	L13
  6997  0279  0773               	addwf	UART_HexSrtingToBinary@data,w
  6998  027A  00F0               	movwf	??_UART_HexSrtingToBinary
  6999  027B  0086               	movwf	6
  7000  027C  303A               	movlw	58
  7001  027D  0201               	subwf	1,w
  7002                           
  7003                           ;serialCommand.c: 40: {
  7004                           ;serialCommand.c: 41: data[i] = data[i]-0x30;
  7005  027E  0872               	movf	UART_HexSrtingToBinary@i,w
  7006  027F  1803               	skipnc
  7007  0280  2A8C               	goto	L13
  7008  0281  0773               	addwf	UART_HexSrtingToBinary@data,w
  7009  0282  00F0               	movwf	??_UART_HexSrtingToBinary
  7010  0283  0086               	movwf	6
  7011  0284  0872               	movf	UART_HexSrtingToBinary@i,w
  7012  0285  0773               	addwf	UART_HexSrtingToBinary@data,w
  7013  0286  00F1               	movwf	??_UART_HexSrtingToBinary+1
  7014  0287  0084               	movwf	4
  7015  0288  0185               	clrf	5
  7016  0289  0800               	movf	0,w
  7017  028A  3ED0               	addlw	208
  7018  028B  2A97               	goto	L12
  7019  028C                     L13:	
  7020                           ;serialCommand.c: 43: else
  7021                           ;serialCommand.c: 44: {
  7022                           ;serialCommand.c: 45: data[i] = data[i] -0x41 +0x0A;
  7023                           
  7024                           ;serialCommand.c: 42: }
  7025                           
  7026  028C  0773               	addwf	UART_HexSrtingToBinary@data,w
  7027  028D  00F0               	movwf	??_UART_HexSrtingToBinary
  7028  028E  0086               	movwf	6
  7029  028F  0187               	clrf	7
  7030  0290  0872               	movf	UART_HexSrtingToBinary@i,w
  7031  0291  0773               	addwf	UART_HexSrtingToBinary@data,w
  7032  0292  00F1               	movwf	??_UART_HexSrtingToBinary+1
  7033  0293  0084               	movwf	4
  7034  0294  0185               	clrf	5
  7035  0295  0800               	movf	0,w
  7036  0296  3EC9               	addlw	201
  7037  0297                     L12:	
  7038  0297  0081               	movwf	1
  7039  0298  3002               	movlw	2
  7040  0299  0AF2               	incf	UART_HexSrtingToBinary@i,f
  7041  029A  0272               	subwf	UART_HexSrtingToBinary@i,w
  7042  029B  1C03               	skipc
  7043  029C  2A6F               	goto	l1714
  7044                           
  7045                           ;serialCommand.c: 46: }
  7046                           ;serialCommand.c: 47: }
  7047                           ;serialCommand.c: 48: return ((data[0]<<4)+data[1]);
  7048  029D  0A73               	incf	UART_HexSrtingToBinary@data,w
  7049  029E  0086               	movwf	6
  7050  029F  0187               	clrf	7
  7051  02A0  0873               	movf	UART_HexSrtingToBinary@data,w
  7052  02A1  0084               	movwf	4
  7053  02A2  0185               	clrf	5
  7054  02A3  0E00               	swapf	0,w
  7055  02A4  39F0               	andlw	240
  7056  02A5  0701               	addwf	1,w
  7057  02A6  0008               	return
  7058  02A7                     __end_of_UART_HexSrtingToBinary:	
  7059  02A7                     __ptext23:	
  7060 ;; *************** function _EUSART_Read *****************
  7061 ;; Defined at:
  7062 ;;		line 112 in file "mcc_generated_files/eusart.c"
  7063 ;; Parameters:    Size  Location     Type
  7064 ;;		None
  7065 ;; Auto vars:     Size  Location     Type
  7066 ;;  readValue       1    0[COMMON] unsigned char 
  7067 ;; Return value:  Size  Location     Type
  7068 ;;                  1    wreg      unsigned char 
  7069 ;; Registers used:
  7070 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7071 ;; Tracked objects:
  7072 ;;		On entry : 1F/0
  7073 ;;		On exit  : 1F/1
  7074 ;;		Unchanged: 0/0
  7075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7077 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7079 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7080 ;;Total ram usage:        1 bytes
  7081 ;; Hardware stack levels used:    1
  7082 ;; Hardware stack levels required when called:    2
  7083 ;; This function calls:
  7084 ;;		Nothing
  7085 ;; This function is called by:
  7086 ;;		_COMM_Task
  7087 ;; This function uses a non-reentrant model
  7088 ;;
  7089                           
  7090                           
  7091                           ;psect for function _EUSART_Read
  7092  02A7                     _EUSART_Read:	
  7093  02A7                     l1732:	
  7094                           ;eusart.c: 115: while (0 == eusartRxCount) {
  7095                           
  7096                           ;incstack = 0
  7097                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  7098                           
  7099  02A7  0842               	movf	_eusartRxCount,w	;volatile
  7100  02A8  1903               	btfsc	3,2
  7101  02A9  2AA7               	goto	l1732
  7102                           
  7103                           ;eusart.c: 116: }
  7104                           ;eusart.c: 118: PIE1bits.RCIE = 0;
  7105  02AA  0021               	movlb	1	; select bank1
  7106  02AB  1290               	bcf	16,5	;volatile
  7107                           
  7108                           ;eusart.c: 120: readValue = eusartRxBuffer[eusartRxTail++];
  7109  02AC  0020               	movlb	0	; select bank0
  7110  02AD  0844               	movf	_eusartRxTail,w
  7111  02AE  3E20               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  7112  02AF  0086               	movwf	6
  7113  02B0  0187               	clrf	7
  7114  02B1  0801               	movf	1,w
  7115  02B2  00F0               	movwf	EUSART_Read@readValue
  7116  02B3  3010               	movlw	16
  7117  02B4  0AC4               	incf	_eusartRxTail,f
  7118                           
  7119                           ;eusart.c: 121: if (sizeof (eusartRxBuffer) <= eusartRxTail) {
  7120  02B5  0244               	subwf	_eusartRxTail,w
  7121  02B6  1803               	btfsc	3,0
  7122                           
  7123                           ;eusart.c: 122: eusartRxTail = 0;
  7124  02B7  01C4               	clrf	_eusartRxTail
  7125                           
  7126                           ;eusart.c: 123: }
  7127                           ;eusart.c: 124: eusartRxCount--;
  7128  02B8  03C2               	decf	_eusartRxCount,f	;volatile
  7129                           
  7130                           ;eusart.c: 125: PIE1bits.RCIE = 1;
  7131  02B9  0021               	movlb	1	; select bank1
  7132  02BA  1690               	bsf	16,5	;volatile
  7133                           
  7134                           ;eusart.c: 127: return readValue;
  7135  02BB  0870               	movf	EUSART_Read@readValue,w
  7136  02BC  0008               	return
  7137  02BD                     __end_of_EUSART_Read:	
  7138  02BD                     __ptext21:	
  7139 ;; *************** function _memset *****************
  7140 ;; Defined at:
  7141 ;;		line 8 in file "/Applications/microchip/xc8/v1.34/sources/common/memset.c"
  7142 ;; Parameters:    Size  Location     Type
  7143 ;;  p1              1    wreg     PTR void 
  7144 ;;		 -> inputCommand(16), 
  7145 ;;  c               2    0[COMMON] int 
  7146 ;;  n               2    2[COMMON] unsigned int 
  7147 ;; Auto vars:     Size  Location     Type
  7148 ;;  p1              1    4[COMMON] PTR void 
  7149 ;;		 -> inputCommand(16), 
  7150 ;;  p               1    5[COMMON] PTR unsigned char 
  7151 ;;		 -> inputCommand(16), 
  7152 ;; Return value:  Size  Location     Type
  7153 ;;                  1    wreg      PTR void 
  7154 ;; Registers used:
  7155 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7156 ;; Tracked objects:
  7157 ;;		On entry : 0/0
  7158 ;;		On exit  : 0/0
  7159 ;;		Unchanged: 0/0
  7160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7161 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7162 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7164 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7165 ;;Total ram usage:        6 bytes
  7166 ;; Hardware stack levels used:    1
  7167 ;; Hardware stack levels required when called:    2
  7168 ;; This function calls:
  7169 ;;		Nothing
  7170 ;; This function is called by:
  7171 ;;		_COMM_Task
  7172 ;; This function uses a non-reentrant model
  7173 ;;
  7174                           
  7175                           
  7176                           ;psect for function _memset
  7177  02BD                     _memset:	
  7178                           
  7179                           ;incstack = 0
  7180                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  7181                           ;memset@p1 stored from wreg
  7182  02BD  00F4               	movwf	memset@p1
  7183  02BE  00F5               	movwf	memset@p
  7184  02BF                     l1756:	
  7185  02BF  3001               	movlw	1
  7186  02C0  02F2               	subwf	memset@n,f
  7187  02C1  3000               	movlw	0
  7188  02C2  3BF3               	subwfb	memset@n+1,f
  7189  02C3  0F72               	incfsz	memset@n,w
  7190  02C4  2AC8               	goto	l1752
  7191  02C5  0A73               	incf	memset@n+1,w
  7192  02C6  1903               	btfsc	3,2
  7193  02C7  0008               	return
  7194  02C8                     l1752:	
  7195  02C8  0875               	movf	memset@p,w
  7196  02C9  0086               	movwf	6
  7197  02CA  0187               	clrf	7
  7198  02CB  0870               	movf	memset@c,w
  7199  02CC  0081               	movwf	1
  7200  02CD  0AF5               	incf	memset@p,f
  7201  02CE  2ABF               	goto	l1756
  7202  02CF                     __end_of_memset:	
  7203  02CF                     __ptext18:	
  7204 ;; *************** function _outputString *****************
  7205 ;; Defined at:
  7206 ;;		line 27 in file "../src/serialCommand.c"
  7207 ;; Parameters:    Size  Location     Type
  7208 ;;  string          2    5[COMMON] PTR const unsigned char 
  7209 ;;		 -> STR_16(19), STR_15(19), STR_14(8), STR_13(19), 
  7210 ;;		 -> STR_12(8), STR_11(8), STR_10(8), STR_9(8), 
  7211 ;;		 -> STR_8(8), STR_7(19), STR_6(8), STR_5(8), 
  7212 ;;		 -> STR_4(7), STR_3(9), STR_2(15), STR_1(13), 
  7213 ;; Auto vars:     Size  Location     Type
  7214 ;;  i               1    9[COMMON] unsigned char 
  7215 ;; Return value:  Size  Location     Type
  7216 ;;		None               void
  7217 ;; Registers used:
  7218 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7219 ;; Tracked objects:
  7220 ;;		On entry : 0/0
  7221 ;;		On exit  : 0/0
  7222 ;;		Unchanged: 0/0
  7223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7224 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7225 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7226 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7227 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7228 ;;Total ram usage:        5 bytes
  7229 ;; Hardware stack levels used:    1
  7230 ;; Hardware stack levels required when called:    3
  7231 ;; This function calls:
  7232 ;;		_EUSART_Write
  7233 ;;		_strlen
  7234 ;; This function is called by:
  7235 ;;		_COMM_Task
  7236 ;; This function uses a non-reentrant model
  7237 ;;
  7238                           
  7239                           
  7240                           ;psect for function _outputString
  7241  02CF                     _outputString:	
  7242  02CF                     l1700:	
  7243                           ;incstack = 0
  7244                           ; Regs used in _outputString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7245                           
  7246                           
  7247                           ;serialCommand.c: 29: for(uint8_t i =0;i<strlen(string);i++)
  7248  02CF  01F9               	clrf	outputString@i
  7249  02D0                     l1706:	
  7250  02D0  0875               	movf	outputString@string,w
  7251  02D1  00F0               	movwf	strlen@s
  7252  02D2  0876               	movf	outputString@string+1,w
  7253  02D3  00F1               	movwf	strlen@s+1
  7254  02D4  230E  3180         	fcall	_strlen
  7255  02D6  0879               	movf	outputString@i,w
  7256  02D7  00F7               	movwf	??_outputString
  7257  02D8  01F8               	clrf	??_outputString+1
  7258  02D9  0871               	movf	?_strlen+1,w
  7259  02DA  0278               	subwf	??_outputString+1,w
  7260  02DB  1D03               	skipz
  7261  02DC  2ADF               	goto	u785
  7262  02DD  0870               	movf	?_strlen,w
  7263  02DE  0277               	subwf	??_outputString,w
  7264  02DF                     u785:	
  7265  02DF  1803               	btfsc	3,0
  7266  02E0  0008               	return
  7267                           
  7268                           ;serialCommand.c: 30: {
  7269                           ;serialCommand.c: 31: EUSART_Write(string[i]);
  7270  02E1  0876               	movf	outputString@string+1,w
  7271  02E2  00F8               	movwf	??_outputString+1
  7272  02E3  0875               	movf	outputString@string,w
  7273  02E4  00F7               	movwf	??_outputString
  7274  02E5  0879               	movf	outputString@i,w
  7275  02E6  0777               	addwf	??_outputString,w
  7276  02E7  0084               	movwf	4
  7277  02E8  0878               	movf	??_outputString+1,w
  7278  02E9  1803               	skipnc
  7279  02EA  0A78               	incf	??_outputString+1,w
  7280  02EB  0085               	movwf	5
  7281  02EC  0800               	movf	0,w	;code access
  7282  02ED  22F1  3180         	fcall	_EUSART_Write
  7283  02EF  0AF9               	incf	outputString@i,f
  7284  02F0  2AD0               	goto	l1706
  7285  02F1                     __end_of_outputString:	
  7286  02F1                     __ptext20:	
  7287 ;; *************** function _EUSART_Write *****************
  7288 ;; Defined at:
  7289 ;;		line 130 in file "mcc_generated_files/eusart.c"
  7290 ;; Parameters:    Size  Location     Type
  7291 ;;  txData          1    wreg     unsigned char 
  7292 ;; Auto vars:     Size  Location     Type
  7293 ;;  txData          1    0[COMMON] unsigned char 
  7294 ;; Return value:  Size  Location     Type
  7295 ;;		None               void
  7296 ;; Registers used:
  7297 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7298 ;; Tracked objects:
  7299 ;;		On entry : 0/0
  7300 ;;		On exit  : 1F/1
  7301 ;;		Unchanged: 0/0
  7302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7304 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7306 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7307 ;;Total ram usage:        1 bytes
  7308 ;; Hardware stack levels used:    1
  7309 ;; Hardware stack levels required when called:    2
  7310 ;; This function calls:
  7311 ;;		Nothing
  7312 ;; This function is called by:
  7313 ;;		_outputString
  7314 ;; This function uses a non-reentrant model
  7315 ;;
  7316                           
  7317                           
  7318                           ;psect for function _EUSART_Write
  7319  02F1                     _EUSART_Write:	
  7320                           
  7321                           ;incstack = 0
  7322                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  7323                           ;EUSART_Write@txData stored from wreg
  7324  02F1  00F0               	movwf	EUSART_Write@txData
  7325  02F2                     l1672:	
  7326                           ;eusart.c: 131: while (0 == eusartTxBufferRemaining) {
  7327                           
  7328  02F2  0020               	movlb	0	; select bank0
  7329  02F3  0845               	movf	_eusartTxBufferRemaining,w	;volatile
  7330  02F4  1903               	btfsc	3,2
  7331  02F5  2AF2               	goto	l1672
  7332                           
  7333                           ;eusart.c: 132: }
  7334                           ;eusart.c: 134: if (0 == PIE1bits.TXIE) {
  7335  02F6  0021               	movlb	1	; select bank1
  7336  02F7  1A10               	btfsc	16,4	;volatile
  7337  02F8  2AFD               	goto	l293
  7338                           
  7339                           ;eusart.c: 135: TX1REG = txData;
  7340  02F9  0870               	movf	EUSART_Write@txData,w
  7341  02FA  0023               	movlb	3	; select bank3
  7342  02FB  009A               	movwf	26	;volatile
  7343                           
  7344                           ;eusart.c: 136: } else {
  7345  02FC  2B0B               	goto	l1686
  7346  02FD                     l293:	
  7347                           
  7348                           ;eusart.c: 137: PIE1bits.TXIE = 0;
  7349  02FD  1210               	bcf	16,4	;volatile
  7350                           
  7351                           ;eusart.c: 138: eusartTxBuffer[eusartTxHead++] = txData;
  7352  02FE  0020               	movlb	0	; select bank0
  7353  02FF  0846               	movf	_eusartTxHead,w
  7354  0300  3E30               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  7355  0301  0086               	movwf	6
  7356  0302  0187               	clrf	7
  7357  0303  0870               	movf	EUSART_Write@txData,w
  7358  0304  0081               	movwf	1
  7359  0305  3008               	movlw	8
  7360  0306  0AC6               	incf	_eusartTxHead,f
  7361                           
  7362                           ;eusart.c: 139: if (sizeof (eusartTxBuffer) <= eusartTxHead) {
  7363  0307  0246               	subwf	_eusartTxHead,w
  7364  0308  1803               	btfsc	3,0
  7365                           
  7366                           ;eusart.c: 140: eusartTxHead = 0;
  7367  0309  01C6               	clrf	_eusartTxHead
  7368                           
  7369                           ;eusart.c: 141: }
  7370                           ;eusart.c: 142: eusartTxBufferRemaining--;
  7371  030A  03C5               	decf	_eusartTxBufferRemaining,f	;volatile
  7372  030B                     l1686:	
  7373                           
  7374                           ;eusart.c: 143: }
  7375                           ;eusart.c: 144: PIE1bits.TXIE = 1;
  7376  030B  0021               	movlb	1	; select bank1
  7377  030C  1610               	bsf	16,4	;volatile
  7378  030D  0008               	return
  7379  030E                     __end_of_EUSART_Write:	
  7380  030E                     __ptext19:	
  7381 ;; *************** function _strlen *****************
  7382 ;; Defined at:
  7383 ;;		line 4 in file "/Applications/microchip/xc8/v1.34/sources/common/strlen.c"
  7384 ;; Parameters:    Size  Location     Type
  7385 ;;  s               2    0[COMMON] PTR const unsigned char 
  7386 ;;		 -> STR_16(19), STR_15(19), STR_14(8), STR_13(19), 
  7387 ;;		 -> STR_12(8), STR_11(8), STR_10(8), STR_9(8), 
  7388 ;;		 -> STR_8(8), STR_7(19), STR_6(8), STR_5(8), 
  7389 ;;		 -> STR_4(7), STR_3(9), STR_2(15), STR_1(13), 
  7390 ;; Auto vars:     Size  Location     Type
  7391 ;;  cp              2    3[COMMON] PTR const unsigned char 
  7392 ;;		 -> STR_16(19), STR_15(19), STR_14(8), STR_13(19), 
  7393 ;;		 -> STR_12(8), STR_11(8), STR_10(8), STR_9(8), 
  7394 ;;		 -> STR_8(8), STR_7(19), STR_6(8), STR_5(8), 
  7395 ;;		 -> STR_4(7), STR_3(9), STR_2(15), STR_1(13), 
  7396 ;; Return value:  Size  Location     Type
  7397 ;;                  2    0[COMMON] unsigned int 
  7398 ;; Registers used:
  7399 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7400 ;; Tracked objects:
  7401 ;;		On entry : 0/0
  7402 ;;		On exit  : 0/0
  7403 ;;		Unchanged: 0/0
  7404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7405 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7406 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7407 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7408 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7409 ;;Total ram usage:        5 bytes
  7410 ;; Hardware stack levels used:    1
  7411 ;; Hardware stack levels required when called:    2
  7412 ;; This function calls:
  7413 ;;		Nothing
  7414 ;; This function is called by:
  7415 ;;		_outputString
  7416 ;; This function uses a non-reentrant model
  7417 ;;
  7418                           
  7419                           
  7420                           ;psect for function _strlen
  7421  030E                     _strlen:	
  7422                           
  7423                           ;incstack = 0
  7424                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  7425  030E  0870               	movf	strlen@s,w
  7426  030F  00F3               	movwf	strlen@cp
  7427  0310  0871               	movf	strlen@s+1,w
  7428  0311  00F4               	movwf	strlen@cp+1
  7429  0312                     l1692:	
  7430  0312  0873               	movf	strlen@cp,w
  7431  0313  0084               	movwf	4
  7432  0314  0874               	movf	strlen@cp+1,w
  7433  0315  0085               	movwf	5
  7434  0316  0012               	moviw fsr0++
  7435  0317  1903               	btfsc	3,2
  7436  0318  2B1D               	goto	l1694
  7437  0319  0AF3               	incf	strlen@cp,f
  7438  031A  1903               	skipnz
  7439  031B  0AF4               	incf	strlen@cp+1,f
  7440  031C  2B12               	goto	l1692
  7441  031D                     l1694:	
  7442  031D  0870               	movf	strlen@s,w
  7443  031E  0273               	subwf	strlen@cp,w
  7444  031F  00F0               	movwf	?_strlen
  7445  0320  0871               	movf	strlen@s+1,w
  7446  0321  3B74               	subwfb	strlen@cp+1,w
  7447  0322  00F1               	movwf	?_strlen+1
  7448  0323  0008               	return
  7449  0324                     __end_of_strlen:	
  7450  0324                     __ptext1:	
  7451 ;; *************** function _SYSTEM_Initialize *****************
  7452 ;; Defined at:
  7453 ;;		line 77 in file "mcc_generated_files/mcc.c"
  7454 ;; Parameters:    Size  Location     Type
  7455 ;;		None
  7456 ;; Auto vars:     Size  Location     Type
  7457 ;;		None
  7458 ;; Return value:  Size  Location     Type
  7459 ;;		None               void
  7460 ;; Registers used:
  7461 ;;		wreg, status,2, status,0, pclath, cstack
  7462 ;; Tracked objects:
  7463 ;;		On entry : B1F/0
  7464 ;;		On exit  : 1F/5
  7465 ;;		Unchanged: 0/0
  7466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7471 ;;Total ram usage:        0 bytes
  7472 ;; Hardware stack levels used:    1
  7473 ;; Hardware stack levels required when called:    4
  7474 ;; This function calls:
  7475 ;;		_ADC1_Initialize
  7476 ;;		_CLC4_Initialize
  7477 ;;		_EUSART_Initialize
  7478 ;;		_OSCILLATOR_Initialize
  7479 ;;		_PIN_MANAGER_Initialize
  7480 ;;		_PWM3_Initialize
  7481 ;;		_SPI_Initialize
  7482 ;;		_TMR2_Initialize
  7483 ;; This function is called by:
  7484 ;;		_main
  7485 ;; This function uses a non-reentrant model
  7486 ;;
  7487                           
  7488                           
  7489                           ;psect for function _SYSTEM_Initialize
  7490  0324                     _SYSTEM_Initialize:	
  7491                           
  7492                           ;mcc.c: 78: OSCILLATOR_Initialize();
  7493                           
  7494                           ;incstack = 0
  7495                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7496  0324  2354  3180         	fcall	_OSCILLATOR_Initialize
  7497                           
  7498                           ;mcc.c: 79: PIN_MANAGER_Initialize();
  7499  0326  235C  3180         	fcall	_PIN_MANAGER_Initialize
  7500                           
  7501                           ;mcc.c: 80: EUSART_Initialize();
  7502  0328  233C  3180         	fcall	_EUSART_Initialize
  7503                           
  7504                           ;mcc.c: 81: SPI_Initialize();
  7505  032A  23AA  3180         	fcall	_SPI_Initialize
  7506                           
  7507                           ;mcc.c: 82: TMR2_Initialize();
  7508  032C  23B0  3180         	fcall	_TMR2_Initialize
  7509                           
  7510                           ;mcc.c: 83: ADC1_Initialize();
  7511  032E  2333  3180         	fcall	_ADC1_Initialize
  7512                           
  7513                           ;mcc.c: 84: CLC4_Initialize();
  7514  0330  23BB  3180         	fcall	_CLC4_Initialize
  7515                           
  7516                           ;mcc.c: 85: PWM3_Initialize();
  7517  0332  2BD0               	ljmp	l1232
  7518  0333                     __end_of_SYSTEM_Initialize:	
  7519  0333                     __ptext10:	
  7520 ;; *************** function _ADC1_Initialize *****************
  7521 ;; Defined at:
  7522 ;;		line 65 in file "mcc_generated_files/adc1.c"
  7523 ;; Parameters:    Size  Location     Type
  7524 ;;		None
  7525 ;; Auto vars:     Size  Location     Type
  7526 ;;		None
  7527 ;; Return value:  Size  Location     Type
  7528 ;;		None               void
  7529 ;; Registers used:
  7530 ;;		wreg, status,2
  7531 ;; Tracked objects:
  7532 ;;		On entry : 1F/0
  7533 ;;		On exit  : 1F/1
  7534 ;;		Unchanged: 0/0
  7535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7540 ;;Total ram usage:        0 bytes
  7541 ;; Hardware stack levels used:    1
  7542 ;; Hardware stack levels required when called:    2
  7543 ;; This function calls:
  7544 ;;		Nothing
  7545 ;; This function is called by:
  7546 ;;		_SYSTEM_Initialize
  7547 ;; This function uses a non-reentrant model
  7548 ;;
  7549                           
  7550                           
  7551                           ;psect for function _ADC1_Initialize
  7552  0333                     _ADC1_Initialize:	
  7553                           
  7554                           ;adc1.c: 69: ADCON0 = 0x01;
  7555                           
  7556                           ;incstack = 0
  7557                           ; Regs used in _ADC1_Initialize: [wreg+status,2]
  7558  0333  3001               	movlw	1
  7559  0334  0021               	movlb	1	; select bank1
  7560  0335  009D               	movwf	29	;volatile
  7561                           
  7562                           ;adc1.c: 72: ADCON1 = 0xA0;
  7563  0336  30A0               	movlw	160
  7564  0337  009E               	movwf	30	;volatile
  7565                           
  7566                           ;adc1.c: 75: ADCON2 = 0x00;
  7567  0338  019F               	clrf	31	;volatile
  7568                           
  7569                           ;adc1.c: 78: ADRESL = 0x00;
  7570  0339  019B               	clrf	27	;volatile
  7571                           
  7572                           ;adc1.c: 81: ADRESH = 0x00;
  7573  033A  019C               	clrf	28	;volatile
  7574  033B  0008               	return
  7575  033C                     __end_of_ADC1_Initialize:	
  7576  033C                     __ptext8:	
  7577 ;; *************** function _EUSART_Initialize *****************
  7578 ;; Defined at:
  7579 ;;		line 76 in file "mcc_generated_files/eusart.c"
  7580 ;; Parameters:    Size  Location     Type
  7581 ;;		None
  7582 ;; Auto vars:     Size  Location     Type
  7583 ;;		None
  7584 ;; Return value:  Size  Location     Type
  7585 ;;		None               void
  7586 ;; Registers used:
  7587 ;;		wreg, status,2
  7588 ;; Tracked objects:
  7589 ;;		On entry : 0/1
  7590 ;;		On exit  : 1F/1
  7591 ;;		Unchanged: 0/0
  7592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7597 ;;Total ram usage:        0 bytes
  7598 ;; Hardware stack levels used:    1
  7599 ;; Hardware stack levels required when called:    2
  7600 ;; This function calls:
  7601 ;;		Nothing
  7602 ;; This function is called by:
  7603 ;;		_SYSTEM_Initialize
  7604 ;; This function uses a non-reentrant model
  7605 ;;
  7606                           
  7607                           
  7608                           ;psect for function _EUSART_Initialize
  7609  033C                     _EUSART_Initialize:	
  7610                           
  7611                           ;eusart.c: 78: PIE1bits.RCIE = 0;
  7612                           
  7613                           ;incstack = 0
  7614                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  7615  033C  0021               	movlb	1	; select bank1
  7616  033D  1290               	bcf	16,5	;volatile
  7617                           
  7618                           ;eusart.c: 79: PIE1bits.TXIE = 0;
  7619  033E  1210               	bcf	16,4	;volatile
  7620                           
  7621                           ;eusart.c: 84: BAUD1CON = 0x48;
  7622  033F  3048               	movlw	72
  7623  0340  0023               	movlb	3	; select bank3
  7624  0341  009F               	movwf	31	;volatile
  7625                           
  7626                           ;eusart.c: 87: RC1STA = 0x90;
  7627  0342  3090               	movlw	144
  7628  0343  009D               	movwf	29	;volatile
  7629                           
  7630                           ;eusart.c: 90: TX1STA = 0x26;
  7631  0344  3026               	movlw	38
  7632  0345  009E               	movwf	30	;volatile
  7633                           
  7634                           ;eusart.c: 93: SPBRGL = 0x44;
  7635  0346  3044               	movlw	68
  7636  0347  009B               	movwf	27	;volatile
  7637                           
  7638                           ;eusart.c: 96: SPBRGH = 0x00;
  7639  0348  019C               	clrf	28	;volatile
  7640                           
  7641                           ;eusart.c: 100: eusartTxHead = 0;
  7642  0349  0020               	movlb	0	; select bank0
  7643  034A  3008               	movlw	8
  7644  034B  01C6               	clrf	_eusartTxHead
  7645                           
  7646                           ;eusart.c: 101: eusartTxTail = 0;
  7647  034C  01C7               	clrf	_eusartTxTail
  7648                           
  7649                           ;eusart.c: 102: eusartTxBufferRemaining = sizeof (eusartTxBuffer);
  7650  034D  00C5               	movwf	_eusartTxBufferRemaining	;volatile
  7651                           
  7652                           ;eusart.c: 104: eusartRxHead = 0;
  7653  034E  01C3               	clrf	_eusartRxHead
  7654                           
  7655                           ;eusart.c: 105: eusartRxTail = 0;
  7656  034F  01C4               	clrf	_eusartRxTail
  7657                           
  7658                           ;eusart.c: 106: eusartRxCount = 0;
  7659  0350  01C2               	clrf	_eusartRxCount	;volatile
  7660                           
  7661                           ;eusart.c: 109: PIE1bits.RCIE = 1;
  7662  0351  0021               	movlb	1	; select bank1
  7663  0352  1690               	bsf	16,5	;volatile
  7664  0353  0008               	return
  7665  0354                     __end_of_EUSART_Initialize:	
  7666  0354                     __ptext7:	
  7667 ;; *************** function _OSCILLATOR_Initialize *****************
  7668 ;; Defined at:
  7669 ;;		line 88 in file "mcc_generated_files/mcc.c"
  7670 ;; Parameters:    Size  Location     Type
  7671 ;;		None
  7672 ;; Auto vars:     Size  Location     Type
  7673 ;;		None
  7674 ;; Return value:  Size  Location     Type
  7675 ;;		None               void
  7676 ;; Registers used:
  7677 ;;		wreg, status,2
  7678 ;; Tracked objects:
  7679 ;;		On entry : B1F/0
  7680 ;;		On exit  : B1F/1
  7681 ;;		Unchanged: B00/0
  7682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7687 ;;Total ram usage:        0 bytes
  7688 ;; Hardware stack levels used:    1
  7689 ;; Hardware stack levels required when called:    2
  7690 ;; This function calls:
  7691 ;;		Nothing
  7692 ;; This function is called by:
  7693 ;;		_SYSTEM_Initialize
  7694 ;; This function uses a non-reentrant model
  7695 ;;
  7696                           
  7697                           
  7698                           ;psect for function _OSCILLATOR_Initialize
  7699  0354                     _OSCILLATOR_Initialize:	
  7700                           
  7701                           ;mcc.c: 90: OSCCON = 0x70;
  7702                           
  7703                           ;incstack = 0
  7704                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7705  0354  3070               	movlw	112
  7706  0355  0021               	movlb	1	; select bank1
  7707  0356  0099               	movwf	25	;volatile
  7708                           
  7709                           ;mcc.c: 92: OSCSTAT = 0x00;
  7710  0357  019A               	clrf	26	;volatile
  7711                           
  7712                           ;mcc.c: 94: OSCTUNE = 0x00;
  7713  0358  0198               	clrf	24	;volatile
  7714  0359                     l358:	
  7715                           ;mcc.c: 98: while (PLLR == 0) {
  7716                           
  7717  0359  1B1A               	btfsc	26,6	;volatile
  7718  035A  0008               	return
  7719  035B  2B59               	goto	l358
  7720  035C                     __end_of_OSCILLATOR_Initialize:	
  7721  035C                     __ptext6:	
  7722 ;; *************** function _PIN_MANAGER_Initialize *****************
  7723 ;; Defined at:
  7724 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  7725 ;; Parameters:    Size  Location     Type
  7726 ;;		None
  7727 ;; Auto vars:     Size  Location     Type
  7728 ;;  state           1    0[COMMON] unsigned char 
  7729 ;; Return value:  Size  Location     Type
  7730 ;;		None               void
  7731 ;; Registers used:
  7732 ;;		wreg, status,2
  7733 ;; Tracked objects:
  7734 ;;		On entry : B1F/1
  7735 ;;		On exit  : 0/0
  7736 ;;		Unchanged: 0/0
  7737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7739 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7741 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7742 ;;Total ram usage:        1 bytes
  7743 ;; Hardware stack levels used:    1
  7744 ;; Hardware stack levels required when called:    2
  7745 ;; This function calls:
  7746 ;;		Nothing
  7747 ;; This function is called by:
  7748 ;;		_SYSTEM_Initialize
  7749 ;; This function uses a non-reentrant model
  7750 ;;
  7751                           
  7752                           
  7753                           ;psect for function _PIN_MANAGER_Initialize
  7754  035C                     _PIN_MANAGER_Initialize:	
  7755                           
  7756                           ;pin_manager.c: 52: LATA = 0x00;
  7757                           
  7758                           ;incstack = 0
  7759                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7760  035C  0022               	movlb	2	; select bank2
  7761  035D  018C               	clrf	12	;volatile
  7762                           
  7763                           ;pin_manager.c: 53: TRISA = 0x1F;
  7764  035E  301F               	movlw	31
  7765  035F  0021               	movlb	1	; select bank1
  7766  0360  008C               	movwf	12	;volatile
  7767                           
  7768                           ;pin_manager.c: 54: ANSELA = 0x03;
  7769  0361  3003               	movlw	3
  7770  0362  0023               	movlb	3	; select bank3
  7771  0363  008C               	movwf	12	;volatile
  7772                           
  7773                           ;pin_manager.c: 56: LATB = 0x20;
  7774  0364  3020               	movlw	32
  7775  0365  0022               	movlb	2	; select bank2
  7776  0366  008D               	movwf	13	;volatile
  7777                           
  7778                           ;pin_manager.c: 57: TRISB = 0xC0;
  7779  0367  30C0               	movlw	192
  7780  0368  0021               	movlb	1	; select bank1
  7781  0369  008D               	movwf	13	;volatile
  7782                           
  7783                           ;pin_manager.c: 58: ANSELB = 0x00;
  7784  036A  0023               	movlb	3	; select bank3
  7785  036B  018D               	clrf	13	;volatile
  7786                           
  7787                           ;pin_manager.c: 59: WPUB = 0x00;
  7788  036C  0024               	movlb	4	; select bank4
  7789  036D  018D               	clrf	13	;volatile
  7790                           
  7791                           ;pin_manager.c: 61: LATC = 0x00;
  7792  036E  0022               	movlb	2	; select bank2
  7793  036F  018E               	clrf	14	;volatile
  7794                           
  7795                           ;pin_manager.c: 62: TRISC = 0xFD;
  7796  0370  30FD               	movlw	253
  7797  0371  0021               	movlb	1	; select bank1
  7798  0372  008E               	movwf	14	;volatile
  7799                           
  7800                           ;pin_manager.c: 63: ANSELC = 0x00;
  7801  0373  0023               	movlb	3	; select bank3
  7802  0374  018E               	clrf	14	;volatile
  7803                           
  7804                           ;pin_manager.c: 64: WPUC = 0x00;
  7805  0375  0024               	movlb	4	; select bank4
  7806  0376  018E               	clrf	14	;volatile
  7807                           
  7808                           ;pin_manager.c: 66: OPTION_REGbits.nWPUEN = 0x01;
  7809  0377  0021               	movlb	1	; select bank1
  7810  0378  1795               	bsf	21,7	;volatile
  7811                           
  7812                           ;pin_manager.c: 69: IOCBP6 = 1;
  7813  0379  0027               	movlb	7	; select bank7
  7814  037A  1714               	bsf	20,6	;volatile
  7815                           
  7816                           ;pin_manager.c: 70: IOCBP7 = 1;
  7817  037B  1794               	bsf	20,7	;volatile
  7818                           
  7819                           ;pin_manager.c: 71: IOCCP3 = 1;
  7820  037C  1597               	bsf	23,3	;volatile
  7821                           
  7822                           ;pin_manager.c: 72: IOCCP4 = 1;
  7823  037D  1617               	bsf	23,4	;volatile
  7824                           
  7825                           ;pin_manager.c: 73: IOCCP5 = 1;
  7826  037E  1697               	bsf	23,5	;volatile
  7827                           
  7828                           ;pin_manager.c: 74: IOCCP6 = 1;
  7829  037F  1717               	bsf	23,6	;volatile
  7830                           
  7831                           ;pin_manager.c: 75: IOCCP7 = 1;
  7832  0380  1797               	bsf	23,7	;volatile
  7833                           
  7834                           ;pin_manager.c: 78: INTCONbits.IOCIE = 1;
  7835  0381  158B               	bsf	11,3	;volatile
  7836                           
  7837                           ;pin_manager.c: 80: bool state = GIE;
  7838  0382  3000               	movlw	0
  7839  0383  1B8B               	btfsc	11,7	;volatile
  7840  0384  3001               	movlw	1
  7841  0385  00F0               	movwf	PIN_MANAGER_Initialize@state
  7842                           
  7843                           ;pin_manager.c: 81: GIE = 0;
  7844  0386  138B               	bcf	11,7	;volatile
  7845                           
  7846                           ;pin_manager.c: 82: PPSLOCK = 0x55;
  7847  0387  3055               	movlw	85
  7848  0388  003C               	movlb	28	; select bank28
  7849  0389  008F               	movwf	15	;volatile
  7850                           
  7851                           ;pin_manager.c: 83: PPSLOCK = 0xAA;
  7852  038A  30AA               	movlw	170
  7853  038B  008F               	movwf	15	;volatile
  7854                           
  7855                           ;pin_manager.c: 84: PPSLOCKbits.PPSLOCKED = 0x00;
  7856  038C  100F               	bcf	15,0	;volatile
  7857                           
  7858                           ;pin_manager.c: 86: RXPPS = 0x02;
  7859  038D  3002               	movlw	2
  7860  038E  00A4               	movwf	36	;volatile
  7861                           
  7862                           ;pin_manager.c: 87: RA5PPS = 0x07;
  7863  038F  3007               	movlw	7
  7864  0390  003D               	movlb	29	; select bank29
  7865  0391  0095               	movwf	21	;volatile
  7866                           
  7867                           ;pin_manager.c: 88: RB4PPS = 0x11;
  7868  0392  3011               	movlw	17
  7869  0393  009C               	movwf	28	;volatile
  7870                           
  7871                           ;pin_manager.c: 89: RC0PPS = 0x12;
  7872  0394  3012               	movlw	18
  7873  0395  00A0               	movwf	32	;volatile
  7874                           
  7875                           ;pin_manager.c: 90: SSPCLKPPS = 0x11;
  7876  0396  3011               	movlw	17
  7877  0397  003C               	movlb	28	; select bank28
  7878  0398  00A0               	movwf	32	;volatile
  7879                           
  7880                           ;pin_manager.c: 91: RC1PPS = 0x10;
  7881  0399  3010               	movlw	16
  7882  039A  003D               	movlb	29	; select bank29
  7883  039B  00A1               	movwf	33	;volatile
  7884                           
  7885                           ;pin_manager.c: 92: SSPDATPPS = 0x12;
  7886  039C  3012               	movlw	18
  7887  039D  003C               	movlb	28	; select bank28
  7888  039E  00A1               	movwf	33	;volatile
  7889                           
  7890                           ;pin_manager.c: 93: PPSLOCK = 0x55;
  7891  039F  3055               	movlw	85
  7892  03A0  008F               	movwf	15	;volatile
  7893                           
  7894                           ;pin_manager.c: 94: PPSLOCK = 0xAA;
  7895  03A1  30AA               	movlw	170
  7896  03A2  008F               	movwf	15	;volatile
  7897                           
  7898                           ;pin_manager.c: 95: PPSLOCKbits.PPSLOCKED = 0x01;
  7899  03A3  140F               	bsf	15,0	;volatile
  7900                           
  7901                           ;pin_manager.c: 96: GIE = state;
  7902  03A4  1C70               	btfss	PIN_MANAGER_Initialize@state,0
  7903  03A5  2BA8               	goto	u180
  7904  03A6  178B               	bsf	11,7	;volatile
  7905  03A7  0008               	return
  7906  03A8                     u180:	
  7907  03A8  138B               	bcf	11,7	;volatile
  7908  03A9  0008               	return
  7909  03AA                     __end_of_PIN_MANAGER_Initialize:	
  7910  03AA                     __ptext4:	
  7911 ;; *************** function _SPI_Initialize *****************
  7912 ;; Defined at:
  7913 ;;		line 64 in file "mcc_generated_files/spi.c"
  7914 ;; Parameters:    Size  Location     Type
  7915 ;;		None
  7916 ;; Auto vars:     Size  Location     Type
  7917 ;;		None
  7918 ;; Return value:  Size  Location     Type
  7919 ;;		None               void
  7920 ;; Registers used:
  7921 ;;		wreg, status,2
  7922 ;; Tracked objects:
  7923 ;;		On entry : 1F/1
  7924 ;;		On exit  : 1F/4
  7925 ;;		Unchanged: 0/0
  7926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7931 ;;Total ram usage:        0 bytes
  7932 ;; Hardware stack levels used:    1
  7933 ;; Hardware stack levels required when called:    2
  7934 ;; This function calls:
  7935 ;;		Nothing
  7936 ;; This function is called by:
  7937 ;;		_SYSTEM_Initialize
  7938 ;; This function uses a non-reentrant model
  7939 ;;
  7940                           
  7941                           
  7942                           ;psect for function _SPI_Initialize
  7943  03AA                     _SPI_Initialize:	
  7944                           
  7945                           ;spi.c: 68: SSP1STAT = 0x00;
  7946                           
  7947                           ;incstack = 0
  7948                           ; Regs used in _SPI_Initialize: [wreg+status,2]
  7949  03AA  0024               	movlb	4	; select bank4
  7950  03AB  0194               	clrf	20	;volatile
  7951                           
  7952                           ;spi.c: 71: SSP1CON1 = 0x33;
  7953  03AC  3033               	movlw	51
  7954  03AD  0095               	movwf	21	;volatile
  7955                           
  7956                           ;spi.c: 74: SSP1ADD = 0x00;
  7957  03AE  0192               	clrf	18	;volatile
  7958  03AF  0008               	return
  7959  03B0                     __end_of_SPI_Initialize:	
  7960  03B0                     __ptext2:	
  7961 ;; *************** function _TMR2_Initialize *****************
  7962 ;; Defined at:
  7963 ;;		line 58 in file "mcc_generated_files/tmr2.c"
  7964 ;; Parameters:    Size  Location     Type
  7965 ;;		None
  7966 ;; Auto vars:     Size  Location     Type
  7967 ;;		None
  7968 ;; Return value:  Size  Location     Type
  7969 ;;		None               void
  7970 ;; Registers used:
  7971 ;;		wreg, status,2, status,0, pclath, cstack
  7972 ;; Tracked objects:
  7973 ;;		On entry : 1F/4
  7974 ;;		On exit  : 1F/0
  7975 ;;		Unchanged: 0/0
  7976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7981 ;;Total ram usage:        0 bytes
  7982 ;; Hardware stack levels used:    1
  7983 ;; Hardware stack levels required when called:    3
  7984 ;; This function calls:
  7985 ;;		_TMR2_Start
  7986 ;; This function is called by:
  7987 ;;		_SYSTEM_Initialize
  7988 ;; This function uses a non-reentrant model
  7989 ;;
  7990                           
  7991                           
  7992                           ;psect for function _TMR2_Initialize
  7993  03B0                     _TMR2_Initialize:	
  7994                           
  7995                           ;tmr2.c: 62: T2CON = 0x00;
  7996                           
  7997                           ;incstack = 0
  7998                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7999  03B0  0020               	movlb	0	; select bank0
  8000  03B1  019C               	clrf	28	;volatile
  8001                           
  8002                           ;tmr2.c: 65: T2CLKCON = 0x00;
  8003  03B2  019E               	clrf	30	;volatile
  8004                           
  8005                           ;tmr2.c: 68: T2HLT = 0xA0;
  8006  03B3  30A0               	movlw	160
  8007  03B4  009D               	movwf	29	;volatile
  8008                           
  8009                           ;tmr2.c: 71: T2RST = 0x00;
  8010  03B5  019F               	clrf	31	;volatile
  8011                           
  8012                           ;tmr2.c: 74: T2PR = 0x04;
  8013  03B6  3004               	movlw	4
  8014  03B7  009B               	movwf	27	;volatile
  8015                           
  8016                           ;tmr2.c: 77: T2TMR = 0x00;
  8017  03B8  019A               	clrf	26	;volatile
  8018                           
  8019                           ;tmr2.c: 80: PIR1bits.TMR2IF = 0;
  8020  03B9  1090               	bcf	16,1	;volatile
  8021                           
  8022                           ;tmr2.c: 83: TMR2_Start();
  8023  03BA  2BDB               	ljmp	l1016
  8024  03BB                     __end_of_TMR2_Initialize:	
  8025  03BB                     __ptext9:	
  8026 ;; *************** function _CLC4_Initialize *****************
  8027 ;; Defined at:
  8028 ;;		line 58 in file "mcc_generated_files/clc4.c"
  8029 ;; Parameters:    Size  Location     Type
  8030 ;;		None
  8031 ;; Auto vars:     Size  Location     Type
  8032 ;;		None
  8033 ;; Return value:  Size  Location     Type
  8034 ;;		None               void
  8035 ;; Registers used:
  8036 ;;		wreg, status,2
  8037 ;; Tracked objects:
  8038 ;;		On entry : 1F/1
  8039 ;;		On exit  : 1F/1E
  8040 ;;		Unchanged: 0/0
  8041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8046 ;;Total ram usage:        0 bytes
  8047 ;; Hardware stack levels used:    1
  8048 ;; Hardware stack levels required when called:    2
  8049 ;; This function calls:
  8050 ;;		Nothing
  8051 ;; This function is called by:
  8052 ;;		_SYSTEM_Initialize
  8053 ;; This function uses a non-reentrant model
  8054 ;;
  8055                           
  8056                           
  8057                           ;psect for function _CLC4_Initialize
  8058  03BB                     _CLC4_Initialize:	
  8059                           
  8060                           ;clc4.c: 62: CLC4POL = 0x0A;
  8061                           
  8062                           ;incstack = 0
  8063                           ; Regs used in _CLC4_Initialize: [wreg+status,2]
  8064  03BB  300A               	movlw	10
  8065  03BC  003E               	movlb	30	; select bank30
  8066  03BD  00AF               	movwf	47	;volatile
  8067                           
  8068                           ;clc4.c: 65: CLC4SEL0 = 0x21;
  8069  03BE  3021               	movlw	33
  8070  03BF  00B0               	movwf	48	;volatile
  8071                           
  8072                           ;clc4.c: 68: CLC4SEL1 = 0x0E;
  8073  03C0  300E               	movlw	14
  8074  03C1  00B1               	movwf	49	;volatile
  8075                           
  8076                           ;clc4.c: 71: CLC4SEL2 = 0x28;
  8077  03C2  3028               	movlw	40
  8078  03C3  00B2               	movwf	50	;volatile
  8079                           
  8080                           ;clc4.c: 74: CLC4SEL3 = 0x27;
  8081  03C4  3027               	movlw	39
  8082  03C5  00B3               	movwf	51	;volatile
  8083                           
  8084                           ;clc4.c: 77: CLC4GLS0 = 0x02;
  8085  03C6  3002               	movlw	2
  8086  03C7  00B4               	movwf	52	;volatile
  8087                           
  8088                           ;clc4.c: 80: CLC4GLS1 = 0xA4;
  8089  03C8  30A4               	movlw	164
  8090  03C9  00B5               	movwf	53	;volatile
  8091                           
  8092                           ;clc4.c: 83: CLC4GLS2 = 0x00;
  8093  03CA  01B6               	clrf	54	;volatile
  8094                           
  8095                           ;clc4.c: 86: CLC4GLS3 = 0x90;
  8096  03CB  3090               	movlw	144
  8097  03CC  00B7               	movwf	55	;volatile
  8098                           
  8099                           ;clc4.c: 89: CLC4CON = 0x85;
  8100  03CD  3085               	movlw	133
  8101  03CE  00AE               	movwf	46	;volatile
  8102  03CF  0008               	return
  8103  03D0                     __end_of_CLC4_Initialize:	
  8104  03D0                     __ptext5:	
  8105 ;; *************** function _PWM3_Initialize *****************
  8106 ;; Defined at:
  8107 ;;		line 58 in file "mcc_generated_files/pwm3.c"
  8108 ;; Parameters:    Size  Location     Type
  8109 ;;		None
  8110 ;; Auto vars:     Size  Location     Type
  8111 ;;		None
  8112 ;; Return value:  Size  Location     Type
  8113 ;;		None               void
  8114 ;; Registers used:
  8115 ;;		wreg, status,2, status,0
  8116 ;; Tracked objects:
  8117 ;;		On entry : 1F/1E
  8118 ;;		On exit  : 1F/5
  8119 ;;		Unchanged: 0/0
  8120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8125 ;;Total ram usage:        0 bytes
  8126 ;; Hardware stack levels used:    1
  8127 ;; Hardware stack levels required when called:    2
  8128 ;; This function calls:
  8129 ;;		Nothing
  8130 ;; This function is called by:
  8131 ;;		_SYSTEM_Initialize
  8132 ;; This function uses a non-reentrant model
  8133 ;;
  8134                           
  8135                           
  8136                           ;psect for function _PWM3_Initialize
  8137  03D0                     _PWM3_Initialize:	
  8138  03D0                     l1232:	
  8139                           ;incstack = 0
  8140                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
  8141                           
  8142                           
  8143                           ;pwm3.c: 61: PWM3CON = 0x80;
  8144  03D0  3080               	movlw	128
  8145  03D1  002C               	movlb	12	; select bank12
  8146  03D2  0099               	movwf	25	;volatile
  8147                           
  8148                           ;pwm3.c: 64: PWM3DCH = 0x02;
  8149  03D3  3002               	movlw	2
  8150  03D4  0098               	movwf	24	;volatile
  8151                           
  8152                           ;pwm3.c: 67: PWM3DCL = 0x40;
  8153  03D5  3040               	movlw	64
  8154  03D6  0097               	movwf	23	;volatile
  8155                           
  8156                           ;pwm3.c: 71: CCPTMRSbits.P3TSEL = 0x0;
  8157  03D7  30CF               	movlw	-49
  8158  03D8  0025               	movlb	5	; select bank5
  8159  03D9  059E               	andwf	30,f	;volatile
  8160  03DA  0008               	return
  8161  03DB                     __end_of_PWM3_Initialize:	
  8162  03DB                     __ptext3:	
  8163 ;; *************** function _TMR2_Start *****************
  8164 ;; Defined at:
  8165 ;;		line 96 in file "mcc_generated_files/tmr2.c"
  8166 ;; Parameters:    Size  Location     Type
  8167 ;;		None
  8168 ;; Auto vars:     Size  Location     Type
  8169 ;;		None
  8170 ;; Return value:  Size  Location     Type
  8171 ;;		None               void
  8172 ;; Registers used:
  8173 ;;		None
  8174 ;; Tracked objects:
  8175 ;;		On entry : 1F/0
  8176 ;;		On exit  : 1F/0
  8177 ;;		Unchanged: 0/0
  8178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8183 ;;Total ram usage:        0 bytes
  8184 ;; Hardware stack levels used:    1
  8185 ;; Hardware stack levels required when called:    2
  8186 ;; This function calls:
  8187 ;;		Nothing
  8188 ;; This function is called by:
  8189 ;;		_TMR2_Initialize
  8190 ;; This function uses a non-reentrant model
  8191 ;;
  8192                           
  8193                           
  8194                           ;psect for function _TMR2_Start
  8195  03DB                     _TMR2_Start:	
  8196  03DB                     l1016:	
  8197                           ;incstack = 0
  8198                           ; Regs used in _TMR2_Start: []
  8199                           
  8200                           
  8201                           ;tmr2.c: 98: T2CONbits.TMR2ON = 1;
  8202  03DB  179C               	bsf	28,7	;volatile
  8203  03DC  0008               	return
  8204  03DD                     __end_of_TMR2_Start:	
  8205                           
  8206                           	psect	bssBANK0
  8207  0020                     __pbssBANK0:	
  8208  0020                     _eusartRxBuffer:	
  8209  0020                     	ds	16
  8210  0030                     _eusartTxBuffer:	
  8211  0030                     	ds	8
  8212  0038                     _LED_SetColor:	
  8213  0038                     	ds	3
  8214  003B                     _LED_currentColor:	
  8215  003B                     	ds	3
  8216  003E                     COMM_Task@UART_ReceiveState:	
  8217  003E                     	ds	1
  8218  003F                     COMM_Task@receiveCounter:	
  8219  003F                     	ds	1
  8220  0040                     LED_Task@ledOFF:	
  8221  0040                     	ds	1
  8222  0041                     _LED_mode:	
  8223  0041                     	ds	1
  8224  0042                     _eusartRxCount:	
  8225  0042                     	ds	1
  8226  0043                     _eusartRxHead:	
  8227  0043                     	ds	1
  8228  0044                     _eusartRxTail:	
  8229  0044                     	ds	1
  8230  0045                     _eusartTxBufferRemaining:	
  8231  0045                     	ds	1
  8232  0046                     _eusartTxHead:	
  8233  0046                     	ds	1
  8234  0047                     _eusartTxTail:	
  8235  0047                     	ds	1
  8236  0048                     _inputCommand:	
  8237  0048                     	ds	16
  8238                           
  8239                           	psect	clrtext
  8240  0504                     clear_ram0:	
  8241                           ;	Called with FSR0 containing the base address, and
  8242                           ;	WREG with the size to clear
  8243                           
  8244  0504  0064               	clrwdt	;clear the watchdog before getting into this loop
  8245  0505                     clrloop0:	
  8246  0505  0180               	clrf	0	;clear RAM location pointed to by FSR
  8247  0506  3101               	addfsr 0,1
  8248  0507  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  8249  0508  2D05               	goto	clrloop0	;have we reached the end yet?
  8250  0509  3400               	retlw	0	;all done for this memory range, return
  8251                           
  8252                           	psect	cstackCOMMON
  8253  0070                     __pcstackCOMMON:	
  8254  0070                     ?_ledSendByte:	
  8255  0070                     ??_SPI_Exchange8bit:	
  8256                           ; 0 bytes @ 0x0
  8257                           
  8258  0070                     ?_SYSTEM_Initialize:	
  8259                           ; 0 bytes @ 0x0
  8260                           
  8261  0070                     ?_COMM_Task:	
  8262                           ; 0 bytes @ 0x0
  8263                           
  8264  0070                     ?_EUSART_Write:	
  8265                           ; 0 bytes @ 0x0
  8266                           
  8267  0070                     ??_EUSART_Write:	
  8268                           ; 0 bytes @ 0x0
  8269                           
  8270  0070                     ??_EUSART_Read:	
  8271                           ; 0 bytes @ 0x0
  8272                           
  8273  0070                     ?_PIN_MANAGER_IOC:	
  8274                           ; 0 bytes @ 0x0
  8275                           
  8276  0070                     ??_PIN_MANAGER_IOC:	
  8277                           ; 0 bytes @ 0x0
  8278                           
  8279  0070                     ?_OSCILLATOR_Initialize:	
  8280                           ; 0 bytes @ 0x0
  8281                           
  8282  0070                     ??_OSCILLATOR_Initialize:	
  8283                           ; 0 bytes @ 0x0
  8284                           
  8285  0070                     ?_PIN_MANAGER_Initialize:	
  8286                           ; 0 bytes @ 0x0
  8287                           
  8288  0070                     ??_PIN_MANAGER_Initialize:	
  8289                           ; 0 bytes @ 0x0
  8290                           
  8291  0070                     ?_SPI_Initialize:	
  8292                           ; 0 bytes @ 0x0
  8293                           
  8294  0070                     ??_SPI_Initialize:	
  8295                           ; 0 bytes @ 0x0
  8296                           
  8297  0070                     ?_TMR2_Initialize:	
  8298                           ; 0 bytes @ 0x0
  8299                           
  8300  0070                     ??_TMR2_Initialize:	
  8301                           ; 0 bytes @ 0x0
  8302                           
  8303  0070                     ?_PWM3_Initialize:	
  8304                           ; 0 bytes @ 0x0
  8305                           
  8306  0070                     ??_PWM3_Initialize:	
  8307                           ; 0 bytes @ 0x0
  8308                           
  8309  0070                     ?_TMR2_Start:	
  8310                           ; 0 bytes @ 0x0
  8311                           
  8312  0070                     ??_TMR2_Start:	
  8313                           ; 0 bytes @ 0x0
  8314                           
  8315  0070                     ?_LED_Test:	
  8316                           ; 0 bytes @ 0x0
  8317                           
  8318  0070                     ?_LED_Task:	
  8319                           ; 0 bytes @ 0x0
  8320                           
  8321  0070                     ?_main:	
  8322                           ; 0 bytes @ 0x0
  8323                           
  8324  0070                     ??_UART_HexSrtingToBinary:	
  8325                           ; 0 bytes @ 0x0
  8326                           
  8327  0070                     ?_ADC1_Initialize:	
  8328                           ; 0 bytes @ 0x0
  8329                           
  8330  0070                     ??_ADC1_Initialize:	
  8331                           ; 0 bytes @ 0x0
  8332                           
  8333  0070                     ?_CLC4_Initialize:	
  8334                           ; 0 bytes @ 0x0
  8335                           
  8336  0070                     ??_CLC4_Initialize:	
  8337                           ; 0 bytes @ 0x0
  8338                           
  8339  0070                     ?_EUSART_Initialize:	
  8340                           ; 0 bytes @ 0x0
  8341                           
  8342  0070                     ??_EUSART_Initialize:	
  8343                           ; 0 bytes @ 0x0
  8344                           
  8345  0070                     ?_EUSART_Transmit_ISR:	
  8346                           ; 0 bytes @ 0x0
  8347                           
  8348  0070                     ??_EUSART_Transmit_ISR:	
  8349                           ; 0 bytes @ 0x0
  8350                           
  8351  0070                     ?_EUSART_Receive_ISR:	
  8352                           ; 0 bytes @ 0x0
  8353                           
  8354  0070                     ??_EUSART_Receive_ISR:	
  8355                           ; 0 bytes @ 0x0
  8356                           
  8357  0070                     ?_INTERRUPT_InterruptManager:	
  8358                           ; 0 bytes @ 0x0
  8359                           
  8360  0070                     ??_INTERRUPT_InterruptManager:	
  8361                           ; 0 bytes @ 0x0
  8362                           
  8363  0070                     ?_SPI_Exchange8bit:	
  8364                           ; 0 bytes @ 0x0
  8365                           
  8366  0070                     ?_EUSART_Read:	
  8367                           ; 1 bytes @ 0x0
  8368                           
  8369  0070                     ?_memset:	
  8370                           ; 1 bytes @ 0x0
  8371                           
  8372  0070                     ?_UART_HexSrtingToBinary:	
  8373                           ; 1 bytes @ 0x0
  8374                           
  8375  0070                     ?_strlen:	
  8376                           ; 1 bytes @ 0x0
  8377                           
  8378  0070                     ?_strcmp:	
  8379                           ; 2 bytes @ 0x0
  8380                           
  8381  0070                     EUSART_Read@readValue:	
  8382                           ; 2 bytes @ 0x0
  8383                           
  8384  0070                     EUSART_Write@txData:	
  8385                           ; 1 bytes @ 0x0
  8386                           
  8387  0070                     PIN_MANAGER_Initialize@state:	
  8388                           ; 1 bytes @ 0x0
  8389                           
  8390  0070                     SPI_Exchange8bit@data:	
  8391                           ; 1 bytes @ 0x0
  8392                           
  8393  0070                     memset@c:	
  8394                           ; 1 bytes @ 0x0
  8395                           
  8396  0070                     strcmp@s1:	
  8397                           ; 2 bytes @ 0x0
  8398                           
  8399  0070                     strlen@s:	
  8400                           ; 2 bytes @ 0x0
  8401                           
  8402                           
  8403                           ; 2 bytes @ 0x0
  8404  0070                     	ds	1
  8405  0071                     ??_ledSendByte:	
  8406  0071                     ??_SYSTEM_Initialize:	
  8407                           ; 0 bytes @ 0x1
  8408                           
  8409  0071                     ledSendByte@data:	
  8410                           ; 0 bytes @ 0x1
  8411                           
  8412                           
  8413                           ; 1 bytes @ 0x1
  8414  0071                     	ds	1
  8415  0072                     ?_ledSetColor:	
  8416  0072                     ??_strlen:	
  8417                           ; 0 bytes @ 0x2
  8418                           
  8419  0072                     ??_LED_Test:	
  8420                           ; 0 bytes @ 0x2
  8421                           
  8422  0072                     UART_HexSrtingToBinary@i:	
  8423                           ; 0 bytes @ 0x2
  8424                           
  8425  0072                     strcmp@s2:	
  8426                           ; 1 bytes @ 0x2
  8427                           
  8428  0072                     memset@n:	
  8429                           ; 1 bytes @ 0x2
  8430                           
  8431  0072                     ledSetColor@ledColor:	
  8432                           ; 2 bytes @ 0x2
  8433                           
  8434                           
  8435                           ; 3 bytes @ 0x2
  8436  0072                     	ds	1
  8437  0073                     ??_strcmp:	
  8438  0073                     UART_HexSrtingToBinary@data:	
  8439                           ; 0 bytes @ 0x3
  8440                           
  8441  0073                     strcmp@t0:	
  8442                           ; 1 bytes @ 0x3
  8443                           
  8444  0073                     strlen@cp:	
  8445                           ; 1 bytes @ 0x3
  8446                           
  8447                           
  8448                           ; 2 bytes @ 0x3
  8449  0073                     	ds	1
  8450  0074                     ??_memset:	
  8451  0074                     memset@p1:	
  8452                           ; 0 bytes @ 0x4
  8453                           
  8454  0074                     strcmp@t2:	
  8455                           ; 1 bytes @ 0x4
  8456                           
  8457                           
  8458                           ; 1 bytes @ 0x4
  8459  0074                     	ds	1
  8460  0075                     ??_ledSetColor:	
  8461  0075                     ??_LED_Task:	
  8462                           ; 0 bytes @ 0x5
  8463                           
  8464  0075                     ?_outputString:	
  8465                           ; 0 bytes @ 0x5
  8466                           
  8467  0075                     LED_Test@i:	
  8468                           ; 0 bytes @ 0x5
  8469                           
  8470  0075                     memset@p:	
  8471                           ; 1 bytes @ 0x5
  8472                           
  8473  0075                     strcmp@t1:	
  8474                           ; 1 bytes @ 0x5
  8475                           
  8476  0075                     LED_Task@i:	
  8477                           ; 1 bytes @ 0x5
  8478                           
  8479  0075                     outputString@string:	
  8480                           ; 2 bytes @ 0x5
  8481                           
  8482                           
  8483                           ; 2 bytes @ 0x5
  8484  0075                     	ds	1
  8485  0076                     LED_Test@j:	
  8486                           
  8487                           ; 1 bytes @ 0x6
  8488  0076                     	ds	1
  8489  0077                     ??_outputString:	
  8490  0077                     LED_Task@i_80:	
  8491                           ; 0 bytes @ 0x7
  8492                           
  8493                           
  8494                           ; 2 bytes @ 0x7
  8495  0077                     	ds	2
  8496  0079                     outputString@i:	
  8497                           
  8498                           ; 1 bytes @ 0x9
  8499  0079                     	ds	1
  8500  007A                     ??_COMM_Task:	
  8501  007A                     COMM_Task@r:	
  8502                           ; 0 bytes @ 0xA
  8503                           
  8504                           
  8505                           ; 1 bytes @ 0xA
  8506  007A                     	ds	1
  8507  007B                     COMM_Task@g:	
  8508                           
  8509                           ; 1 bytes @ 0xB
  8510  007B                     	ds	1
  8511  007C                     COMM_Task@b:	
  8512                           
  8513                           ; 1 bytes @ 0xC
  8514  007C                     	ds	1
  8515  007D                     COMM_Task@receiveData:	
  8516                           
  8517                           ; 1 bytes @ 0xD
  8518  007D                     	ds	1
  8519                           
  8520                           	psect	cstackBANK0
  8521  0058                     __pcstackBANK0:	
  8522  0058                     ??_main:	
  8523                           
  8524                           ; 0 bytes @ 0x0
  8525  0058                     	ds	3
  8526                           
  8527                           	psect	swtext1
  8528  03DD                     __pswtext1:	
  8529  03DD                     S2178:	
  8530  03DD  3180  2896         	ljmp	l1838
  8531  03DF  3180  28C5         	ljmp	l1854
  8532  03E1  3180  28FD         	ljmp	l1874
  8533  03E3  3180  28FD         	ljmp	l1874
  8534  03E5  3180  28FD         	ljmp	l1874
  8535                           
  8536                           	psect	text13
  8537  0000                     __ptext13:	
  8538 ;; *************** function _ledSetColor *****************
  8539 ;; Defined at:
  8540 ;;		line 88 in file "../src/LED.c"
  8541 ;; Parameters:    Size  Location     Type
  8542 ;;  ledColor        3    2[COMMON] struct .
  8543 ;; Auto vars:     Size  Location     Type
  8544 ;;		None
  8545 ;; Return value:  Size  Location     Type
  8546 ;;		None               void
  8547 ;; Registers used:
  8548 ;;		wreg, status,2, status,0, pclath, cstack
  8549 ;; Tracked objects:
  8550 ;;		On entry : 0/0
  8551 ;;		On exit  : 1F/4
  8552 ;;		Unchanged: 0/0
  8553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8554 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8557 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8558 ;;Total ram usage:        3 bytes
  8559 ;; Hardware stack levels used:    1
  8560 ;; Hardware stack levels required when called:    4
  8561 ;; This function calls:
  8562 ;;		_ledSendByte
  8563 ;; This function is called by:
  8564 ;;		_LED_Task
  8565 ;; This function uses a non-reentrant model
  8566 ;;
  8567                           
  8568  0000                     _ledSetColor:	
  8569                           ;psect for function _ledSetColor
  8570                           
  8571  0000                     __end_of_ledSetColor:	
  8572                           ;LED.c: 147: SPI_Exchange8bit(data);
  8573                           
  8574                           ;incstack = 0
  8575                           ; Regs used in _ledSendByte: [wreg+status,2+status,0+pclath+cstack]
  8576                           ;ledSendByte@data stored from wreg
  8577                           
  8578                           ;psect for function _ledSendByte
  8579                           
  8580                           ;LED.c: 92: ledSendByte(ledColor.Blue);
  8581                           
  8582                           ;LED.c: 147: SPI_Exchange8bit(data);
  8583                           
  8584                           ;incstack = 0
  8585                           ; Regs used in _ledSendByte: [wreg+status,2+status,0+pclath+cstack]
  8586                           ;ledSendByte@data stored from wreg
  8587                           
  8588                           ;psect for function _ledSendByte
  8589                           
  8590                           ;LED.c: 91: ledSendByte(ledColor.Red);
  8591                           
  8592                           ;LED.c: 147: SPI_Exchange8bit(data);
  8593                           
  8594                           ;incstack = 0
  8595                           ; Regs used in _ledSendByte: [wreg+status,2+status,0+pclath+cstack]
  8596                           ;ledSendByte@data stored from wreg
  8597                           
  8598                           ;psect for function _ledSendByte
  8599                           
  8600                           ;LED.c: 90: ledSendByte(ledColor.Green);
  8601                           
  8602                           ;incstack = 0
  8603                           ; Regs used in _ledSetColor: [wreg+status,2+status,0+pclath+cstack]
  8604                           
  8605                           
  8606                           	psect	text14
  8607  0000                     __ptext14:	
  8608 ;; *************** function _ledSendByte *****************
  8609 ;; Defined at:
  8610 ;;		line 109 in file "../src/LED.c"
  8611 ;; Parameters:    Size  Location     Type
  8612 ;;  data            1    wreg     unsigned char 
  8613 ;; Auto vars:     Size  Location     Type
  8614 ;;  data            1    1[COMMON] unsigned char 
  8615 ;; Return value:  Size  Location     Type
  8616 ;;		None               void
  8617 ;; Registers used:
  8618 ;;		wreg, status,2, status,0, pclath, cstack
  8619 ;; Tracked objects:
  8620 ;;		On entry : 0/5
  8621 ;;		On exit  : 1F/4
  8622 ;;		Unchanged: 0/0
  8623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8625 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8627 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8628 ;;Total ram usage:        1 bytes
  8629 ;; Hardware stack levels used:    1
  8630 ;; Hardware stack levels required when called:    3
  8631 ;; This function calls:
  8632 ;;		_SPI_Exchange8bit
  8633 ;; This function is called by:
  8634 ;;		_LED_Test
  8635 ;;		_ledSetColor
  8636 ;; This function uses a non-reentrant model
  8637 ;;
  8638                           
  8639  0000                     _ledSendByte:	
  8640                           ;psect for function _ledSendByte
  8641                           
  8642  0000                     __end_of_ledSendByte:	
  8643                           ;LED.c: 147: SPI_Exchange8bit(data);
  8644                           
  8645                           ;incstack = 0
  8646                           ; Regs used in _ledSendByte: [wreg+status,2+status,0+pclath+cstack]
  8647                           ;ledSendByte@data stored from wreg
  8648                           
  8649                           
  8650                           	psect	swtext2
  8651  03E7                     __pswtext2:	
  8652  03E7                     S2180:	
  8653  03E7  3181  296F         	ljmp	l1932
  8654  03E9  3181  2973         	ljmp	l1934
  8655  03EB  3181  2977         	ljmp	l1936
  8656  03ED  3181  297B         	ljmp	l1938
  8657  03EF  3181  297F         	ljmp	l1940
  8658                           
  8659                           	psect	swtext3
  8660  03F1                     __pswtext3:	
  8661  03F1                     S2182:	
  8662  03F1  3181  2927         	ljmp	l1896
  8663  03F3  3181  29DC         	ljmp	l1952
  8664  03F5  3181  2957         	ljmp	l1924
  8665  03F7  3181  29A5         	ljmp	l1992
  8666  03F9  3182  2A27         	ljmp	l2020
  8667                           
  8668                           	psect	intentry
  8669  0004                     __pintentry:	
  8670 ;; *************** function _INTERRUPT_InterruptManager *****************
  8671 ;; Defined at:
  8672 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8673 ;; Parameters:    Size  Location     Type
  8674 ;;		None
  8675 ;; Auto vars:     Size  Location     Type
  8676 ;;		None
  8677 ;; Return value:  Size  Location     Type
  8678 ;;		None               void
  8679 ;; Registers used:
  8680 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8681 ;; Tracked objects:
  8682 ;;		On entry : 0/0
  8683 ;;		On exit  : 18/0
  8684 ;;		Unchanged: 0/0
  8685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8690 ;;Total ram usage:        0 bytes
  8691 ;; Hardware stack levels used:    1
  8692 ;; Hardware stack levels required when called:    1
  8693 ;; This function calls:
  8694 ;;		_EUSART_Receive_ISR
  8695 ;;		_EUSART_Transmit_ISR
  8696 ;;		_PIN_MANAGER_IOC
  8697 ;; This function is called by:
  8698 ;;		Interrupt level 1
  8699 ;; This function uses a non-reentrant model
  8700 ;;
  8701                           
  8702  0004                     _INTERRUPT_InterruptManager:	
  8703                           
  8704                           ;incstack = 0
  8705                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  8706  0004  3180               	pagesel	$
  8707                           
  8708                           ;interrupt_manager.c: 54: if (PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1) {
  8709  0005  0021               	movlb	1	; select bank1
  8710  0006  1E90               	btfss	16,5	;volatile
  8711  0007  280E               	goto	i1l322
  8712  0008  0020               	movlb	0	; select bank0
  8713  0009  1E90               	btfss	16,5	;volatile
  8714  000A  280E               	goto	i1l322
  8715                           
  8716                           ;interrupt_manager.c: 55: EUSART_Receive_ISR();
  8717  000B  3184  24EF         	fcall	_EUSART_Receive_ISR
  8718                           
  8719                           ;interrupt_manager.c: 56: } else if (PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1) {
  8720  000D  0009               	retfie
  8721  000E                     i1l322:	
  8722  000E  0021               	movlb	1	; select bank1
  8723  000F  1E10               	btfss	16,4	;volatile
  8724  0010  2817               	goto	i1l324
  8725  0011  0020               	movlb	0	; select bank0
  8726  0012  1E10               	btfss	16,4	;volatile
  8727  0013  2817               	goto	i1l324
  8728                           
  8729                           ;interrupt_manager.c: 57: EUSART_Transmit_ISR();
  8730  0014  3184  24D9         	fcall	_EUSART_Transmit_ISR
  8731                           
  8732                           ;interrupt_manager.c: 58: } else if (INTCONbits.IOCIE == 1 && INTCONbits.IOCIF == 1) {
  8733  0016  0009               	retfie
  8734  0017                     i1l324:	
  8735  0017  198B               	btfsc	11,3	;volatile
  8736  0018  1C0B               	btfss	11,0	;volatile
  8737  0019  0009               	retfie
  8738                           
  8739                           ;interrupt_manager.c: 59: PIN_MANAGER_IOC();
  8740  001A  3184  24B5         	fcall	_PIN_MANAGER_IOC
  8741                           
  8742                           ;interrupt_manager.c: 62: INTCONbits.IOCIF = 0;
  8743  001C  100B               	bcf	11,0	;volatile
  8744  001D  0009               	retfie
  8745  001E                     __end_of_INTERRUPT_InterruptManager:	
  8746                           
  8747                           	psect	text25
  8748  04B5                     __ptext25:	
  8749 ;; *************** function _PIN_MANAGER_IOC *****************
  8750 ;; Defined at:
  8751 ;;		line 99 in file "mcc_generated_files/pin_manager.c"
  8752 ;; Parameters:    Size  Location     Type
  8753 ;;		None
  8754 ;; Auto vars:     Size  Location     Type
  8755 ;;		None
  8756 ;; Return value:  Size  Location     Type
  8757 ;;		None               void
  8758 ;; Registers used:
  8759 ;;		None
  8760 ;; Tracked objects:
  8761 ;;		On entry : 1E/1
  8762 ;;		On exit  : 1F/7
  8763 ;;		Unchanged: 0/0
  8764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8769 ;;Total ram usage:        0 bytes
  8770 ;; Hardware stack levels used:    1
  8771 ;; This function calls:
  8772 ;;		Nothing
  8773 ;; This function is called by:
  8774 ;;		_INTERRUPT_InterruptManager
  8775 ;; This function uses a non-reentrant model
  8776 ;;
  8777                           
  8778                           
  8779                           ;psect for function _PIN_MANAGER_IOC
  8780  04B5                     _PIN_MANAGER_IOC:	
  8781                           
  8782                           ;pin_manager.c: 100: if ((IOCBP6 == 1) && (IOCBF6 == 1)) {
  8783                           
  8784                           ;incstack = 0
  8785                           ; Regs used in _PIN_MANAGER_IOC: []
  8786  04B5  0027               	movlb	7	; select bank7
  8787  04B6  1B14               	btfsc	20,6	;volatile
  8788  04B7  1F16               	btfss	22,6	;volatile
  8789  04B8  2CBB               	goto	i1l441
  8790                           
  8791                           ;pin_manager.c: 104: IOCBF6 = 0;
  8792  04B9  1316               	bcf	22,6	;volatile
  8793                           
  8794                           ;pin_manager.c: 105: } else if ((IOCBP7 == 1) && (IOCBF7 == 1)) {
  8795  04BA  0008               	return
  8796  04BB                     i1l441:	
  8797  04BB  1B94               	btfsc	20,7	;volatile
  8798  04BC  1F96               	btfss	22,7	;volatile
  8799  04BD  2CC0               	goto	i1l443
  8800                           
  8801                           ;pin_manager.c: 109: IOCBF7 = 0;
  8802  04BE  1396               	bcf	22,7	;volatile
  8803                           
  8804                           ;pin_manager.c: 110: } else if ((IOCCP3 == 1) && (IOCCF3 == 1)) {
  8805  04BF  0008               	return
  8806  04C0                     i1l443:	
  8807  04C0  1997               	btfsc	23,3	;volatile
  8808  04C1  1D99               	btfss	25,3	;volatile
  8809  04C2  2CC5               	goto	i1l445
  8810                           
  8811                           ;pin_manager.c: 114: IOCCF3 = 0;
  8812  04C3  1199               	bcf	25,3	;volatile
  8813                           
  8814                           ;pin_manager.c: 115: } else if ((IOCCP4 == 1) && (IOCCF4 == 1)) {
  8815  04C4  0008               	return
  8816  04C5                     i1l445:	
  8817  04C5  1A17               	btfsc	23,4	;volatile
  8818  04C6  1E19               	btfss	25,4	;volatile
  8819  04C7  2CCA               	goto	i1l447
  8820                           
  8821                           ;pin_manager.c: 119: IOCCF4 = 0;
  8822  04C8  1219               	bcf	25,4	;volatile
  8823                           
  8824                           ;pin_manager.c: 120: } else if ((IOCCP5 == 1) && (IOCCF5 == 1)) {
  8825  04C9  0008               	return
  8826  04CA                     i1l447:	
  8827  04CA  1A97               	btfsc	23,5	;volatile
  8828  04CB  1E99               	btfss	25,5	;volatile
  8829  04CC  2CCF               	goto	i1l449
  8830                           
  8831                           ;pin_manager.c: 124: IOCCF5 = 0;
  8832  04CD  1299               	bcf	25,5	;volatile
  8833                           
  8834                           ;pin_manager.c: 125: } else if ((IOCCP6 == 1) && (IOCCF6 == 1)) {
  8835  04CE  0008               	return
  8836  04CF                     i1l449:	
  8837  04CF  1B17               	btfsc	23,6	;volatile
  8838  04D0  1F19               	btfss	25,6	;volatile
  8839  04D1  2CD4               	goto	i1l451
  8840                           
  8841                           ;pin_manager.c: 129: IOCCF6 = 0;
  8842  04D2  1319               	bcf	25,6	;volatile
  8843                           
  8844                           ;pin_manager.c: 130: } else if ((IOCCP7 == 1) && (IOCCF7 == 1)) {
  8845  04D3  0008               	return
  8846  04D4                     i1l451:	
  8847  04D4  1B97               	btfsc	23,7	;volatile
  8848  04D5  1F99               	btfss	25,7	;volatile
  8849  04D6  0008               	return
  8850                           
  8851                           ;pin_manager.c: 134: IOCCF7 = 0;
  8852  04D7  1399               	bcf	25,7	;volatile
  8853  04D8  0008               	return
  8854  04D9                     __end_of_PIN_MANAGER_IOC:	
  8855                           
  8856                           	psect	text26
  8857  04D9                     __ptext26:	
  8858 ;; *************** function _EUSART_Transmit_ISR *****************
  8859 ;; Defined at:
  8860 ;;		line 147 in file "mcc_generated_files/eusart.c"
  8861 ;; Parameters:    Size  Location     Type
  8862 ;;		None
  8863 ;; Auto vars:     Size  Location     Type
  8864 ;;		None
  8865 ;; Return value:  Size  Location     Type
  8866 ;;		None               void
  8867 ;; Registers used:
  8868 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8869 ;; Tracked objects:
  8870 ;;		On entry : 1F/0
  8871 ;;		On exit  : 1E/0
  8872 ;;		Unchanged: 0/0
  8873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8878 ;;Total ram usage:        0 bytes
  8879 ;; Hardware stack levels used:    1
  8880 ;; This function calls:
  8881 ;;		Nothing
  8882 ;; This function is called by:
  8883 ;;		_INTERRUPT_InterruptManager
  8884 ;; This function uses a non-reentrant model
  8885 ;;
  8886                           
  8887                           
  8888                           ;psect for function _EUSART_Transmit_ISR
  8889  04D9                     _EUSART_Transmit_ISR:	
  8890                           
  8891                           ;eusart.c: 150: if (sizeof (eusartTxBuffer) > eusartTxBufferRemaining) {
  8892                           
  8893                           ;incstack = 0
  8894                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  8895  04D9  3008               	movlw	8
  8896  04DA  0245               	subwf	_eusartTxBufferRemaining,w
  8897  04DB  1803               	skipnc
  8898  04DC  2CEC               	goto	i1l299
  8899                           
  8900                           ;eusart.c: 151: TX1REG = eusartTxBuffer[eusartTxTail++];
  8901  04DD  0847               	movf	_eusartTxTail,w
  8902  04DE  3E30               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  8903  04DF  0086               	movwf	6
  8904  04E0  0187               	clrf	7
  8905  04E1  0801               	movf	1,w
  8906  04E2  0023               	movlb	3	; select bank3
  8907  04E3  009A               	movwf	26	;volatile
  8908  04E4  0020               	movlb	0	; select bank0
  8909  04E5  3008               	movlw	8
  8910  04E6  0AC7               	incf	_eusartTxTail,f
  8911                           
  8912                           ;eusart.c: 152: if (sizeof (eusartTxBuffer) <= eusartTxTail) {
  8913  04E7  0247               	subwf	_eusartTxTail,w
  8914  04E8  1803               	btfsc	3,0
  8915                           
  8916                           ;eusart.c: 153: eusartTxTail = 0;
  8917  04E9  01C7               	clrf	_eusartTxTail
  8918                           
  8919                           ;eusart.c: 154: }
  8920                           ;eusart.c: 155: eusartTxBufferRemaining++;
  8921  04EA  0AC5               	incf	_eusartTxBufferRemaining,f	;volatile
  8922                           
  8923                           ;eusart.c: 156: } else {
  8924  04EB  0008               	return
  8925  04EC                     i1l299:	
  8926                           
  8927                           ;eusart.c: 157: PIE1bits.TXIE = 0;
  8928  04EC  0021               	movlb	1	; select bank1
  8929  04ED  1210               	bcf	16,4	;volatile
  8930  04EE  0008               	return
  8931  04EF                     __end_of_EUSART_Transmit_ISR:	
  8932                           
  8933                           	psect	text27
  8934  04EF                     __ptext27:	
  8935 ;; *************** function _EUSART_Receive_ISR *****************
  8936 ;; Defined at:
  8937 ;;		line 161 in file "mcc_generated_files/eusart.c"
  8938 ;; Parameters:    Size  Location     Type
  8939 ;;		None
  8940 ;; Auto vars:     Size  Location     Type
  8941 ;;		None
  8942 ;; Return value:  Size  Location     Type
  8943 ;;		None               void
  8944 ;; Registers used:
  8945 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8946 ;; Tracked objects:
  8947 ;;		On entry : 1F/0
  8948 ;;		On exit  : 1F/0
  8949 ;;		Unchanged: 0/0
  8950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8955 ;;Total ram usage:        0 bytes
  8956 ;; Hardware stack levels used:    1
  8957 ;; This function calls:
  8958 ;;		Nothing
  8959 ;; This function is called by:
  8960 ;;		_INTERRUPT_InterruptManager
  8961 ;; This function uses a non-reentrant model
  8962 ;;
  8963                           
  8964                           
  8965                           ;psect for function _EUSART_Receive_ISR
  8966  04EF                     _EUSART_Receive_ISR:	
  8967                           
  8968                           ;eusart.c: 162: if (1 == RC1STAbits.OERR) {
  8969                           
  8970                           ;incstack = 0
  8971                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  8972  04EF  0023               	movlb	3	; select bank3
  8973  04F0  1C9D               	btfss	29,1	;volatile
  8974  04F1  2CF4               	goto	i1l2058
  8975                           
  8976                           ;eusart.c: 165: RC1STAbits.CREN = 0;
  8977  04F2  121D               	bcf	29,4	;volatile
  8978                           
  8979                           ;eusart.c: 166: RC1STAbits.CREN = 1;
  8980  04F3  161D               	bsf	29,4	;volatile
  8981  04F4                     i1l2058:	
  8982                           
  8983                           ;eusart.c: 167: }
  8984                           ;eusart.c: 170: eusartRxBuffer[eusartRxHead++] = RC1REG;
  8985  04F4  0020               	movlb	0	; select bank0
  8986  04F5  0843               	movf	_eusartRxHead,w
  8987  04F6  3E20               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  8988  04F7  0086               	movwf	6
  8989  04F8  0187               	clrf	7
  8990  04F9  0023               	movlb	3	; select bank3
  8991  04FA  0819               	movf	25,w	;volatile
  8992  04FB  0081               	movwf	1
  8993  04FC  0020               	movlb	0	; select bank0
  8994  04FD  3010               	movlw	16
  8995  04FE  0AC3               	incf	_eusartRxHead,f
  8996                           
  8997                           ;eusart.c: 171: if (sizeof (eusartRxBuffer) <= eusartRxHead) {
  8998  04FF  0243               	subwf	_eusartRxHead,w
  8999  0500  1803               	btfsc	3,0
  9000                           
  9001                           ;eusart.c: 172: eusartRxHead = 0;
  9002  0501  01C3               	clrf	_eusartRxHead
  9003                           
  9004                           ;eusart.c: 173: }
  9005                           ;eusart.c: 174: eusartRxCount++;
  9006  0502  0AC2               	incf	_eusartRxCount,f	;volatile
  9007  0503  0008               	return
  9008  0504                     __end_of_EUSART_Receive_ISR:	
  9009  007E                     btemp	set	126	;btemp
  9010  007E                     wtemp	set	126
  9011  007E                     wtemp0	set	126
  9012  0080                     wtemp1	set	128
  9013  0082                     wtemp2	set	130
  9014  0084                     wtemp3	set	132
  9015  0086                     wtemp4	set	134
  9016  0088                     wtemp5	set	136
  9017  007F                     wtemp6	set	127
  9018  007E                     ttemp	set	126
  9019  007E                     ttemp0	set	126
  9020  0081                     ttemp1	set	129
  9021  0084                     ttemp2	set	132
  9022  0087                     ttemp3	set	135
  9023  007F                     ttemp4	set	127
  9024  007E                     ltemp	set	126
  9025  007E                     ltemp0	set	126
  9026  0082                     ltemp1	set	130
  9027  0086                     ltemp2	set	134
  9028  0080                     ltemp3	set	128


Data Sizes:
    Strings     87
    Constant    94
    Data        0
    BSS         56
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      3      59
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           32      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_16(CODE[19]), STR_15(CODE[19]), STR_14(CODE[8]), STR_13(CODE[19]), 
		 -> STR_12(CODE[8]), STR_11(CODE[8]), STR_10(CODE[8]), STR_9(CODE[8]), 
		 -> STR_8(CODE[8]), STR_7(CODE[19]), STR_6(CODE[8]), STR_5(CODE[8]), 
		 -> STR_4(CODE[7]), STR_3(CODE[9]), STR_2(CODE[15]), STR_1(CODE[13]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_16(CODE[19]), STR_15(CODE[19]), STR_14(CODE[8]), STR_13(CODE[19]), 
		 -> STR_12(CODE[8]), STR_11(CODE[8]), STR_10(CODE[8]), STR_9(CODE[8]), 
		 -> STR_8(CODE[8]), STR_7(CODE[19]), STR_6(CODE[8]), STR_5(CODE[8]), 
		 -> STR_4(CODE[7]), STR_3(CODE[9]), STR_2(CODE[15]), STR_1(CODE[13]), 

    strcmp@s2	PTR const unsigned char  size(1) Largest target is 16
		 -> inputCommand(BANK0[16]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 16
		 -> CMD_SET_PARTY(CODE[15]), CMD_SET_XMAS(CODE[14]), CMD_SET_STARRY(CODE[16]), CMD_SET_DIRECT(CODE[16]), 
		 -> CMD_SET_OFF(CODE[13]), CMD_GET_STATE(CODE[14]), 

    memset@p1	PTR void  size(1) Largest target is 16
		 -> inputCommand(BANK0[16]), 

    memset@p	PTR unsigned char  size(1) Largest target is 16
		 -> inputCommand(BANK0[16]), 

    sp__memset	PTR void  size(1) Largest target is 16
		 -> inputCommand(BANK0[16]), 

    UART_HexSrtingToBinary@data	PTR unsigned char  size(1) Largest target is 16
		 -> inputCommand(BANK0[16]), 

    outputString@string	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_16(CODE[19]), STR_15(CODE[19]), STR_14(CODE[8]), STR_13(CODE[19]), 
		 -> STR_12(CODE[8]), STR_11(CODE[8]), STR_10(CODE[8]), STR_9(CODE[8]), 
		 -> STR_8(CODE[8]), STR_7(CODE[19]), STR_6(CODE[8]), STR_5(CODE[8]), 
		 -> STR_4(CODE[7]), STR_3(CODE[9]), STR_2(CODE[15]), STR_1(CODE[13]), 


Critical Paths under _main in COMMON

    _main->_COMM_Task
    _SYSTEM_Initialize->_PIN_MANAGER_Initialize
    _LED_Test->_ledSendByte
    _LED_Task->_ledSetColor
    _ledSetColor->_ledSendByte
    _ledSendByte->_SPI_Exchange8bit
    _COMM_Task->_outputString
    _outputString->_strlen

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    4095
                                              0 BANK0      3     3      0
                          _COMM_Task
                           _LED_Task
                           _LED_Test
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      15
                    _ADC1_Initialize
                    _CLC4_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                     _SPI_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (3) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_Test                                             5     5      0     180
                                              2 COMMON     5     5      0
                        _ledSendByte
 ---------------------------------------------------------------------------------
 (1) _LED_Task                                             4     4      0     383
                                              5 COMMON     4     4      0
                        _ledSetColor
 ---------------------------------------------------------------------------------
 (2) _ledSetColor                                          3     0      3     291
                                              2 COMMON     3     0      3
                        _ledSendByte
 ---------------------------------------------------------------------------------
 (2) _ledSendByte                                          1     1      0      44
                                              1 COMMON     1     1      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (3) _SPI_Exchange8bit                                     1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _COMM_Task                                            4     4      0    3517
                                             10 COMMON     4     4      0
                        _EUSART_Read
             _UART_HexSrtingToBinary
                             _memset
                       _outputString
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               6     3      3    1149
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (2) _outputString                                         5     3      2    1312
                                              5 COMMON     5     3      2
                       _EUSART_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               5     3      2     154
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      44
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _memset                                               6     2      4     254
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _UART_HexSrtingToBinary                               4     4      0     444
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read                                          1     1      0      24
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0       0
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (6) _PIN_MANAGER_IOC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _COMM_Task
     _EUSART_Read
     _UART_HexSrtingToBinary
     _memset
     _outputString
       _EUSART_Write
       _strlen
     _strcmp
   _LED_Task
     _ledSetColor
       _ledSendByte
         _SPI_Exchange8bit
   _LED_Test
     _ledSendByte
       _SPI_Exchange8bit
   _SYSTEM_Initialize
     _ADC1_Initialize
     _CLC4_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM3_Initialize
     _SPI_Initialize
     _TMR2_Initialize
       _TMR2_Start

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR
   _PIN_MANAGER_IOC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3E0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3      3B       5       73.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      49      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           20      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              20      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      49      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sun Oct 11 00:00:44 2015

         UART_HexSrtingToBinary@data 0073                       _SPI_Initialize 03AA  
                                  pc 0002                          __CFG_CP$OFF 0000  
                                 l45 00D1                                   l55 000B  
                                 l65 0004                          __CFG_LVP$ON 0000  
                                l293 02FD                                  l358 0359  
                                l486 0110                                  _GIE 005F  
                                u180 03A8                                  u785 02DF  
                    _TMR2_Initialize 03B0                         __CFG_BORV$LO 0000  
                                wreg 0009                         __CFG_IESO$ON 0000  
                               S2180 03E7                                 S2182 03F1  
                               S2178 03DD                         ?_EUSART_Read 0070  
                       __CFG_ZCD$OFF 0000                                 l2000 01B5  
                               l1016 03DB                                 l2020 0227  
                               l2004 01BE                                 l2016 0223  
                               l2008 01C6                                 l1232 03D0  
                               l1700 02CF                                 l2076 0030  
                               l1714 026F                                 l1706 02D0  
                               l1732 02A7                                 l1820 0043  
                               l1814 0042                                 l1752 02C8  
                               l1672 02F2                                 l1904 0141  
                               l1824 0079                                 l1914 013E  
                               l1906 0143                                 l1756 02BF  
                               l1692 0312                                 l1780 025E  
                               l1940 017F                                 l1932 016F  
                               l1924 0157                                 l1908 0138  
                               l1668 0001                                 l1686 030B  
                               l1694 031D                                 l1790 0265  
                               l1758 0231                                 l1942 0183  
                               l1934 0173                                 l1950 01D9  
                               l1854 00C5                                 l1838 0096  
                               l1776 0256                                 l1952 01DC  
                               l1936 0177                                 l1848 009C  
                               l1938 017B                                 l1946 0187  
                               l1698 0000                                 l1874 00FD  
                               l1866 00D4                                 l1972 019D  
                               l1964 0196                                 l1884 00FF  
                               l1958 0193                                 l1992 01A5  
                               l1984 01A1                                 l1896 0127  
                               l1978 019F                                 STR_1 0480  
                               STR_2 0471                                 STR_3 048D  
                               STR_4 04AE                                 STR_5 04A6  
                               STR_6 049E                                 STR_7 045E  
                               STR_8 0496                                 STR_9 0496  
                               _LATA 010C                                 _LATB 010D  
                               _LATC 010E                                 u1287 003A  
                               u1297 006D                                 _T2PR 001B  
                 __size_of_COMM_Task 011D                                 _PLLR 04D6  
                               _WPUB 020D                                 _WPUC 020E  
                       __CFG_WRT$OFF 0000                        __CFG_FCMEN$ON 0000  
              __size_of_outputString 0022                                 _main 002A  
                               fsr0h 0005                                 fsr1h 0007  
                               fsr0l 0004                                 indf0 0000  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                        __CFG_BOREN$ON 0000  
                               ltemp 007E                                 start 001E  
                               ttemp 007E                                 wtemp 007E  
             __end_of_SPI_Initialize 03B0                        __CFG_MCLRE$ON 0000  
                      __CFG_PLLEN$ON 0000                        ?_EUSART_Write 0070  
     __size_of_OSCILLATOR_Initialize 0008                     __end_of_LED_Task 010B  
                   __end_of_LED_Test 0095        __end_of_OSCILLATOR_Initialize 035C  
                              ?_main 0070                 __end_of_CMD_SET_XMAS 0451  
                              STR_10 0496                                STR_11 0496  
                              STR_12 0496                                STR_13 045E  
                              STR_14 0496                                STR_15 045E  
                              STR_16 045E                        __CFG_WDTE$OFF 0000  
                              _T2CON 001C                                _T2HLT 001D  
                              _T2TMR 001A                                i1l322 000E  
                              _T2RST 001F                                i1l324 0017  
                              i1l441 04BB                                i1l451 04D4  
                              i1l443 04C0                                i1l445 04C5  
                              i1l447 04CA                                i1l449 04CF  
                              i1l299 04EC                                _TRISA 008C  
                              _TRISB 008D                                _TRISC 008E  
                              _RXPPS 0E24                    ??_CLC4_Initialize 0070  
            COMM_Task@receiveCounter 003F                         _outputString 02CF  
            __end_of_PIN_MANAGER_IOC 04D9                          ?_TMR2_Start 0070  
            __end_of_PWM3_Initialize 03DB                                ltemp0 007E  
                              ltemp1 0082                                ltemp2 0086  
                              ltemp3 0080                                ttemp0 007E  
                              ttemp1 0081                                ttemp2 0084  
                              ttemp3 0087                                ttemp4 007F  
                              status 0003                                wtemp0 007E  
                              wtemp1 0080                                wtemp2 0082  
                              wtemp3 0084                                wtemp4 0086  
                              wtemp5 0088                                wtemp6 007F  
              __end_of_CMD_GET_STATE 0443                      ?_SPI_Initialize 0070  
                    __initialization 0020                         __end_of_main 0041  
                     ??_EUSART_Write 0070              __end_of_TMR2_Initialize 03BB  
                     __CFG_LPBOR$OFF 0000          ?_INTERRUPT_InterruptManager 0070  
                  __end_of_COMM_Task 0231                               ??_main 0058  
           __end_of_SPI_Exchange8bit 0114                __end_of_CMD_SET_PARTY 0435  
                             _ADCON0 009D                               _ADCON1 009E  
                             _ADCON2 009F                               _ADRESH 009C  
                             _ADRESL 009B                               _ANSELA 018C  
                             _ANSELB 018D                               _ANSELC 018E  
                             _IOCBF6 1CB6                               _IOCCF3 1CCB  
                             _IOCBF7 1CB7                               _IOCCF4 1CCC  
                             _IOCCF5 1CCD                               _IOCCF6 1CCE  
                             _IOCCF7 1CCF                               _IOCBP6 1CA6  
                             _IOCCP3 1CBB                               _IOCBP7 1CA7  
                             _IOCCP4 1CBC                               _IOCCP5 1CBD  
                             _IOCCP6 1CBE                               _IOCCP7 1CBF  
                             _RC1REG 0199                               _RC0PPS 0EA0  
                             _RC1PPS 0EA1                               _RA5PPS 0E95  
                             _RC1STA 019D                               _RB4PPS 0E9C  
                             i1l2058 04F4                               _OSCCON 0099  
                             _SPBRGH 019C                               _SPBRGL 019B  
                             _TX1REG 019A                               _TX1STA 019E  
                             _SSPBUF 0211                 __size_of_ledSetColor 0000  
               __size_of_ledSendByte 0000                       __CFG_PWRTE$OFF 0000  
                     __CFG_STVREN$ON 0000                  __size_of_TMR2_Start 0002  
                _EUSART_Transmit_ISR 04D9                               _memset 02BD  
                       LED_Task@i_80 0077             __size_of_ADC1_Initialize 0009  
                             _strcmp 0231                               _strlen 030E  
                ledSetColor@ledColor 0072                     ?_PIN_MANAGER_IOC 0070  
               ?_EUSART_Transmit_ISR 0070             ??_UART_HexSrtingToBinary 0070  
                   ?_PWM3_Initialize 0070                 __size_of_EUSART_Read 0016  
                  _SYSTEM_Initialize 0324              __end_of__initialization 0028  
                          ?_LED_Task 0070                            ?_LED_Test 0070  
                 ?_SYSTEM_Initialize 0070                       __pcstackCOMMON 0070  
                ??_SYSTEM_Initialize 0071                       _CMD_SET_DIRECT 0406  
                          LED_Task@i 0075                            LED_Test@i 0075  
                          LED_Test@j 0076                     ?_TMR2_Initialize 0070  
                     _CMD_SET_STARRY 0416                       _OPTION_REGbits 0095  
          __end_of_SYSTEM_Initialize 0333                ??_EUSART_Transmit_ISR 0070  
                         __pbssBANK0 0020                 __end_of_EUSART_Write 030E  
                         ??_LED_Task 0075                           ??_LED_Test 0072  
                       _CMD_SET_XMAS 0443          __size_of_EUSART_Receive_ISR 0015  
                         __pmaintext 002A               __end_of_CMD_SET_DIRECT 0416  
                    __CFG_PPS1WAY$ON 0000                      _CLC4_Initialize 03BB  
                         __pintentry 0004               __end_of_CMD_SET_STARRY 0426  
                            _CLC4CON 0F2E                              ?_memset 0070  
                            _CLC4POL 0F2F                           _ledFullOff 0400  
                            ?_strcmp 0070                              ?_strlen 0070  
                      _eusartRxCount 0042                      __CFG_WDTCCS$SWC 0000  
                            _OSCSTAT 009A                              _OSCTUNE 0098  
                            _PWM3DCH 0618                              _PWM3DCL 0617  
                            _PWM3CON 0619                              _SSP1ADD 0212  
                            _PPSLOCK 0E0F                    ??_ADC1_Initialize 0070  
                       ??_TMR2_Start 0070      __size_of_UART_HexSrtingToBinary 003A  
                   ??_SPI_Initialize 0070                    __end_of_ledFullOn 0406  
                 __end_of_TMR2_Start 03DD                      __size_of_memset 0012  
                            __ptext1 0324                              __ptext2 03B0  
                            __ptext3 03DB                              __ptext4 03AA  
                            __ptext5 03D0                              __ptext6 035C  
                            __ptext7 0354                              __ptext8 033C  
                            __ptext9 03BB                      __size_of_strcmp 003C  
                    __size_of_strlen 0016                _OSCILLATOR_Initialize 0354  
                          _T2CONbits 001C                            _COMM_Task 0114  
           ??_PIN_MANAGER_Initialize 0070                    ?_SPI_Exchange8bit 0070  
         __size_of_SYSTEM_Initialize 000F                              clrloop0 0505  
               end_of_initialization 0028                   ??_SPI_Exchange8bit 0070  
               SPI_Exchange8bit@data 0070                              memset@c 0070  
                            memset@n 0072                              memset@p 0075  
            __end_of_CLC4_Initialize 03D0                    _EUSART_Initialize 033C  
         COMM_Task@UART_ReceiveState 003E                   ?_EUSART_Initialize 0070  
                       __pstringtext 0400              UART_HexSrtingToBinary@i 0072  
             _UART_HexSrtingToBinary 026D                              strlen@s 0070  
                ??_EUSART_Initialize 0070                           COMM_Task@b 007C  
                         COMM_Task@g 007B                           COMM_Task@r 007A  
                          _SSPDATPPS 0E21                            _SSPCLKPPS 0E20  
                         ?_COMM_Task 0070                     __CFG_FOSC$INTOSC 0000  
                 outputString@string 0075                __size_of_EUSART_Write 001D  
                      ??_ledSetColor 0075                        ??_ledSendByte 0071  
          __end_of_EUSART_Initialize 0354                    __size_of_LED_Task 0076  
                  __size_of_LED_Test 0054                         _LED_SetColor 0038  
                __end_of_CMD_SET_OFF 045E                         _EUSART_Write 02F1  
             ?_OSCILLATOR_Initialize 0070                       __end_of_memset 02CF  
                     __end_of_strcmp 026D                       __end_of_strlen 0324  
                start_initialization 0020      __size_of_PIN_MANAGER_Initialize 004E  
                      ??_EUSART_Read 0070                        _CMD_GET_STATE 0435  
           __size_of_PIN_MANAGER_IOC 0024                     ?_CLC4_Initialize 0070  
                __end_of_ledSetColor 0000                  __end_of_ledSendByte 0000  
           __size_of_PWM3_Initialize 000B                          _CCPTMRSbits 029E  
                           ??_memset 0074                      _ADC1_Initialize 0333  
                           ??_strcmp 0073                             ??_strlen 0072  
                        ??_COMM_Task 007A          __end_of_EUSART_Transmit_ISR 04EF  
                          ___latbits 0002                        __pcstackBANK0 0058  
                      ?_outputString 0075             __size_of_TMR2_Initialize 000B  
                   _LED_currentColor 003B                        _CMD_SET_PARTY 0426  
         __end_of_EUSART_Receive_ISR 0504           __size_of_EUSART_Initialize 0018  
                __end_of_EUSART_Read 02BD                          _CMD_SET_OFF 0451  
             _PIN_MANAGER_Initialize 035C                 EUSART_Read@readValue 0070  
                      outputString@i 0079                            _ledFullOn 0403  
                       _eusartRxHead 0043                         _eusartTxHead 0046  
                       _eusartRxTail 0044                         _eusartTxTail 0047  
       ??_INTERRUPT_InterruptManager 0070                            __pswtext1 03DD  
                          __pswtext2 03E7                            __pswtext3 03F1  
            _eusartTxBufferRemaining 0045                             _BAUD1CON 019F  
                           _CLC4GLS0 0F34                             _CLC4GLS1 0F35  
                           _CLC4GLS2 0F36                             _CLC4GLS3 0F37  
                           _CLC4SEL0 0F30                             _CLC4SEL1 0F31  
                           _CLC4SEL2 0F32                             _CLC4SEL3 0F33  
                     ??_outputString 0077                             _T2CLKCON 001E  
                        _ledSetColor 0000                          _ledSendByte 0000  
                     _eusartRxBuffer 0020                       _eusartTxBuffer 0030  
                           _LED_Task 0095                             _LED_Test 0041  
                       _inputCommand 0048                            clear_ram0 0504  
                           _PIE1bits 0090                             _LED_mode 0041  
__size_of_INTERRUPT_InterruptManager 001A              __end_of_ADC1_Initialize 033C  
                           _PIR1bits 0010              ?_UART_HexSrtingToBinary 0070  
          __size_of_SPI_Exchange8bit 0009                 __CFG_WDTCPS$WDTCPS1F 0000  
                           _SSP1CON1 0215                             _SSP1STAT 0214  
                  ??_PIN_MANAGER_IOC 0070                    ??_PWM3_Initialize 0070  
                        _EUSART_Read 02A7                    ??_TMR2_Initialize 0070  
                 __end_of_ledFullOff 0403       __end_of_UART_HexSrtingToBinary 02A7  
            __size_of_SPI_Initialize 0006              ??_OSCILLATOR_Initialize 0070  
                           __ptext10 0333                             __ptext11 0041  
                           __ptext20 02F1                             __ptext12 0095  
                           __ptext21 02BD                             __ptext13 0000  
                           __ptext22 026D                             __ptext14 0000  
                           __ptext23 02A7                             __ptext15 010B  
                           __ptext16 0114                             __ptext25 04B5  
                           __ptext17 0231                             __ptext26 04D9  
                           __ptext18 02CF                             __ptext27 04EF  
                           __ptext19 030E                         _SSP1CON1bits 0215  
                      __size_of_main 0017                 __CFG_WDTCWS$WDTCWSSW 0000  
               __end_of_outputString 02F1                           _RC1STAbits 019D  
                   ?_ADC1_Initialize 0070   __end_of_INTERRUPT_InterruptManager 001E  
         _INTERRUPT_InterruptManager 0004                       LED_Task@ledOFF 0040  
                       _SSP1STATbits 0214                 COMM_Task@receiveData 007D  
        PIN_MANAGER_Initialize@state 0070                           _INTCONbits 000B  
                    ledSendByte@data 0071                             memset@p1 0074  
                           intlevel1 0000              ?_PIN_MANAGER_Initialize 0070  
                  __CFG_CLKOUTEN$OFF 0000                          _PPSLOCKbits 0E0F  
                   _SPI_Exchange8bit 010B                   _EUSART_Receive_ISR 04EF  
           __size_of_CLC4_Initialize 0015                  ?_EUSART_Receive_ISR 0070  
                           strcmp@s1 0070                             strcmp@t0 0073  
                           strcmp@s2 0072                             strcmp@t1 0075  
                           strcmp@t2 0074                             strlen@cp 0073  
                         _TMR2_Start 03DB                   EUSART_Write@txData 0070  
       __size_of_EUSART_Transmit_ISR 0016                         ?_ledSetColor 0072  
                       ?_ledSendByte 0070       __end_of_PIN_MANAGER_Initialize 03AA  
                    _PIN_MANAGER_IOC 04B5                 ??_EUSART_Receive_ISR 0070  
                    _PWM3_Initialize 03D0  
