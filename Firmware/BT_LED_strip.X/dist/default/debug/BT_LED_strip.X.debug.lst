

Microchip Technology PIC PRO Macro Assembler V1.34 build -361300703 
                                                                                               Sat Oct 17 12:33:40 2015

Microchip Technology Omniscient Code Generator (PRO mode) build 201502162209
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	swtext1,local,class=CONST,delta=2
    11                           	psect	text12,local,class=CODE,merge=1,inline,delta=2
    12                           	psect	text13,local,class=CODE,merge=1,delta=2
    13                           	psect	swtext2,local,class=CONST,delta=2
    14                           	psect	text18,local,class=CODE,merge=1,inline,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text32,local,class=CODE,merge=1,delta=2
    17                           	psect	text33,local,class=CODE,merge=1,delta=2
    18                           	psect	text34,local,class=CODE,merge=1,delta=2
    19                           	psect	pa_nodes,global,class=CODE,delta=2
    20                           	dabs	1,0x7E,2
    21  0000                     	;# 
    22  0001                     	;# 
    23  0002                     	;# 
    24  0003                     	;# 
    25  0004                     	;# 
    26  0005                     	;# 
    27  0006                     	;# 
    28  0007                     	;# 
    29  0008                     	;# 
    30  0009                     	;# 
    31  000A                     	;# 
    32  000B                     	;# 
    33  000C                     	;# 
    34  000D                     	;# 
    35  000E                     	;# 
    36  0010                     	;# 
    37  0011                     	;# 
    38  0012                     	;# 
    39  0013                     	;# 
    40  0014                     	;# 
    41  0015                     	;# 
    42  0016                     	;# 
    43  0016                     	;# 
    44  0017                     	;# 
    45  0018                     	;# 
    46  0019                     	;# 
    47  001A                     	;# 
    48  001A                     	;# 
    49  001B                     	;# 
    50  001B                     	;# 
    51  001C                     	;# 
    52  001D                     	;# 
    53  001E                     	;# 
    54  001F                     	;# 
    55  008C                     	;# 
    56  008D                     	;# 
    57  008E                     	;# 
    58  0090                     	;# 
    59  0091                     	;# 
    60  0092                     	;# 
    61  0093                     	;# 
    62  0094                     	;# 
    63  0095                     	;# 
    64  0096                     	;# 
    65  0098                     	;# 
    66  0099                     	;# 
    67  009A                     	;# 
    68  009B                     	;# 
    69  009B                     	;# 
    70  009C                     	;# 
    71  009D                     	;# 
    72  009E                     	;# 
    73  009F                     	;# 
    74  010C                     	;# 
    75  010D                     	;# 
    76  010E                     	;# 
    77  0111                     	;# 
    78  0112                     	;# 
    79  0113                     	;# 
    80  0114                     	;# 
    81  0115                     	;# 
    82  0116                     	;# 
    83  0117                     	;# 
    84  0118                     	;# 
    85  0119                     	;# 
    86  011C                     	;# 
    87  018C                     	;# 
    88  018D                     	;# 
    89  018E                     	;# 
    90  0191                     	;# 
    91  0191                     	;# 
    92  0192                     	;# 
    93  0193                     	;# 
    94  0193                     	;# 
    95  0194                     	;# 
    96  0195                     	;# 
    97  0196                     	;# 
    98  0197                     	;# 
    99  0199                     	;# 
   100  0199                     	;# 
   101  0199                     	;# 
   102  019A                     	;# 
   103  019A                     	;# 
   104  019A                     	;# 
   105  019B                     	;# 
   106  019B                     	;# 
   107  019B                     	;# 
   108  019B                     	;# 
   109  019B                     	;# 
   110  019C                     	;# 
   111  019C                     	;# 
   112  019C                     	;# 
   113  019D                     	;# 
   114  019D                     	;# 
   115  019D                     	;# 
   116  019E                     	;# 
   117  019E                     	;# 
   118  019E                     	;# 
   119  019F                     	;# 
   120  019F                     	;# 
   121  019F                     	;# 
   122  019F                     	;# 
   123  019F                     	;# 
   124  020C                     	;# 
   125  020D                     	;# 
   126  020E                     	;# 
   127  0211                     	;# 
   128  0211                     	;# 
   129  0212                     	;# 
   130  0212                     	;# 
   131  0213                     	;# 
   132  0213                     	;# 
   133  0214                     	;# 
   134  0214                     	;# 
   135  0215                     	;# 
   136  0215                     	;# 
   137  0215                     	;# 
   138  0215                     	;# 
   139  0216                     	;# 
   140  0216                     	;# 
   141  0217                     	;# 
   142  0217                     	;# 
   143  028C                     	;# 
   144  028D                     	;# 
   145  028E                     	;# 
   146  0291                     	;# 
   147  0291                     	;# 
   148  0292                     	;# 
   149  0293                     	;# 
   150  0294                     	;# 
   151  0298                     	;# 
   152  0298                     	;# 
   153  0299                     	;# 
   154  029A                     	;# 
   155  029B                     	;# 
   156  029E                     	;# 
   157  030C                     	;# 
   158  030D                     	;# 
   159  030E                     	;# 
   160  038C                     	;# 
   161  038D                     	;# 
   162  038E                     	;# 
   163  0391                     	;# 
   164  0392                     	;# 
   165  0393                     	;# 
   166  0394                     	;# 
   167  0395                     	;# 
   168  0396                     	;# 
   169  0397                     	;# 
   170  0398                     	;# 
   171  0399                     	;# 
   172  040E                     	;# 
   173  0413                     	;# 
   174  0413                     	;# 
   175  0414                     	;# 
   176  0414                     	;# 
   177  0415                     	;# 
   178  0416                     	;# 
   179  0417                     	;# 
   180  0418                     	;# 
   181  041A                     	;# 
   182  041A                     	;# 
   183  041B                     	;# 
   184  041B                     	;# 
   185  041C                     	;# 
   186  041D                     	;# 
   187  041E                     	;# 
   188  041F                     	;# 
   189  0493                     	;# 
   190  0494                     	;# 
   191  0495                     	;# 
   192  0496                     	;# 
   193  049A                     	;# 
   194  049B                     	;# 
   195  049C                     	;# 
   196  049D                     	;# 
   197  058C                     	;# 
   198  058C                     	;# 
   199  058D                     	;# 
   200  058E                     	;# 
   201  058E                     	;# 
   202  058F                     	;# 
   203  0590                     	;# 
   204  0590                     	;# 
   205  0591                     	;# 
   206  0592                     	;# 
   207  0592                     	;# 
   208  0593                     	;# 
   209  0594                     	;# 
   210  0594                     	;# 
   211  0595                     	;# 
   212  0596                     	;# 
   213  0596                     	;# 
   214  0597                     	;# 
   215  0598                     	;# 
   216  0599                     	;# 
   217  059A                     	;# 
   218  059B                     	;# 
   219  059B                     	;# 
   220  059C                     	;# 
   221  059D                     	;# 
   222  060C                     	;# 
   223  060C                     	;# 
   224  060D                     	;# 
   225  060E                     	;# 
   226  060F                     	;# 
   227  060F                     	;# 
   228  0610                     	;# 
   229  0611                     	;# 
   230  0612                     	;# 
   231  0613                     	;# 
   232  0614                     	;# 
   233  0617                     	;# 
   234  0618                     	;# 
   235  0619                     	;# 
   236  061A                     	;# 
   237  061B                     	;# 
   238  061C                     	;# 
   239  0691                     	;# 
   240  0692                     	;# 
   241  0693                     	;# 
   242  0694                     	;# 
   243  0695                     	;# 
   244  0696                     	;# 
   245  0697                     	;# 
   246  0699                     	;# 
   247  069A                     	;# 
   248  0711                     	;# 
   249  0712                     	;# 
   250  0713                     	;# 
   251  0714                     	;# 
   252  0715                     	;# 
   253  0718                     	;# 
   254  0718                     	;# 
   255  0719                     	;# 
   256  071A                     	;# 
   257  071A                     	;# 
   258  071B                     	;# 
   259  071C                     	;# 
   260  071D                     	;# 
   261  0791                     	;# 
   262  0791                     	;# 
   263  0792                     	;# 
   264  0793                     	;# 
   265  0793                     	;# 
   266  0794                     	;# 
   267  0795                     	;# 
   268  0795                     	;# 
   269  0796                     	;# 
   270  0797                     	;# 
   271  0797                     	;# 
   272  0798                     	;# 
   273  0799                     	;# 
   274  079A                     	;# 
   275  080C                     	;# 
   276  080C                     	;# 
   277  080D                     	;# 
   278  080E                     	;# 
   279  080E                     	;# 
   280  080F                     	;# 
   281  0810                     	;# 
   282  0810                     	;# 
   283  0811                     	;# 
   284  0812                     	;# 
   285  0812                     	;# 
   286  0813                     	;# 
   287  0814                     	;# 
   288  0815                     	;# 
   289  0816                     	;# 
   290  0817                     	;# 
   291  0818                     	;# 
   292  0819                     	;# 
   293  081A                     	;# 
   294  081A                     	;# 
   295  081B                     	;# 
   296  081C                     	;# 
   297  081C                     	;# 
   298  081D                     	;# 
   299  088C                     	;# 
   300  088D                     	;# 
   301  088E                     	;# 
   302  088F                     	;# 
   303  088F                     	;# 
   304  0890                     	;# 
   305  0891                     	;# 
   306  0892                     	;# 
   307  0893                     	;# 
   308  0893                     	;# 
   309  0894                     	;# 
   310  0895                     	;# 
   311  0896                     	;# 
   312  0897                     	;# 
   313  0897                     	;# 
   314  0898                     	;# 
   315  0899                     	;# 
   316  0D8C                     	;# 
   317  0D8C                     	;# 
   318  0D8D                     	;# 
   319  0D8E                     	;# 
   320  0D8F                     	;# 
   321  0D8F                     	;# 
   322  0D90                     	;# 
   323  0D91                     	;# 
   324  0D92                     	;# 
   325  0D92                     	;# 
   326  0D93                     	;# 
   327  0D94                     	;# 
   328  0D95                     	;# 
   329  0D95                     	;# 
   330  0D96                     	;# 
   331  0D97                     	;# 
   332  0D98                     	;# 
   333  0D99                     	;# 
   334  0D9A                     	;# 
   335  0D9B                     	;# 
   336  0D9C                     	;# 
   337  0D9D                     	;# 
   338  0D9E                     	;# 
   339  0D9E                     	;# 
   340  0D9F                     	;# 
   341  0DA0                     	;# 
   342  0DA1                     	;# 
   343  0DA1                     	;# 
   344  0DA2                     	;# 
   345  0DA3                     	;# 
   346  0DA4                     	;# 
   347  0DA4                     	;# 
   348  0DA5                     	;# 
   349  0DA6                     	;# 
   350  0DA7                     	;# 
   351  0DA7                     	;# 
   352  0DA8                     	;# 
   353  0DA9                     	;# 
   354  0DAA                     	;# 
   355  0DAB                     	;# 
   356  0DAC                     	;# 
   357  0DAD                     	;# 
   358  0DAE                     	;# 
   359  0DAF                     	;# 
   360  0E0F                     	;# 
   361  0E10                     	;# 
   362  0E11                     	;# 
   363  0E12                     	;# 
   364  0E13                     	;# 
   365  0E14                     	;# 
   366  0E15                     	;# 
   367  0E16                     	;# 
   368  0E17                     	;# 
   369  0E18                     	;# 
   370  0E19                     	;# 
   371  0E1A                     	;# 
   372  0E1B                     	;# 
   373  0E1C                     	;# 
   374  0E1D                     	;# 
   375  0E1E                     	;# 
   376  0E1F                     	;# 
   377  0E20                     	;# 
   378  0E21                     	;# 
   379  0E22                     	;# 
   380  0E23                     	;# 
   381  0E24                     	;# 
   382  0E25                     	;# 
   383  0E26                     	;# 
   384  0E27                     	;# 
   385  0E28                     	;# 
   386  0E29                     	;# 
   387  0E2A                     	;# 
   388  0E2B                     	;# 
   389  0E2C                     	;# 
   390  0E2D                     	;# 
   391  0E2E                     	;# 
   392  0E90                     	;# 
   393  0E91                     	;# 
   394  0E92                     	;# 
   395  0E94                     	;# 
   396  0E95                     	;# 
   397  0E9C                     	;# 
   398  0E9D                     	;# 
   399  0E9E                     	;# 
   400  0E9F                     	;# 
   401  0EA0                     	;# 
   402  0EA1                     	;# 
   403  0EA2                     	;# 
   404  0EA3                     	;# 
   405  0EA4                     	;# 
   406  0EA5                     	;# 
   407  0EA6                     	;# 
   408  0EA7                     	;# 
   409  0F0F                     	;# 
   410  0F10                     	;# 
   411  0F11                     	;# 
   412  0F12                     	;# 
   413  0F13                     	;# 
   414  0F14                     	;# 
   415  0F15                     	;# 
   416  0F16                     	;# 
   417  0F17                     	;# 
   418  0F18                     	;# 
   419  0F19                     	;# 
   420  0F1A                     	;# 
   421  0F1B                     	;# 
   422  0F1C                     	;# 
   423  0F1D                     	;# 
   424  0F1E                     	;# 
   425  0F1F                     	;# 
   426  0F20                     	;# 
   427  0F21                     	;# 
   428  0F22                     	;# 
   429  0F23                     	;# 
   430  0F24                     	;# 
   431  0F25                     	;# 
   432  0F26                     	;# 
   433  0F27                     	;# 
   434  0F28                     	;# 
   435  0F29                     	;# 
   436  0F2A                     	;# 
   437  0F2B                     	;# 
   438  0F2C                     	;# 
   439  0F2D                     	;# 
   440  0F2E                     	;# 
   441  0F2F                     	;# 
   442  0F30                     	;# 
   443  0F31                     	;# 
   444  0F32                     	;# 
   445  0F33                     	;# 
   446  0F34                     	;# 
   447  0F35                     	;# 
   448  0F36                     	;# 
   449  0F37                     	;# 
   450  0FE4                     	;# 
   451  0FE5                     	;# 
   452  0FE6                     	;# 
   453  0FE7                     	;# 
   454  0FE8                     	;# 
   455  0FE9                     	;# 
   456  0FEA                     	;# 
   457  0FEB                     	;# 
   458  0FED                     	;# 
   459  0FEE                     	;# 
   460  0FEF                     	;# 
   461  0000                     	;# 
   462  0001                     	;# 
   463  0002                     	;# 
   464  0003                     	;# 
   465  0004                     	;# 
   466  0005                     	;# 
   467  0006                     	;# 
   468  0007                     	;# 
   469  0008                     	;# 
   470  0009                     	;# 
   471  000A                     	;# 
   472  000B                     	;# 
   473  000C                     	;# 
   474  000D                     	;# 
   475  000E                     	;# 
   476  0010                     	;# 
   477  0011                     	;# 
   478  0012                     	;# 
   479  0013                     	;# 
   480  0014                     	;# 
   481  0015                     	;# 
   482  0016                     	;# 
   483  0016                     	;# 
   484  0017                     	;# 
   485  0018                     	;# 
   486  0019                     	;# 
   487  001A                     	;# 
   488  001A                     	;# 
   489  001B                     	;# 
   490  001B                     	;# 
   491  001C                     	;# 
   492  001D                     	;# 
   493  001E                     	;# 
   494  001F                     	;# 
   495  008C                     	;# 
   496  008D                     	;# 
   497  008E                     	;# 
   498  0090                     	;# 
   499  0091                     	;# 
   500  0092                     	;# 
   501  0093                     	;# 
   502  0094                     	;# 
   503  0095                     	;# 
   504  0096                     	;# 
   505  0098                     	;# 
   506  0099                     	;# 
   507  009A                     	;# 
   508  009B                     	;# 
   509  009B                     	;# 
   510  009C                     	;# 
   511  009D                     	;# 
   512  009E                     	;# 
   513  009F                     	;# 
   514  010C                     	;# 
   515  010D                     	;# 
   516  010E                     	;# 
   517  0111                     	;# 
   518  0112                     	;# 
   519  0113                     	;# 
   520  0114                     	;# 
   521  0115                     	;# 
   522  0116                     	;# 
   523  0117                     	;# 
   524  0118                     	;# 
   525  0119                     	;# 
   526  011C                     	;# 
   527  018C                     	;# 
   528  018D                     	;# 
   529  018E                     	;# 
   530  0191                     	;# 
   531  0191                     	;# 
   532  0192                     	;# 
   533  0193                     	;# 
   534  0193                     	;# 
   535  0194                     	;# 
   536  0195                     	;# 
   537  0196                     	;# 
   538  0197                     	;# 
   539  0199                     	;# 
   540  0199                     	;# 
   541  0199                     	;# 
   542  019A                     	;# 
   543  019A                     	;# 
   544  019A                     	;# 
   545  019B                     	;# 
   546  019B                     	;# 
   547  019B                     	;# 
   548  019B                     	;# 
   549  019B                     	;# 
   550  019C                     	;# 
   551  019C                     	;# 
   552  019C                     	;# 
   553  019D                     	;# 
   554  019D                     	;# 
   555  019D                     	;# 
   556  019E                     	;# 
   557  019E                     	;# 
   558  019E                     	;# 
   559  019F                     	;# 
   560  019F                     	;# 
   561  019F                     	;# 
   562  019F                     	;# 
   563  019F                     	;# 
   564  020C                     	;# 
   565  020D                     	;# 
   566  020E                     	;# 
   567  0211                     	;# 
   568  0211                     	;# 
   569  0212                     	;# 
   570  0212                     	;# 
   571  0213                     	;# 
   572  0213                     	;# 
   573  0214                     	;# 
   574  0214                     	;# 
   575  0215                     	;# 
   576  0215                     	;# 
   577  0215                     	;# 
   578  0215                     	;# 
   579  0216                     	;# 
   580  0216                     	;# 
   581  0217                     	;# 
   582  0217                     	;# 
   583  028C                     	;# 
   584  028D                     	;# 
   585  028E                     	;# 
   586  0291                     	;# 
   587  0291                     	;# 
   588  0292                     	;# 
   589  0293                     	;# 
   590  0294                     	;# 
   591  0298                     	;# 
   592  0298                     	;# 
   593  0299                     	;# 
   594  029A                     	;# 
   595  029B                     	;# 
   596  029E                     	;# 
   597  030C                     	;# 
   598  030D                     	;# 
   599  030E                     	;# 
   600  038C                     	;# 
   601  038D                     	;# 
   602  038E                     	;# 
   603  0391                     	;# 
   604  0392                     	;# 
   605  0393                     	;# 
   606  0394                     	;# 
   607  0395                     	;# 
   608  0396                     	;# 
   609  0397                     	;# 
   610  0398                     	;# 
   611  0399                     	;# 
   612  040E                     	;# 
   613  0413                     	;# 
   614  0413                     	;# 
   615  0414                     	;# 
   616  0414                     	;# 
   617  0415                     	;# 
   618  0416                     	;# 
   619  0417                     	;# 
   620  0418                     	;# 
   621  041A                     	;# 
   622  041A                     	;# 
   623  041B                     	;# 
   624  041B                     	;# 
   625  041C                     	;# 
   626  041D                     	;# 
   627  041E                     	;# 
   628  041F                     	;# 
   629  0493                     	;# 
   630  0494                     	;# 
   631  0495                     	;# 
   632  0496                     	;# 
   633  049A                     	;# 
   634  049B                     	;# 
   635  049C                     	;# 
   636  049D                     	;# 
   637  058C                     	;# 
   638  058C                     	;# 
   639  058D                     	;# 
   640  058E                     	;# 
   641  058E                     	;# 
   642  058F                     	;# 
   643  0590                     	;# 
   644  0590                     	;# 
   645  0591                     	;# 
   646  0592                     	;# 
   647  0592                     	;# 
   648  0593                     	;# 
   649  0594                     	;# 
   650  0594                     	;# 
   651  0595                     	;# 
   652  0596                     	;# 
   653  0596                     	;# 
   654  0597                     	;# 
   655  0598                     	;# 
   656  0599                     	;# 
   657  059A                     	;# 
   658  059B                     	;# 
   659  059B                     	;# 
   660  059C                     	;# 
   661  059D                     	;# 
   662  060C                     	;# 
   663  060C                     	;# 
   664  060D                     	;# 
   665  060E                     	;# 
   666  060F                     	;# 
   667  060F                     	;# 
   668  0610                     	;# 
   669  0611                     	;# 
   670  0612                     	;# 
   671  0613                     	;# 
   672  0614                     	;# 
   673  0617                     	;# 
   674  0618                     	;# 
   675  0619                     	;# 
   676  061A                     	;# 
   677  061B                     	;# 
   678  061C                     	;# 
   679  0691                     	;# 
   680  0692                     	;# 
   681  0693                     	;# 
   682  0694                     	;# 
   683  0695                     	;# 
   684  0696                     	;# 
   685  0697                     	;# 
   686  0699                     	;# 
   687  069A                     	;# 
   688  0711                     	;# 
   689  0712                     	;# 
   690  0713                     	;# 
   691  0714                     	;# 
   692  0715                     	;# 
   693  0718                     	;# 
   694  0718                     	;# 
   695  0719                     	;# 
   696  071A                     	;# 
   697  071A                     	;# 
   698  071B                     	;# 
   699  071C                     	;# 
   700  071D                     	;# 
   701  0791                     	;# 
   702  0791                     	;# 
   703  0792                     	;# 
   704  0793                     	;# 
   705  0793                     	;# 
   706  0794                     	;# 
   707  0795                     	;# 
   708  0795                     	;# 
   709  0796                     	;# 
   710  0797                     	;# 
   711  0797                     	;# 
   712  0798                     	;# 
   713  0799                     	;# 
   714  079A                     	;# 
   715  080C                     	;# 
   716  080C                     	;# 
   717  080D                     	;# 
   718  080E                     	;# 
   719  080E                     	;# 
   720  080F                     	;# 
   721  0810                     	;# 
   722  0810                     	;# 
   723  0811                     	;# 
   724  0812                     	;# 
   725  0812                     	;# 
   726  0813                     	;# 
   727  0814                     	;# 
   728  0815                     	;# 
   729  0816                     	;# 
   730  0817                     	;# 
   731  0818                     	;# 
   732  0819                     	;# 
   733  081A                     	;# 
   734  081A                     	;# 
   735  081B                     	;# 
   736  081C                     	;# 
   737  081C                     	;# 
   738  081D                     	;# 
   739  088C                     	;# 
   740  088D                     	;# 
   741  088E                     	;# 
   742  088F                     	;# 
   743  088F                     	;# 
   744  0890                     	;# 
   745  0891                     	;# 
   746  0892                     	;# 
   747  0893                     	;# 
   748  0893                     	;# 
   749  0894                     	;# 
   750  0895                     	;# 
   751  0896                     	;# 
   752  0897                     	;# 
   753  0897                     	;# 
   754  0898                     	;# 
   755  0899                     	;# 
   756  0D8C                     	;# 
   757  0D8C                     	;# 
   758  0D8D                     	;# 
   759  0D8E                     	;# 
   760  0D8F                     	;# 
   761  0D8F                     	;# 
   762  0D90                     	;# 
   763  0D91                     	;# 
   764  0D92                     	;# 
   765  0D92                     	;# 
   766  0D93                     	;# 
   767  0D94                     	;# 
   768  0D95                     	;# 
   769  0D95                     	;# 
   770  0D96                     	;# 
   771  0D97                     	;# 
   772  0D98                     	;# 
   773  0D99                     	;# 
   774  0D9A                     	;# 
   775  0D9B                     	;# 
   776  0D9C                     	;# 
   777  0D9D                     	;# 
   778  0D9E                     	;# 
   779  0D9E                     	;# 
   780  0D9F                     	;# 
   781  0DA0                     	;# 
   782  0DA1                     	;# 
   783  0DA1                     	;# 
   784  0DA2                     	;# 
   785  0DA3                     	;# 
   786  0DA4                     	;# 
   787  0DA4                     	;# 
   788  0DA5                     	;# 
   789  0DA6                     	;# 
   790  0DA7                     	;# 
   791  0DA7                     	;# 
   792  0DA8                     	;# 
   793  0DA9                     	;# 
   794  0DAA                     	;# 
   795  0DAB                     	;# 
   796  0DAC                     	;# 
   797  0DAD                     	;# 
   798  0DAE                     	;# 
   799  0DAF                     	;# 
   800  0E0F                     	;# 
   801  0E10                     	;# 
   802  0E11                     	;# 
   803  0E12                     	;# 
   804  0E13                     	;# 
   805  0E14                     	;# 
   806  0E15                     	;# 
   807  0E16                     	;# 
   808  0E17                     	;# 
   809  0E18                     	;# 
   810  0E19                     	;# 
   811  0E1A                     	;# 
   812  0E1B                     	;# 
   813  0E1C                     	;# 
   814  0E1D                     	;# 
   815  0E1E                     	;# 
   816  0E1F                     	;# 
   817  0E20                     	;# 
   818  0E21                     	;# 
   819  0E22                     	;# 
   820  0E23                     	;# 
   821  0E24                     	;# 
   822  0E25                     	;# 
   823  0E26                     	;# 
   824  0E27                     	;# 
   825  0E28                     	;# 
   826  0E29                     	;# 
   827  0E2A                     	;# 
   828  0E2B                     	;# 
   829  0E2C                     	;# 
   830  0E2D                     	;# 
   831  0E2E                     	;# 
   832  0E90                     	;# 
   833  0E91                     	;# 
   834  0E92                     	;# 
   835  0E94                     	;# 
   836  0E95                     	;# 
   837  0E9C                     	;# 
   838  0E9D                     	;# 
   839  0E9E                     	;# 
   840  0E9F                     	;# 
   841  0EA0                     	;# 
   842  0EA1                     	;# 
   843  0EA2                     	;# 
   844  0EA3                     	;# 
   845  0EA4                     	;# 
   846  0EA5                     	;# 
   847  0EA6                     	;# 
   848  0EA7                     	;# 
   849  0F0F                     	;# 
   850  0F10                     	;# 
   851  0F11                     	;# 
   852  0F12                     	;# 
   853  0F13                     	;# 
   854  0F14                     	;# 
   855  0F15                     	;# 
   856  0F16                     	;# 
   857  0F17                     	;# 
   858  0F18                     	;# 
   859  0F19                     	;# 
   860  0F1A                     	;# 
   861  0F1B                     	;# 
   862  0F1C                     	;# 
   863  0F1D                     	;# 
   864  0F1E                     	;# 
   865  0F1F                     	;# 
   866  0F20                     	;# 
   867  0F21                     	;# 
   868  0F22                     	;# 
   869  0F23                     	;# 
   870  0F24                     	;# 
   871  0F25                     	;# 
   872  0F26                     	;# 
   873  0F27                     	;# 
   874  0F28                     	;# 
   875  0F29                     	;# 
   876  0F2A                     	;# 
   877  0F2B                     	;# 
   878  0F2C                     	;# 
   879  0F2D                     	;# 
   880  0F2E                     	;# 
   881  0F2F                     	;# 
   882  0F30                     	;# 
   883  0F31                     	;# 
   884  0F32                     	;# 
   885  0F33                     	;# 
   886  0F34                     	;# 
   887  0F35                     	;# 
   888  0F36                     	;# 
   889  0F37                     	;# 
   890  0FE4                     	;# 
   891  0FE5                     	;# 
   892  0FE6                     	;# 
   893  0FE7                     	;# 
   894  0FE8                     	;# 
   895  0FE9                     	;# 
   896  0FEA                     	;# 
   897  0FEB                     	;# 
   898  0FED                     	;# 
   899  0FEE                     	;# 
   900  0FEF                     	;# 
   901  0000                     	;# 
   902  0001                     	;# 
   903  0002                     	;# 
   904  0003                     	;# 
   905  0004                     	;# 
   906  0005                     	;# 
   907  0006                     	;# 
   908  0007                     	;# 
   909  0008                     	;# 
   910  0009                     	;# 
   911  000A                     	;# 
   912  000B                     	;# 
   913  000C                     	;# 
   914  000D                     	;# 
   915  000E                     	;# 
   916  0010                     	;# 
   917  0011                     	;# 
   918  0012                     	;# 
   919  0013                     	;# 
   920  0014                     	;# 
   921  0015                     	;# 
   922  0016                     	;# 
   923  0016                     	;# 
   924  0017                     	;# 
   925  0018                     	;# 
   926  0019                     	;# 
   927  001A                     	;# 
   928  001A                     	;# 
   929  001B                     	;# 
   930  001B                     	;# 
   931  001C                     	;# 
   932  001D                     	;# 
   933  001E                     	;# 
   934  001F                     	;# 
   935  008C                     	;# 
   936  008D                     	;# 
   937  008E                     	;# 
   938  0090                     	;# 
   939  0091                     	;# 
   940  0092                     	;# 
   941  0093                     	;# 
   942  0094                     	;# 
   943  0095                     	;# 
   944  0096                     	;# 
   945  0098                     	;# 
   946  0099                     	;# 
   947  009A                     	;# 
   948  009B                     	;# 
   949  009B                     	;# 
   950  009C                     	;# 
   951  009D                     	;# 
   952  009E                     	;# 
   953  009F                     	;# 
   954  010C                     	;# 
   955  010D                     	;# 
   956  010E                     	;# 
   957  0111                     	;# 
   958  0112                     	;# 
   959  0113                     	;# 
   960  0114                     	;# 
   961  0115                     	;# 
   962  0116                     	;# 
   963  0117                     	;# 
   964  0118                     	;# 
   965  0119                     	;# 
   966  011C                     	;# 
   967  018C                     	;# 
   968  018D                     	;# 
   969  018E                     	;# 
   970  0191                     	;# 
   971  0191                     	;# 
   972  0192                     	;# 
   973  0193                     	;# 
   974  0193                     	;# 
   975  0194                     	;# 
   976  0195                     	;# 
   977  0196                     	;# 
   978  0197                     	;# 
   979  0199                     	;# 
   980  0199                     	;# 
   981  0199                     	;# 
   982  019A                     	;# 
   983  019A                     	;# 
   984  019A                     	;# 
   985  019B                     	;# 
   986  019B                     	;# 
   987  019B                     	;# 
   988  019B                     	;# 
   989  019B                     	;# 
   990  019C                     	;# 
   991  019C                     	;# 
   992  019C                     	;# 
   993  019D                     	;# 
   994  019D                     	;# 
   995  019D                     	;# 
   996  019E                     	;# 
   997  019E                     	;# 
   998  019E                     	;# 
   999  019F                     	;# 
  1000  019F                     	;# 
  1001  019F                     	;# 
  1002  019F                     	;# 
  1003  019F                     	;# 
  1004  020C                     	;# 
  1005  020D                     	;# 
  1006  020E                     	;# 
  1007  0211                     	;# 
  1008  0211                     	;# 
  1009  0212                     	;# 
  1010  0212                     	;# 
  1011  0213                     	;# 
  1012  0213                     	;# 
  1013  0214                     	;# 
  1014  0214                     	;# 
  1015  0215                     	;# 
  1016  0215                     	;# 
  1017  0215                     	;# 
  1018  0215                     	;# 
  1019  0216                     	;# 
  1020  0216                     	;# 
  1021  0217                     	;# 
  1022  0217                     	;# 
  1023  028C                     	;# 
  1024  028D                     	;# 
  1025  028E                     	;# 
  1026  0291                     	;# 
  1027  0291                     	;# 
  1028  0292                     	;# 
  1029  0293                     	;# 
  1030  0294                     	;# 
  1031  0298                     	;# 
  1032  0298                     	;# 
  1033  0299                     	;# 
  1034  029A                     	;# 
  1035  029B                     	;# 
  1036  029E                     	;# 
  1037  030C                     	;# 
  1038  030D                     	;# 
  1039  030E                     	;# 
  1040  038C                     	;# 
  1041  038D                     	;# 
  1042  038E                     	;# 
  1043  0391                     	;# 
  1044  0392                     	;# 
  1045  0393                     	;# 
  1046  0394                     	;# 
  1047  0395                     	;# 
  1048  0396                     	;# 
  1049  0397                     	;# 
  1050  0398                     	;# 
  1051  0399                     	;# 
  1052  040E                     	;# 
  1053  0413                     	;# 
  1054  0413                     	;# 
  1055  0414                     	;# 
  1056  0414                     	;# 
  1057  0415                     	;# 
  1058  0416                     	;# 
  1059  0417                     	;# 
  1060  0418                     	;# 
  1061  041A                     	;# 
  1062  041A                     	;# 
  1063  041B                     	;# 
  1064  041B                     	;# 
  1065  041C                     	;# 
  1066  041D                     	;# 
  1067  041E                     	;# 
  1068  041F                     	;# 
  1069  0493                     	;# 
  1070  0494                     	;# 
  1071  0495                     	;# 
  1072  0496                     	;# 
  1073  049A                     	;# 
  1074  049B                     	;# 
  1075  049C                     	;# 
  1076  049D                     	;# 
  1077  058C                     	;# 
  1078  058C                     	;# 
  1079  058D                     	;# 
  1080  058E                     	;# 
  1081  058E                     	;# 
  1082  058F                     	;# 
  1083  0590                     	;# 
  1084  0590                     	;# 
  1085  0591                     	;# 
  1086  0592                     	;# 
  1087  0592                     	;# 
  1088  0593                     	;# 
  1089  0594                     	;# 
  1090  0594                     	;# 
  1091  0595                     	;# 
  1092  0596                     	;# 
  1093  0596                     	;# 
  1094  0597                     	;# 
  1095  0598                     	;# 
  1096  0599                     	;# 
  1097  059A                     	;# 
  1098  059B                     	;# 
  1099  059B                     	;# 
  1100  059C                     	;# 
  1101  059D                     	;# 
  1102  060C                     	;# 
  1103  060C                     	;# 
  1104  060D                     	;# 
  1105  060E                     	;# 
  1106  060F                     	;# 
  1107  060F                     	;# 
  1108  0610                     	;# 
  1109  0611                     	;# 
  1110  0612                     	;# 
  1111  0613                     	;# 
  1112  0614                     	;# 
  1113  0617                     	;# 
  1114  0618                     	;# 
  1115  0619                     	;# 
  1116  061A                     	;# 
  1117  061B                     	;# 
  1118  061C                     	;# 
  1119  0691                     	;# 
  1120  0692                     	;# 
  1121  0693                     	;# 
  1122  0694                     	;# 
  1123  0695                     	;# 
  1124  0696                     	;# 
  1125  0697                     	;# 
  1126  0699                     	;# 
  1127  069A                     	;# 
  1128  0711                     	;# 
  1129  0712                     	;# 
  1130  0713                     	;# 
  1131  0714                     	;# 
  1132  0715                     	;# 
  1133  0718                     	;# 
  1134  0718                     	;# 
  1135  0719                     	;# 
  1136  071A                     	;# 
  1137  071A                     	;# 
  1138  071B                     	;# 
  1139  071C                     	;# 
  1140  071D                     	;# 
  1141  0791                     	;# 
  1142  0791                     	;# 
  1143  0792                     	;# 
  1144  0793                     	;# 
  1145  0793                     	;# 
  1146  0794                     	;# 
  1147  0795                     	;# 
  1148  0795                     	;# 
  1149  0796                     	;# 
  1150  0797                     	;# 
  1151  0797                     	;# 
  1152  0798                     	;# 
  1153  0799                     	;# 
  1154  079A                     	;# 
  1155  080C                     	;# 
  1156  080C                     	;# 
  1157  080D                     	;# 
  1158  080E                     	;# 
  1159  080E                     	;# 
  1160  080F                     	;# 
  1161  0810                     	;# 
  1162  0810                     	;# 
  1163  0811                     	;# 
  1164  0812                     	;# 
  1165  0812                     	;# 
  1166  0813                     	;# 
  1167  0814                     	;# 
  1168  0815                     	;# 
  1169  0816                     	;# 
  1170  0817                     	;# 
  1171  0818                     	;# 
  1172  0819                     	;# 
  1173  081A                     	;# 
  1174  081A                     	;# 
  1175  081B                     	;# 
  1176  081C                     	;# 
  1177  081C                     	;# 
  1178  081D                     	;# 
  1179  088C                     	;# 
  1180  088D                     	;# 
  1181  088E                     	;# 
  1182  088F                     	;# 
  1183  088F                     	;# 
  1184  0890                     	;# 
  1185  0891                     	;# 
  1186  0892                     	;# 
  1187  0893                     	;# 
  1188  0893                     	;# 
  1189  0894                     	;# 
  1190  0895                     	;# 
  1191  0896                     	;# 
  1192  0897                     	;# 
  1193  0897                     	;# 
  1194  0898                     	;# 
  1195  0899                     	;# 
  1196  0D8C                     	;# 
  1197  0D8C                     	;# 
  1198  0D8D                     	;# 
  1199  0D8E                     	;# 
  1200  0D8F                     	;# 
  1201  0D8F                     	;# 
  1202  0D90                     	;# 
  1203  0D91                     	;# 
  1204  0D92                     	;# 
  1205  0D92                     	;# 
  1206  0D93                     	;# 
  1207  0D94                     	;# 
  1208  0D95                     	;# 
  1209  0D95                     	;# 
  1210  0D96                     	;# 
  1211  0D97                     	;# 
  1212  0D98                     	;# 
  1213  0D99                     	;# 
  1214  0D9A                     	;# 
  1215  0D9B                     	;# 
  1216  0D9C                     	;# 
  1217  0D9D                     	;# 
  1218  0D9E                     	;# 
  1219  0D9E                     	;# 
  1220  0D9F                     	;# 
  1221  0DA0                     	;# 
  1222  0DA1                     	;# 
  1223  0DA1                     	;# 
  1224  0DA2                     	;# 
  1225  0DA3                     	;# 
  1226  0DA4                     	;# 
  1227  0DA4                     	;# 
  1228  0DA5                     	;# 
  1229  0DA6                     	;# 
  1230  0DA7                     	;# 
  1231  0DA7                     	;# 
  1232  0DA8                     	;# 
  1233  0DA9                     	;# 
  1234  0DAA                     	;# 
  1235  0DAB                     	;# 
  1236  0DAC                     	;# 
  1237  0DAD                     	;# 
  1238  0DAE                     	;# 
  1239  0DAF                     	;# 
  1240  0E0F                     	;# 
  1241  0E10                     	;# 
  1242  0E11                     	;# 
  1243  0E12                     	;# 
  1244  0E13                     	;# 
  1245  0E14                     	;# 
  1246  0E15                     	;# 
  1247  0E16                     	;# 
  1248  0E17                     	;# 
  1249  0E18                     	;# 
  1250  0E19                     	;# 
  1251  0E1A                     	;# 
  1252  0E1B                     	;# 
  1253  0E1C                     	;# 
  1254  0E1D                     	;# 
  1255  0E1E                     	;# 
  1256  0E1F                     	;# 
  1257  0E20                     	;# 
  1258  0E21                     	;# 
  1259  0E22                     	;# 
  1260  0E23                     	;# 
  1261  0E24                     	;# 
  1262  0E25                     	;# 
  1263  0E26                     	;# 
  1264  0E27                     	;# 
  1265  0E28                     	;# 
  1266  0E29                     	;# 
  1267  0E2A                     	;# 
  1268  0E2B                     	;# 
  1269  0E2C                     	;# 
  1270  0E2D                     	;# 
  1271  0E2E                     	;# 
  1272  0E90                     	;# 
  1273  0E91                     	;# 
  1274  0E92                     	;# 
  1275  0E94                     	;# 
  1276  0E95                     	;# 
  1277  0E9C                     	;# 
  1278  0E9D                     	;# 
  1279  0E9E                     	;# 
  1280  0E9F                     	;# 
  1281  0EA0                     	;# 
  1282  0EA1                     	;# 
  1283  0EA2                     	;# 
  1284  0EA3                     	;# 
  1285  0EA4                     	;# 
  1286  0EA5                     	;# 
  1287  0EA6                     	;# 
  1288  0EA7                     	;# 
  1289  0F0F                     	;# 
  1290  0F10                     	;# 
  1291  0F11                     	;# 
  1292  0F12                     	;# 
  1293  0F13                     	;# 
  1294  0F14                     	;# 
  1295  0F15                     	;# 
  1296  0F16                     	;# 
  1297  0F17                     	;# 
  1298  0F18                     	;# 
  1299  0F19                     	;# 
  1300  0F1A                     	;# 
  1301  0F1B                     	;# 
  1302  0F1C                     	;# 
  1303  0F1D                     	;# 
  1304  0F1E                     	;# 
  1305  0F1F                     	;# 
  1306  0F20                     	;# 
  1307  0F21                     	;# 
  1308  0F22                     	;# 
  1309  0F23                     	;# 
  1310  0F24                     	;# 
  1311  0F25                     	;# 
  1312  0F26                     	;# 
  1313  0F27                     	;# 
  1314  0F28                     	;# 
  1315  0F29                     	;# 
  1316  0F2A                     	;# 
  1317  0F2B                     	;# 
  1318  0F2C                     	;# 
  1319  0F2D                     	;# 
  1320  0F2E                     	;# 
  1321  0F2F                     	;# 
  1322  0F30                     	;# 
  1323  0F31                     	;# 
  1324  0F32                     	;# 
  1325  0F33                     	;# 
  1326  0F34                     	;# 
  1327  0F35                     	;# 
  1328  0F36                     	;# 
  1329  0F37                     	;# 
  1330  0FE4                     	;# 
  1331  0FE5                     	;# 
  1332  0FE6                     	;# 
  1333  0FE7                     	;# 
  1334  0FE8                     	;# 
  1335  0FE9                     	;# 
  1336  0FEA                     	;# 
  1337  0FEB                     	;# 
  1338  0FED                     	;# 
  1339  0FEE                     	;# 
  1340  0FEF                     	;# 
  1341  0000                     	;# 
  1342  0001                     	;# 
  1343  0002                     	;# 
  1344  0003                     	;# 
  1345  0004                     	;# 
  1346  0005                     	;# 
  1347  0006                     	;# 
  1348  0007                     	;# 
  1349  0008                     	;# 
  1350  0009                     	;# 
  1351  000A                     	;# 
  1352  000B                     	;# 
  1353  000C                     	;# 
  1354  000D                     	;# 
  1355  000E                     	;# 
  1356  0010                     	;# 
  1357  0011                     	;# 
  1358  0012                     	;# 
  1359  0013                     	;# 
  1360  0014                     	;# 
  1361  0015                     	;# 
  1362  0016                     	;# 
  1363  0016                     	;# 
  1364  0017                     	;# 
  1365  0018                     	;# 
  1366  0019                     	;# 
  1367  001A                     	;# 
  1368  001A                     	;# 
  1369  001B                     	;# 
  1370  001B                     	;# 
  1371  001C                     	;# 
  1372  001D                     	;# 
  1373  001E                     	;# 
  1374  001F                     	;# 
  1375  008C                     	;# 
  1376  008D                     	;# 
  1377  008E                     	;# 
  1378  0090                     	;# 
  1379  0091                     	;# 
  1380  0092                     	;# 
  1381  0093                     	;# 
  1382  0094                     	;# 
  1383  0095                     	;# 
  1384  0096                     	;# 
  1385  0098                     	;# 
  1386  0099                     	;# 
  1387  009A                     	;# 
  1388  009B                     	;# 
  1389  009B                     	;# 
  1390  009C                     	;# 
  1391  009D                     	;# 
  1392  009E                     	;# 
  1393  009F                     	;# 
  1394  010C                     	;# 
  1395  010D                     	;# 
  1396  010E                     	;# 
  1397  0111                     	;# 
  1398  0112                     	;# 
  1399  0113                     	;# 
  1400  0114                     	;# 
  1401  0115                     	;# 
  1402  0116                     	;# 
  1403  0117                     	;# 
  1404  0118                     	;# 
  1405  0119                     	;# 
  1406  011C                     	;# 
  1407  018C                     	;# 
  1408  018D                     	;# 
  1409  018E                     	;# 
  1410  0191                     	;# 
  1411  0191                     	;# 
  1412  0192                     	;# 
  1413  0193                     	;# 
  1414  0193                     	;# 
  1415  0194                     	;# 
  1416  0195                     	;# 
  1417  0196                     	;# 
  1418  0197                     	;# 
  1419  0199                     	;# 
  1420  0199                     	;# 
  1421  0199                     	;# 
  1422  019A                     	;# 
  1423  019A                     	;# 
  1424  019A                     	;# 
  1425  019B                     	;# 
  1426  019B                     	;# 
  1427  019B                     	;# 
  1428  019B                     	;# 
  1429  019B                     	;# 
  1430  019C                     	;# 
  1431  019C                     	;# 
  1432  019C                     	;# 
  1433  019D                     	;# 
  1434  019D                     	;# 
  1435  019D                     	;# 
  1436  019E                     	;# 
  1437  019E                     	;# 
  1438  019E                     	;# 
  1439  019F                     	;# 
  1440  019F                     	;# 
  1441  019F                     	;# 
  1442  019F                     	;# 
  1443  019F                     	;# 
  1444  020C                     	;# 
  1445  020D                     	;# 
  1446  020E                     	;# 
  1447  0211                     	;# 
  1448  0211                     	;# 
  1449  0212                     	;# 
  1450  0212                     	;# 
  1451  0213                     	;# 
  1452  0213                     	;# 
  1453  0214                     	;# 
  1454  0214                     	;# 
  1455  0215                     	;# 
  1456  0215                     	;# 
  1457  0215                     	;# 
  1458  0215                     	;# 
  1459  0216                     	;# 
  1460  0216                     	;# 
  1461  0217                     	;# 
  1462  0217                     	;# 
  1463  028C                     	;# 
  1464  028D                     	;# 
  1465  028E                     	;# 
  1466  0291                     	;# 
  1467  0291                     	;# 
  1468  0292                     	;# 
  1469  0293                     	;# 
  1470  0294                     	;# 
  1471  0298                     	;# 
  1472  0298                     	;# 
  1473  0299                     	;# 
  1474  029A                     	;# 
  1475  029B                     	;# 
  1476  029E                     	;# 
  1477  030C                     	;# 
  1478  030D                     	;# 
  1479  030E                     	;# 
  1480  038C                     	;# 
  1481  038D                     	;# 
  1482  038E                     	;# 
  1483  0391                     	;# 
  1484  0392                     	;# 
  1485  0393                     	;# 
  1486  0394                     	;# 
  1487  0395                     	;# 
  1488  0396                     	;# 
  1489  0397                     	;# 
  1490  0398                     	;# 
  1491  0399                     	;# 
  1492  040E                     	;# 
  1493  0413                     	;# 
  1494  0413                     	;# 
  1495  0414                     	;# 
  1496  0414                     	;# 
  1497  0415                     	;# 
  1498  0416                     	;# 
  1499  0417                     	;# 
  1500  0418                     	;# 
  1501  041A                     	;# 
  1502  041A                     	;# 
  1503  041B                     	;# 
  1504  041B                     	;# 
  1505  041C                     	;# 
  1506  041D                     	;# 
  1507  041E                     	;# 
  1508  041F                     	;# 
  1509  0493                     	;# 
  1510  0494                     	;# 
  1511  0495                     	;# 
  1512  0496                     	;# 
  1513  049A                     	;# 
  1514  049B                     	;# 
  1515  049C                     	;# 
  1516  049D                     	;# 
  1517  058C                     	;# 
  1518  058C                     	;# 
  1519  058D                     	;# 
  1520  058E                     	;# 
  1521  058E                     	;# 
  1522  058F                     	;# 
  1523  0590                     	;# 
  1524  0590                     	;# 
  1525  0591                     	;# 
  1526  0592                     	;# 
  1527  0592                     	;# 
  1528  0593                     	;# 
  1529  0594                     	;# 
  1530  0594                     	;# 
  1531  0595                     	;# 
  1532  0596                     	;# 
  1533  0596                     	;# 
  1534  0597                     	;# 
  1535  0598                     	;# 
  1536  0599                     	;# 
  1537  059A                     	;# 
  1538  059B                     	;# 
  1539  059B                     	;# 
  1540  059C                     	;# 
  1541  059D                     	;# 
  1542  060C                     	;# 
  1543  060C                     	;# 
  1544  060D                     	;# 
  1545  060E                     	;# 
  1546  060F                     	;# 
  1547  060F                     	;# 
  1548  0610                     	;# 
  1549  0611                     	;# 
  1550  0612                     	;# 
  1551  0613                     	;# 
  1552  0614                     	;# 
  1553  0617                     	;# 
  1554  0618                     	;# 
  1555  0619                     	;# 
  1556  061A                     	;# 
  1557  061B                     	;# 
  1558  061C                     	;# 
  1559  0691                     	;# 
  1560  0692                     	;# 
  1561  0693                     	;# 
  1562  0694                     	;# 
  1563  0695                     	;# 
  1564  0696                     	;# 
  1565  0697                     	;# 
  1566  0699                     	;# 
  1567  069A                     	;# 
  1568  0711                     	;# 
  1569  0712                     	;# 
  1570  0713                     	;# 
  1571  0714                     	;# 
  1572  0715                     	;# 
  1573  0718                     	;# 
  1574  0718                     	;# 
  1575  0719                     	;# 
  1576  071A                     	;# 
  1577  071A                     	;# 
  1578  071B                     	;# 
  1579  071C                     	;# 
  1580  071D                     	;# 
  1581  0791                     	;# 
  1582  0791                     	;# 
  1583  0792                     	;# 
  1584  0793                     	;# 
  1585  0793                     	;# 
  1586  0794                     	;# 
  1587  0795                     	;# 
  1588  0795                     	;# 
  1589  0796                     	;# 
  1590  0797                     	;# 
  1591  0797                     	;# 
  1592  0798                     	;# 
  1593  0799                     	;# 
  1594  079A                     	;# 
  1595  080C                     	;# 
  1596  080C                     	;# 
  1597  080D                     	;# 
  1598  080E                     	;# 
  1599  080E                     	;# 
  1600  080F                     	;# 
  1601  0810                     	;# 
  1602  0810                     	;# 
  1603  0811                     	;# 
  1604  0812                     	;# 
  1605  0812                     	;# 
  1606  0813                     	;# 
  1607  0814                     	;# 
  1608  0815                     	;# 
  1609  0816                     	;# 
  1610  0817                     	;# 
  1611  0818                     	;# 
  1612  0819                     	;# 
  1613  081A                     	;# 
  1614  081A                     	;# 
  1615  081B                     	;# 
  1616  081C                     	;# 
  1617  081C                     	;# 
  1618  081D                     	;# 
  1619  088C                     	;# 
  1620  088D                     	;# 
  1621  088E                     	;# 
  1622  088F                     	;# 
  1623  088F                     	;# 
  1624  0890                     	;# 
  1625  0891                     	;# 
  1626  0892                     	;# 
  1627  0893                     	;# 
  1628  0893                     	;# 
  1629  0894                     	;# 
  1630  0895                     	;# 
  1631  0896                     	;# 
  1632  0897                     	;# 
  1633  0897                     	;# 
  1634  0898                     	;# 
  1635  0899                     	;# 
  1636  0D8C                     	;# 
  1637  0D8C                     	;# 
  1638  0D8D                     	;# 
  1639  0D8E                     	;# 
  1640  0D8F                     	;# 
  1641  0D8F                     	;# 
  1642  0D90                     	;# 
  1643  0D91                     	;# 
  1644  0D92                     	;# 
  1645  0D92                     	;# 
  1646  0D93                     	;# 
  1647  0D94                     	;# 
  1648  0D95                     	;# 
  1649  0D95                     	;# 
  1650  0D96                     	;# 
  1651  0D97                     	;# 
  1652  0D98                     	;# 
  1653  0D99                     	;# 
  1654  0D9A                     	;# 
  1655  0D9B                     	;# 
  1656  0D9C                     	;# 
  1657  0D9D                     	;# 
  1658  0D9E                     	;# 
  1659  0D9E                     	;# 
  1660  0D9F                     	;# 
  1661  0DA0                     	;# 
  1662  0DA1                     	;# 
  1663  0DA1                     	;# 
  1664  0DA2                     	;# 
  1665  0DA3                     	;# 
  1666  0DA4                     	;# 
  1667  0DA4                     	;# 
  1668  0DA5                     	;# 
  1669  0DA6                     	;# 
  1670  0DA7                     	;# 
  1671  0DA7                     	;# 
  1672  0DA8                     	;# 
  1673  0DA9                     	;# 
  1674  0DAA                     	;# 
  1675  0DAB                     	;# 
  1676  0DAC                     	;# 
  1677  0DAD                     	;# 
  1678  0DAE                     	;# 
  1679  0DAF                     	;# 
  1680  0E0F                     	;# 
  1681  0E10                     	;# 
  1682  0E11                     	;# 
  1683  0E12                     	;# 
  1684  0E13                     	;# 
  1685  0E14                     	;# 
  1686  0E15                     	;# 
  1687  0E16                     	;# 
  1688  0E17                     	;# 
  1689  0E18                     	;# 
  1690  0E19                     	;# 
  1691  0E1A                     	;# 
  1692  0E1B                     	;# 
  1693  0E1C                     	;# 
  1694  0E1D                     	;# 
  1695  0E1E                     	;# 
  1696  0E1F                     	;# 
  1697  0E20                     	;# 
  1698  0E21                     	;# 
  1699  0E22                     	;# 
  1700  0E23                     	;# 
  1701  0E24                     	;# 
  1702  0E25                     	;# 
  1703  0E26                     	;# 
  1704  0E27                     	;# 
  1705  0E28                     	;# 
  1706  0E29                     	;# 
  1707  0E2A                     	;# 
  1708  0E2B                     	;# 
  1709  0E2C                     	;# 
  1710  0E2D                     	;# 
  1711  0E2E                     	;# 
  1712  0E90                     	;# 
  1713  0E91                     	;# 
  1714  0E92                     	;# 
  1715  0E94                     	;# 
  1716  0E95                     	;# 
  1717  0E9C                     	;# 
  1718  0E9D                     	;# 
  1719  0E9E                     	;# 
  1720  0E9F                     	;# 
  1721  0EA0                     	;# 
  1722  0EA1                     	;# 
  1723  0EA2                     	;# 
  1724  0EA3                     	;# 
  1725  0EA4                     	;# 
  1726  0EA5                     	;# 
  1727  0EA6                     	;# 
  1728  0EA7                     	;# 
  1729  0F0F                     	;# 
  1730  0F10                     	;# 
  1731  0F11                     	;# 
  1732  0F12                     	;# 
  1733  0F13                     	;# 
  1734  0F14                     	;# 
  1735  0F15                     	;# 
  1736  0F16                     	;# 
  1737  0F17                     	;# 
  1738  0F18                     	;# 
  1739  0F19                     	;# 
  1740  0F1A                     	;# 
  1741  0F1B                     	;# 
  1742  0F1C                     	;# 
  1743  0F1D                     	;# 
  1744  0F1E                     	;# 
  1745  0F1F                     	;# 
  1746  0F20                     	;# 
  1747  0F21                     	;# 
  1748  0F22                     	;# 
  1749  0F23                     	;# 
  1750  0F24                     	;# 
  1751  0F25                     	;# 
  1752  0F26                     	;# 
  1753  0F27                     	;# 
  1754  0F28                     	;# 
  1755  0F29                     	;# 
  1756  0F2A                     	;# 
  1757  0F2B                     	;# 
  1758  0F2C                     	;# 
  1759  0F2D                     	;# 
  1760  0F2E                     	;# 
  1761  0F2F                     	;# 
  1762  0F30                     	;# 
  1763  0F31                     	;# 
  1764  0F32                     	;# 
  1765  0F33                     	;# 
  1766  0F34                     	;# 
  1767  0F35                     	;# 
  1768  0F36                     	;# 
  1769  0F37                     	;# 
  1770  0FE4                     	;# 
  1771  0FE5                     	;# 
  1772  0FE6                     	;# 
  1773  0FE7                     	;# 
  1774  0FE8                     	;# 
  1775  0FE9                     	;# 
  1776  0FEA                     	;# 
  1777  0FEB                     	;# 
  1778  0FED                     	;# 
  1779  0FEE                     	;# 
  1780  0FEF                     	;# 
  1781  0000                     	;# 
  1782  0001                     	;# 
  1783  0002                     	;# 
  1784  0003                     	;# 
  1785  0004                     	;# 
  1786  0005                     	;# 
  1787  0006                     	;# 
  1788  0007                     	;# 
  1789  0008                     	;# 
  1790  0009                     	;# 
  1791  000A                     	;# 
  1792  000B                     	;# 
  1793  000C                     	;# 
  1794  000D                     	;# 
  1795  000E                     	;# 
  1796  0010                     	;# 
  1797  0011                     	;# 
  1798  0012                     	;# 
  1799  0013                     	;# 
  1800  0014                     	;# 
  1801  0015                     	;# 
  1802  0016                     	;# 
  1803  0016                     	;# 
  1804  0017                     	;# 
  1805  0018                     	;# 
  1806  0019                     	;# 
  1807  001A                     	;# 
  1808  001A                     	;# 
  1809  001B                     	;# 
  1810  001B                     	;# 
  1811  001C                     	;# 
  1812  001D                     	;# 
  1813  001E                     	;# 
  1814  001F                     	;# 
  1815  008C                     	;# 
  1816  008D                     	;# 
  1817  008E                     	;# 
  1818  0090                     	;# 
  1819  0091                     	;# 
  1820  0092                     	;# 
  1821  0093                     	;# 
  1822  0094                     	;# 
  1823  0095                     	;# 
  1824  0096                     	;# 
  1825  0098                     	;# 
  1826  0099                     	;# 
  1827  009A                     	;# 
  1828  009B                     	;# 
  1829  009B                     	;# 
  1830  009C                     	;# 
  1831  009D                     	;# 
  1832  009E                     	;# 
  1833  009F                     	;# 
  1834  010C                     	;# 
  1835  010D                     	;# 
  1836  010E                     	;# 
  1837  0111                     	;# 
  1838  0112                     	;# 
  1839  0113                     	;# 
  1840  0114                     	;# 
  1841  0115                     	;# 
  1842  0116                     	;# 
  1843  0117                     	;# 
  1844  0118                     	;# 
  1845  0119                     	;# 
  1846  011C                     	;# 
  1847  018C                     	;# 
  1848  018D                     	;# 
  1849  018E                     	;# 
  1850  0191                     	;# 
  1851  0191                     	;# 
  1852  0192                     	;# 
  1853  0193                     	;# 
  1854  0193                     	;# 
  1855  0194                     	;# 
  1856  0195                     	;# 
  1857  0196                     	;# 
  1858  0197                     	;# 
  1859  0199                     	;# 
  1860  0199                     	;# 
  1861  0199                     	;# 
  1862  019A                     	;# 
  1863  019A                     	;# 
  1864  019A                     	;# 
  1865  019B                     	;# 
  1866  019B                     	;# 
  1867  019B                     	;# 
  1868  019B                     	;# 
  1869  019B                     	;# 
  1870  019C                     	;# 
  1871  019C                     	;# 
  1872  019C                     	;# 
  1873  019D                     	;# 
  1874  019D                     	;# 
  1875  019D                     	;# 
  1876  019E                     	;# 
  1877  019E                     	;# 
  1878  019E                     	;# 
  1879  019F                     	;# 
  1880  019F                     	;# 
  1881  019F                     	;# 
  1882  019F                     	;# 
  1883  019F                     	;# 
  1884  020C                     	;# 
  1885  020D                     	;# 
  1886  020E                     	;# 
  1887  0211                     	;# 
  1888  0211                     	;# 
  1889  0212                     	;# 
  1890  0212                     	;# 
  1891  0213                     	;# 
  1892  0213                     	;# 
  1893  0214                     	;# 
  1894  0214                     	;# 
  1895  0215                     	;# 
  1896  0215                     	;# 
  1897  0215                     	;# 
  1898  0215                     	;# 
  1899  0216                     	;# 
  1900  0216                     	;# 
  1901  0217                     	;# 
  1902  0217                     	;# 
  1903  028C                     	;# 
  1904  028D                     	;# 
  1905  028E                     	;# 
  1906  0291                     	;# 
  1907  0291                     	;# 
  1908  0292                     	;# 
  1909  0293                     	;# 
  1910  0294                     	;# 
  1911  0298                     	;# 
  1912  0298                     	;# 
  1913  0299                     	;# 
  1914  029A                     	;# 
  1915  029B                     	;# 
  1916  029E                     	;# 
  1917  030C                     	;# 
  1918  030D                     	;# 
  1919  030E                     	;# 
  1920  038C                     	;# 
  1921  038D                     	;# 
  1922  038E                     	;# 
  1923  0391                     	;# 
  1924  0392                     	;# 
  1925  0393                     	;# 
  1926  0394                     	;# 
  1927  0395                     	;# 
  1928  0396                     	;# 
  1929  0397                     	;# 
  1930  0398                     	;# 
  1931  0399                     	;# 
  1932  040E                     	;# 
  1933  0413                     	;# 
  1934  0413                     	;# 
  1935  0414                     	;# 
  1936  0414                     	;# 
  1937  0415                     	;# 
  1938  0416                     	;# 
  1939  0417                     	;# 
  1940  0418                     	;# 
  1941  041A                     	;# 
  1942  041A                     	;# 
  1943  041B                     	;# 
  1944  041B                     	;# 
  1945  041C                     	;# 
  1946  041D                     	;# 
  1947  041E                     	;# 
  1948  041F                     	;# 
  1949  0493                     	;# 
  1950  0494                     	;# 
  1951  0495                     	;# 
  1952  0496                     	;# 
  1953  049A                     	;# 
  1954  049B                     	;# 
  1955  049C                     	;# 
  1956  049D                     	;# 
  1957  058C                     	;# 
  1958  058C                     	;# 
  1959  058D                     	;# 
  1960  058E                     	;# 
  1961  058E                     	;# 
  1962  058F                     	;# 
  1963  0590                     	;# 
  1964  0590                     	;# 
  1965  0591                     	;# 
  1966  0592                     	;# 
  1967  0592                     	;# 
  1968  0593                     	;# 
  1969  0594                     	;# 
  1970  0594                     	;# 
  1971  0595                     	;# 
  1972  0596                     	;# 
  1973  0596                     	;# 
  1974  0597                     	;# 
  1975  0598                     	;# 
  1976  0599                     	;# 
  1977  059A                     	;# 
  1978  059B                     	;# 
  1979  059B                     	;# 
  1980  059C                     	;# 
  1981  059D                     	;# 
  1982  060C                     	;# 
  1983  060C                     	;# 
  1984  060D                     	;# 
  1985  060E                     	;# 
  1986  060F                     	;# 
  1987  060F                     	;# 
  1988  0610                     	;# 
  1989  0611                     	;# 
  1990  0612                     	;# 
  1991  0613                     	;# 
  1992  0614                     	;# 
  1993  0617                     	;# 
  1994  0618                     	;# 
  1995  0619                     	;# 
  1996  061A                     	;# 
  1997  061B                     	;# 
  1998  061C                     	;# 
  1999  0691                     	;# 
  2000  0692                     	;# 
  2001  0693                     	;# 
  2002  0694                     	;# 
  2003  0695                     	;# 
  2004  0696                     	;# 
  2005  0697                     	;# 
  2006  0699                     	;# 
  2007  069A                     	;# 
  2008  0711                     	;# 
  2009  0712                     	;# 
  2010  0713                     	;# 
  2011  0714                     	;# 
  2012  0715                     	;# 
  2013  0718                     	;# 
  2014  0718                     	;# 
  2015  0719                     	;# 
  2016  071A                     	;# 
  2017  071A                     	;# 
  2018  071B                     	;# 
  2019  071C                     	;# 
  2020  071D                     	;# 
  2021  0791                     	;# 
  2022  0791                     	;# 
  2023  0792                     	;# 
  2024  0793                     	;# 
  2025  0793                     	;# 
  2026  0794                     	;# 
  2027  0795                     	;# 
  2028  0795                     	;# 
  2029  0796                     	;# 
  2030  0797                     	;# 
  2031  0797                     	;# 
  2032  0798                     	;# 
  2033  0799                     	;# 
  2034  079A                     	;# 
  2035  080C                     	;# 
  2036  080C                     	;# 
  2037  080D                     	;# 
  2038  080E                     	;# 
  2039  080E                     	;# 
  2040  080F                     	;# 
  2041  0810                     	;# 
  2042  0810                     	;# 
  2043  0811                     	;# 
  2044  0812                     	;# 
  2045  0812                     	;# 
  2046  0813                     	;# 
  2047  0814                     	;# 
  2048  0815                     	;# 
  2049  0816                     	;# 
  2050  0817                     	;# 
  2051  0818                     	;# 
  2052  0819                     	;# 
  2053  081A                     	;# 
  2054  081A                     	;# 
  2055  081B                     	;# 
  2056  081C                     	;# 
  2057  081C                     	;# 
  2058  081D                     	;# 
  2059  088C                     	;# 
  2060  088D                     	;# 
  2061  088E                     	;# 
  2062  088F                     	;# 
  2063  088F                     	;# 
  2064  0890                     	;# 
  2065  0891                     	;# 
  2066  0892                     	;# 
  2067  0893                     	;# 
  2068  0893                     	;# 
  2069  0894                     	;# 
  2070  0895                     	;# 
  2071  0896                     	;# 
  2072  0897                     	;# 
  2073  0897                     	;# 
  2074  0898                     	;# 
  2075  0899                     	;# 
  2076  0D8C                     	;# 
  2077  0D8C                     	;# 
  2078  0D8D                     	;# 
  2079  0D8E                     	;# 
  2080  0D8F                     	;# 
  2081  0D8F                     	;# 
  2082  0D90                     	;# 
  2083  0D91                     	;# 
  2084  0D92                     	;# 
  2085  0D92                     	;# 
  2086  0D93                     	;# 
  2087  0D94                     	;# 
  2088  0D95                     	;# 
  2089  0D95                     	;# 
  2090  0D96                     	;# 
  2091  0D97                     	;# 
  2092  0D98                     	;# 
  2093  0D99                     	;# 
  2094  0D9A                     	;# 
  2095  0D9B                     	;# 
  2096  0D9C                     	;# 
  2097  0D9D                     	;# 
  2098  0D9E                     	;# 
  2099  0D9E                     	;# 
  2100  0D9F                     	;# 
  2101  0DA0                     	;# 
  2102  0DA1                     	;# 
  2103  0DA1                     	;# 
  2104  0DA2                     	;# 
  2105  0DA3                     	;# 
  2106  0DA4                     	;# 
  2107  0DA4                     	;# 
  2108  0DA5                     	;# 
  2109  0DA6                     	;# 
  2110  0DA7                     	;# 
  2111  0DA7                     	;# 
  2112  0DA8                     	;# 
  2113  0DA9                     	;# 
  2114  0DAA                     	;# 
  2115  0DAB                     	;# 
  2116  0DAC                     	;# 
  2117  0DAD                     	;# 
  2118  0DAE                     	;# 
  2119  0DAF                     	;# 
  2120  0E0F                     	;# 
  2121  0E10                     	;# 
  2122  0E11                     	;# 
  2123  0E12                     	;# 
  2124  0E13                     	;# 
  2125  0E14                     	;# 
  2126  0E15                     	;# 
  2127  0E16                     	;# 
  2128  0E17                     	;# 
  2129  0E18                     	;# 
  2130  0E19                     	;# 
  2131  0E1A                     	;# 
  2132  0E1B                     	;# 
  2133  0E1C                     	;# 
  2134  0E1D                     	;# 
  2135  0E1E                     	;# 
  2136  0E1F                     	;# 
  2137  0E20                     	;# 
  2138  0E21                     	;# 
  2139  0E22                     	;# 
  2140  0E23                     	;# 
  2141  0E24                     	;# 
  2142  0E25                     	;# 
  2143  0E26                     	;# 
  2144  0E27                     	;# 
  2145  0E28                     	;# 
  2146  0E29                     	;# 
  2147  0E2A                     	;# 
  2148  0E2B                     	;# 
  2149  0E2C                     	;# 
  2150  0E2D                     	;# 
  2151  0E2E                     	;# 
  2152  0E90                     	;# 
  2153  0E91                     	;# 
  2154  0E92                     	;# 
  2155  0E94                     	;# 
  2156  0E95                     	;# 
  2157  0E9C                     	;# 
  2158  0E9D                     	;# 
  2159  0E9E                     	;# 
  2160  0E9F                     	;# 
  2161  0EA0                     	;# 
  2162  0EA1                     	;# 
  2163  0EA2                     	;# 
  2164  0EA3                     	;# 
  2165  0EA4                     	;# 
  2166  0EA5                     	;# 
  2167  0EA6                     	;# 
  2168  0EA7                     	;# 
  2169  0F0F                     	;# 
  2170  0F10                     	;# 
  2171  0F11                     	;# 
  2172  0F12                     	;# 
  2173  0F13                     	;# 
  2174  0F14                     	;# 
  2175  0F15                     	;# 
  2176  0F16                     	;# 
  2177  0F17                     	;# 
  2178  0F18                     	;# 
  2179  0F19                     	;# 
  2180  0F1A                     	;# 
  2181  0F1B                     	;# 
  2182  0F1C                     	;# 
  2183  0F1D                     	;# 
  2184  0F1E                     	;# 
  2185  0F1F                     	;# 
  2186  0F20                     	;# 
  2187  0F21                     	;# 
  2188  0F22                     	;# 
  2189  0F23                     	;# 
  2190  0F24                     	;# 
  2191  0F25                     	;# 
  2192  0F26                     	;# 
  2193  0F27                     	;# 
  2194  0F28                     	;# 
  2195  0F29                     	;# 
  2196  0F2A                     	;# 
  2197  0F2B                     	;# 
  2198  0F2C                     	;# 
  2199  0F2D                     	;# 
  2200  0F2E                     	;# 
  2201  0F2F                     	;# 
  2202  0F30                     	;# 
  2203  0F31                     	;# 
  2204  0F32                     	;# 
  2205  0F33                     	;# 
  2206  0F34                     	;# 
  2207  0F35                     	;# 
  2208  0F36                     	;# 
  2209  0F37                     	;# 
  2210  0FE4                     	;# 
  2211  0FE5                     	;# 
  2212  0FE6                     	;# 
  2213  0FE7                     	;# 
  2214  0FE8                     	;# 
  2215  0FE9                     	;# 
  2216  0FEA                     	;# 
  2217  0FEB                     	;# 
  2218  0FED                     	;# 
  2219  0FEE                     	;# 
  2220  0FEF                     	;# 
  2221  0000                     	;# 
  2222  0001                     	;# 
  2223  0002                     	;# 
  2224  0003                     	;# 
  2225  0004                     	;# 
  2226  0005                     	;# 
  2227  0006                     	;# 
  2228  0007                     	;# 
  2229  0008                     	;# 
  2230  0009                     	;# 
  2231  000A                     	;# 
  2232  000B                     	;# 
  2233  000C                     	;# 
  2234  000D                     	;# 
  2235  000E                     	;# 
  2236  0010                     	;# 
  2237  0011                     	;# 
  2238  0012                     	;# 
  2239  0013                     	;# 
  2240  0014                     	;# 
  2241  0015                     	;# 
  2242  0016                     	;# 
  2243  0016                     	;# 
  2244  0017                     	;# 
  2245  0018                     	;# 
  2246  0019                     	;# 
  2247  001A                     	;# 
  2248  001A                     	;# 
  2249  001B                     	;# 
  2250  001B                     	;# 
  2251  001C                     	;# 
  2252  001D                     	;# 
  2253  001E                     	;# 
  2254  001F                     	;# 
  2255  008C                     	;# 
  2256  008D                     	;# 
  2257  008E                     	;# 
  2258  0090                     	;# 
  2259  0091                     	;# 
  2260  0092                     	;# 
  2261  0093                     	;# 
  2262  0094                     	;# 
  2263  0095                     	;# 
  2264  0096                     	;# 
  2265  0098                     	;# 
  2266  0099                     	;# 
  2267  009A                     	;# 
  2268  009B                     	;# 
  2269  009B                     	;# 
  2270  009C                     	;# 
  2271  009D                     	;# 
  2272  009E                     	;# 
  2273  009F                     	;# 
  2274  010C                     	;# 
  2275  010D                     	;# 
  2276  010E                     	;# 
  2277  0111                     	;# 
  2278  0112                     	;# 
  2279  0113                     	;# 
  2280  0114                     	;# 
  2281  0115                     	;# 
  2282  0116                     	;# 
  2283  0117                     	;# 
  2284  0118                     	;# 
  2285  0119                     	;# 
  2286  011C                     	;# 
  2287  018C                     	;# 
  2288  018D                     	;# 
  2289  018E                     	;# 
  2290  0191                     	;# 
  2291  0191                     	;# 
  2292  0192                     	;# 
  2293  0193                     	;# 
  2294  0193                     	;# 
  2295  0194                     	;# 
  2296  0195                     	;# 
  2297  0196                     	;# 
  2298  0197                     	;# 
  2299  0199                     	;# 
  2300  0199                     	;# 
  2301  0199                     	;# 
  2302  019A                     	;# 
  2303  019A                     	;# 
  2304  019A                     	;# 
  2305  019B                     	;# 
  2306  019B                     	;# 
  2307  019B                     	;# 
  2308  019B                     	;# 
  2309  019B                     	;# 
  2310  019C                     	;# 
  2311  019C                     	;# 
  2312  019C                     	;# 
  2313  019D                     	;# 
  2314  019D                     	;# 
  2315  019D                     	;# 
  2316  019E                     	;# 
  2317  019E                     	;# 
  2318  019E                     	;# 
  2319  019F                     	;# 
  2320  019F                     	;# 
  2321  019F                     	;# 
  2322  019F                     	;# 
  2323  019F                     	;# 
  2324  020C                     	;# 
  2325  020D                     	;# 
  2326  020E                     	;# 
  2327  0211                     	;# 
  2328  0211                     	;# 
  2329  0212                     	;# 
  2330  0212                     	;# 
  2331  0213                     	;# 
  2332  0213                     	;# 
  2333  0214                     	;# 
  2334  0214                     	;# 
  2335  0215                     	;# 
  2336  0215                     	;# 
  2337  0215                     	;# 
  2338  0215                     	;# 
  2339  0216                     	;# 
  2340  0216                     	;# 
  2341  0217                     	;# 
  2342  0217                     	;# 
  2343  028C                     	;# 
  2344  028D                     	;# 
  2345  028E                     	;# 
  2346  0291                     	;# 
  2347  0291                     	;# 
  2348  0292                     	;# 
  2349  0293                     	;# 
  2350  0294                     	;# 
  2351  0298                     	;# 
  2352  0298                     	;# 
  2353  0299                     	;# 
  2354  029A                     	;# 
  2355  029B                     	;# 
  2356  029E                     	;# 
  2357  030C                     	;# 
  2358  030D                     	;# 
  2359  030E                     	;# 
  2360  038C                     	;# 
  2361  038D                     	;# 
  2362  038E                     	;# 
  2363  0391                     	;# 
  2364  0392                     	;# 
  2365  0393                     	;# 
  2366  0394                     	;# 
  2367  0395                     	;# 
  2368  0396                     	;# 
  2369  0397                     	;# 
  2370  0398                     	;# 
  2371  0399                     	;# 
  2372  040E                     	;# 
  2373  0413                     	;# 
  2374  0413                     	;# 
  2375  0414                     	;# 
  2376  0414                     	;# 
  2377  0415                     	;# 
  2378  0416                     	;# 
  2379  0417                     	;# 
  2380  0418                     	;# 
  2381  041A                     	;# 
  2382  041A                     	;# 
  2383  041B                     	;# 
  2384  041B                     	;# 
  2385  041C                     	;# 
  2386  041D                     	;# 
  2387  041E                     	;# 
  2388  041F                     	;# 
  2389  0493                     	;# 
  2390  0494                     	;# 
  2391  0495                     	;# 
  2392  0496                     	;# 
  2393  049A                     	;# 
  2394  049B                     	;# 
  2395  049C                     	;# 
  2396  049D                     	;# 
  2397  058C                     	;# 
  2398  058C                     	;# 
  2399  058D                     	;# 
  2400  058E                     	;# 
  2401  058E                     	;# 
  2402  058F                     	;# 
  2403  0590                     	;# 
  2404  0590                     	;# 
  2405  0591                     	;# 
  2406  0592                     	;# 
  2407  0592                     	;# 
  2408  0593                     	;# 
  2409  0594                     	;# 
  2410  0594                     	;# 
  2411  0595                     	;# 
  2412  0596                     	;# 
  2413  0596                     	;# 
  2414  0597                     	;# 
  2415  0598                     	;# 
  2416  0599                     	;# 
  2417  059A                     	;# 
  2418  059B                     	;# 
  2419  059B                     	;# 
  2420  059C                     	;# 
  2421  059D                     	;# 
  2422  060C                     	;# 
  2423  060C                     	;# 
  2424  060D                     	;# 
  2425  060E                     	;# 
  2426  060F                     	;# 
  2427  060F                     	;# 
  2428  0610                     	;# 
  2429  0611                     	;# 
  2430  0612                     	;# 
  2431  0613                     	;# 
  2432  0614                     	;# 
  2433  0617                     	;# 
  2434  0618                     	;# 
  2435  0619                     	;# 
  2436  061A                     	;# 
  2437  061B                     	;# 
  2438  061C                     	;# 
  2439  0691                     	;# 
  2440  0692                     	;# 
  2441  0693                     	;# 
  2442  0694                     	;# 
  2443  0695                     	;# 
  2444  0696                     	;# 
  2445  0697                     	;# 
  2446  0699                     	;# 
  2447  069A                     	;# 
  2448  0711                     	;# 
  2449  0712                     	;# 
  2450  0713                     	;# 
  2451  0714                     	;# 
  2452  0715                     	;# 
  2453  0718                     	;# 
  2454  0718                     	;# 
  2455  0719                     	;# 
  2456  071A                     	;# 
  2457  071A                     	;# 
  2458  071B                     	;# 
  2459  071C                     	;# 
  2460  071D                     	;# 
  2461  0791                     	;# 
  2462  0791                     	;# 
  2463  0792                     	;# 
  2464  0793                     	;# 
  2465  0793                     	;# 
  2466  0794                     	;# 
  2467  0795                     	;# 
  2468  0795                     	;# 
  2469  0796                     	;# 
  2470  0797                     	;# 
  2471  0797                     	;# 
  2472  0798                     	;# 
  2473  0799                     	;# 
  2474  079A                     	;# 
  2475  080C                     	;# 
  2476  080C                     	;# 
  2477  080D                     	;# 
  2478  080E                     	;# 
  2479  080E                     	;# 
  2480  080F                     	;# 
  2481  0810                     	;# 
  2482  0810                     	;# 
  2483  0811                     	;# 
  2484  0812                     	;# 
  2485  0812                     	;# 
  2486  0813                     	;# 
  2487  0814                     	;# 
  2488  0815                     	;# 
  2489  0816                     	;# 
  2490  0817                     	;# 
  2491  0818                     	;# 
  2492  0819                     	;# 
  2493  081A                     	;# 
  2494  081A                     	;# 
  2495  081B                     	;# 
  2496  081C                     	;# 
  2497  081C                     	;# 
  2498  081D                     	;# 
  2499  088C                     	;# 
  2500  088D                     	;# 
  2501  088E                     	;# 
  2502  088F                     	;# 
  2503  088F                     	;# 
  2504  0890                     	;# 
  2505  0891                     	;# 
  2506  0892                     	;# 
  2507  0893                     	;# 
  2508  0893                     	;# 
  2509  0894                     	;# 
  2510  0895                     	;# 
  2511  0896                     	;# 
  2512  0897                     	;# 
  2513  0897                     	;# 
  2514  0898                     	;# 
  2515  0899                     	;# 
  2516  0D8C                     	;# 
  2517  0D8C                     	;# 
  2518  0D8D                     	;# 
  2519  0D8E                     	;# 
  2520  0D8F                     	;# 
  2521  0D8F                     	;# 
  2522  0D90                     	;# 
  2523  0D91                     	;# 
  2524  0D92                     	;# 
  2525  0D92                     	;# 
  2526  0D93                     	;# 
  2527  0D94                     	;# 
  2528  0D95                     	;# 
  2529  0D95                     	;# 
  2530  0D96                     	;# 
  2531  0D97                     	;# 
  2532  0D98                     	;# 
  2533  0D99                     	;# 
  2534  0D9A                     	;# 
  2535  0D9B                     	;# 
  2536  0D9C                     	;# 
  2537  0D9D                     	;# 
  2538  0D9E                     	;# 
  2539  0D9E                     	;# 
  2540  0D9F                     	;# 
  2541  0DA0                     	;# 
  2542  0DA1                     	;# 
  2543  0DA1                     	;# 
  2544  0DA2                     	;# 
  2545  0DA3                     	;# 
  2546  0DA4                     	;# 
  2547  0DA4                     	;# 
  2548  0DA5                     	;# 
  2549  0DA6                     	;# 
  2550  0DA7                     	;# 
  2551  0DA7                     	;# 
  2552  0DA8                     	;# 
  2553  0DA9                     	;# 
  2554  0DAA                     	;# 
  2555  0DAB                     	;# 
  2556  0DAC                     	;# 
  2557  0DAD                     	;# 
  2558  0DAE                     	;# 
  2559  0DAF                     	;# 
  2560  0E0F                     	;# 
  2561  0E10                     	;# 
  2562  0E11                     	;# 
  2563  0E12                     	;# 
  2564  0E13                     	;# 
  2565  0E14                     	;# 
  2566  0E15                     	;# 
  2567  0E16                     	;# 
  2568  0E17                     	;# 
  2569  0E18                     	;# 
  2570  0E19                     	;# 
  2571  0E1A                     	;# 
  2572  0E1B                     	;# 
  2573  0E1C                     	;# 
  2574  0E1D                     	;# 
  2575  0E1E                     	;# 
  2576  0E1F                     	;# 
  2577  0E20                     	;# 
  2578  0E21                     	;# 
  2579  0E22                     	;# 
  2580  0E23                     	;# 
  2581  0E24                     	;# 
  2582  0E25                     	;# 
  2583  0E26                     	;# 
  2584  0E27                     	;# 
  2585  0E28                     	;# 
  2586  0E29                     	;# 
  2587  0E2A                     	;# 
  2588  0E2B                     	;# 
  2589  0E2C                     	;# 
  2590  0E2D                     	;# 
  2591  0E2E                     	;# 
  2592  0E90                     	;# 
  2593  0E91                     	;# 
  2594  0E92                     	;# 
  2595  0E94                     	;# 
  2596  0E95                     	;# 
  2597  0E9C                     	;# 
  2598  0E9D                     	;# 
  2599  0E9E                     	;# 
  2600  0E9F                     	;# 
  2601  0EA0                     	;# 
  2602  0EA1                     	;# 
  2603  0EA2                     	;# 
  2604  0EA3                     	;# 
  2605  0EA4                     	;# 
  2606  0EA5                     	;# 
  2607  0EA6                     	;# 
  2608  0EA7                     	;# 
  2609  0F0F                     	;# 
  2610  0F10                     	;# 
  2611  0F11                     	;# 
  2612  0F12                     	;# 
  2613  0F13                     	;# 
  2614  0F14                     	;# 
  2615  0F15                     	;# 
  2616  0F16                     	;# 
  2617  0F17                     	;# 
  2618  0F18                     	;# 
  2619  0F19                     	;# 
  2620  0F1A                     	;# 
  2621  0F1B                     	;# 
  2622  0F1C                     	;# 
  2623  0F1D                     	;# 
  2624  0F1E                     	;# 
  2625  0F1F                     	;# 
  2626  0F20                     	;# 
  2627  0F21                     	;# 
  2628  0F22                     	;# 
  2629  0F23                     	;# 
  2630  0F24                     	;# 
  2631  0F25                     	;# 
  2632  0F26                     	;# 
  2633  0F27                     	;# 
  2634  0F28                     	;# 
  2635  0F29                     	;# 
  2636  0F2A                     	;# 
  2637  0F2B                     	;# 
  2638  0F2C                     	;# 
  2639  0F2D                     	;# 
  2640  0F2E                     	;# 
  2641  0F2F                     	;# 
  2642  0F30                     	;# 
  2643  0F31                     	;# 
  2644  0F32                     	;# 
  2645  0F33                     	;# 
  2646  0F34                     	;# 
  2647  0F35                     	;# 
  2648  0F36                     	;# 
  2649  0F37                     	;# 
  2650  0FE4                     	;# 
  2651  0FE5                     	;# 
  2652  0FE6                     	;# 
  2653  0FE7                     	;# 
  2654  0FE8                     	;# 
  2655  0FE9                     	;# 
  2656  0FEA                     	;# 
  2657  0FEB                     	;# 
  2658  0FED                     	;# 
  2659  0FEE                     	;# 
  2660  0FEF                     	;# 
  2661  0000                     	;# 
  2662  0001                     	;# 
  2663  0002                     	;# 
  2664  0003                     	;# 
  2665  0004                     	;# 
  2666  0005                     	;# 
  2667  0006                     	;# 
  2668  0007                     	;# 
  2669  0008                     	;# 
  2670  0009                     	;# 
  2671  000A                     	;# 
  2672  000B                     	;# 
  2673  000C                     	;# 
  2674  000D                     	;# 
  2675  000E                     	;# 
  2676  0010                     	;# 
  2677  0011                     	;# 
  2678  0012                     	;# 
  2679  0013                     	;# 
  2680  0014                     	;# 
  2681  0015                     	;# 
  2682  0016                     	;# 
  2683  0016                     	;# 
  2684  0017                     	;# 
  2685  0018                     	;# 
  2686  0019                     	;# 
  2687  001A                     	;# 
  2688  001A                     	;# 
  2689  001B                     	;# 
  2690  001B                     	;# 
  2691  001C                     	;# 
  2692  001D                     	;# 
  2693  001E                     	;# 
  2694  001F                     	;# 
  2695  008C                     	;# 
  2696  008D                     	;# 
  2697  008E                     	;# 
  2698  0090                     	;# 
  2699  0091                     	;# 
  2700  0092                     	;# 
  2701  0093                     	;# 
  2702  0094                     	;# 
  2703  0095                     	;# 
  2704  0096                     	;# 
  2705  0098                     	;# 
  2706  0099                     	;# 
  2707  009A                     	;# 
  2708  009B                     	;# 
  2709  009B                     	;# 
  2710  009C                     	;# 
  2711  009D                     	;# 
  2712  009E                     	;# 
  2713  009F                     	;# 
  2714  010C                     	;# 
  2715  010D                     	;# 
  2716  010E                     	;# 
  2717  0111                     	;# 
  2718  0112                     	;# 
  2719  0113                     	;# 
  2720  0114                     	;# 
  2721  0115                     	;# 
  2722  0116                     	;# 
  2723  0117                     	;# 
  2724  0118                     	;# 
  2725  0119                     	;# 
  2726  011C                     	;# 
  2727  018C                     	;# 
  2728  018D                     	;# 
  2729  018E                     	;# 
  2730  0191                     	;# 
  2731  0191                     	;# 
  2732  0192                     	;# 
  2733  0193                     	;# 
  2734  0193                     	;# 
  2735  0194                     	;# 
  2736  0195                     	;# 
  2737  0196                     	;# 
  2738  0197                     	;# 
  2739  0199                     	;# 
  2740  0199                     	;# 
  2741  0199                     	;# 
  2742  019A                     	;# 
  2743  019A                     	;# 
  2744  019A                     	;# 
  2745  019B                     	;# 
  2746  019B                     	;# 
  2747  019B                     	;# 
  2748  019B                     	;# 
  2749  019B                     	;# 
  2750  019C                     	;# 
  2751  019C                     	;# 
  2752  019C                     	;# 
  2753  019D                     	;# 
  2754  019D                     	;# 
  2755  019D                     	;# 
  2756  019E                     	;# 
  2757  019E                     	;# 
  2758  019E                     	;# 
  2759  019F                     	;# 
  2760  019F                     	;# 
  2761  019F                     	;# 
  2762  019F                     	;# 
  2763  019F                     	;# 
  2764  020C                     	;# 
  2765  020D                     	;# 
  2766  020E                     	;# 
  2767  0211                     	;# 
  2768  0211                     	;# 
  2769  0212                     	;# 
  2770  0212                     	;# 
  2771  0213                     	;# 
  2772  0213                     	;# 
  2773  0214                     	;# 
  2774  0214                     	;# 
  2775  0215                     	;# 
  2776  0215                     	;# 
  2777  0215                     	;# 
  2778  0215                     	;# 
  2779  0216                     	;# 
  2780  0216                     	;# 
  2781  0217                     	;# 
  2782  0217                     	;# 
  2783  028C                     	;# 
  2784  028D                     	;# 
  2785  028E                     	;# 
  2786  0291                     	;# 
  2787  0291                     	;# 
  2788  0292                     	;# 
  2789  0293                     	;# 
  2790  0294                     	;# 
  2791  0298                     	;# 
  2792  0298                     	;# 
  2793  0299                     	;# 
  2794  029A                     	;# 
  2795  029B                     	;# 
  2796  029E                     	;# 
  2797  030C                     	;# 
  2798  030D                     	;# 
  2799  030E                     	;# 
  2800  038C                     	;# 
  2801  038D                     	;# 
  2802  038E                     	;# 
  2803  0391                     	;# 
  2804  0392                     	;# 
  2805  0393                     	;# 
  2806  0394                     	;# 
  2807  0395                     	;# 
  2808  0396                     	;# 
  2809  0397                     	;# 
  2810  0398                     	;# 
  2811  0399                     	;# 
  2812  040E                     	;# 
  2813  0413                     	;# 
  2814  0413                     	;# 
  2815  0414                     	;# 
  2816  0414                     	;# 
  2817  0415                     	;# 
  2818  0416                     	;# 
  2819  0417                     	;# 
  2820  0418                     	;# 
  2821  041A                     	;# 
  2822  041A                     	;# 
  2823  041B                     	;# 
  2824  041B                     	;# 
  2825  041C                     	;# 
  2826  041D                     	;# 
  2827  041E                     	;# 
  2828  041F                     	;# 
  2829  0493                     	;# 
  2830  0494                     	;# 
  2831  0495                     	;# 
  2832  0496                     	;# 
  2833  049A                     	;# 
  2834  049B                     	;# 
  2835  049C                     	;# 
  2836  049D                     	;# 
  2837  058C                     	;# 
  2838  058C                     	;# 
  2839  058D                     	;# 
  2840  058E                     	;# 
  2841  058E                     	;# 
  2842  058F                     	;# 
  2843  0590                     	;# 
  2844  0590                     	;# 
  2845  0591                     	;# 
  2846  0592                     	;# 
  2847  0592                     	;# 
  2848  0593                     	;# 
  2849  0594                     	;# 
  2850  0594                     	;# 
  2851  0595                     	;# 
  2852  0596                     	;# 
  2853  0596                     	;# 
  2854  0597                     	;# 
  2855  0598                     	;# 
  2856  0599                     	;# 
  2857  059A                     	;# 
  2858  059B                     	;# 
  2859  059B                     	;# 
  2860  059C                     	;# 
  2861  059D                     	;# 
  2862  060C                     	;# 
  2863  060C                     	;# 
  2864  060D                     	;# 
  2865  060E                     	;# 
  2866  060F                     	;# 
  2867  060F                     	;# 
  2868  0610                     	;# 
  2869  0611                     	;# 
  2870  0612                     	;# 
  2871  0613                     	;# 
  2872  0614                     	;# 
  2873  0617                     	;# 
  2874  0618                     	;# 
  2875  0619                     	;# 
  2876  061A                     	;# 
  2877  061B                     	;# 
  2878  061C                     	;# 
  2879  0691                     	;# 
  2880  0692                     	;# 
  2881  0693                     	;# 
  2882  0694                     	;# 
  2883  0695                     	;# 
  2884  0696                     	;# 
  2885  0697                     	;# 
  2886  0699                     	;# 
  2887  069A                     	;# 
  2888  0711                     	;# 
  2889  0712                     	;# 
  2890  0713                     	;# 
  2891  0714                     	;# 
  2892  0715                     	;# 
  2893  0718                     	;# 
  2894  0718                     	;# 
  2895  0719                     	;# 
  2896  071A                     	;# 
  2897  071A                     	;# 
  2898  071B                     	;# 
  2899  071C                     	;# 
  2900  071D                     	;# 
  2901  0791                     	;# 
  2902  0791                     	;# 
  2903  0792                     	;# 
  2904  0793                     	;# 
  2905  0793                     	;# 
  2906  0794                     	;# 
  2907  0795                     	;# 
  2908  0795                     	;# 
  2909  0796                     	;# 
  2910  0797                     	;# 
  2911  0797                     	;# 
  2912  0798                     	;# 
  2913  0799                     	;# 
  2914  079A                     	;# 
  2915  080C                     	;# 
  2916  080C                     	;# 
  2917  080D                     	;# 
  2918  080E                     	;# 
  2919  080E                     	;# 
  2920  080F                     	;# 
  2921  0810                     	;# 
  2922  0810                     	;# 
  2923  0811                     	;# 
  2924  0812                     	;# 
  2925  0812                     	;# 
  2926  0813                     	;# 
  2927  0814                     	;# 
  2928  0815                     	;# 
  2929  0816                     	;# 
  2930  0817                     	;# 
  2931  0818                     	;# 
  2932  0819                     	;# 
  2933  081A                     	;# 
  2934  081A                     	;# 
  2935  081B                     	;# 
  2936  081C                     	;# 
  2937  081C                     	;# 
  2938  081D                     	;# 
  2939  088C                     	;# 
  2940  088D                     	;# 
  2941  088E                     	;# 
  2942  088F                     	;# 
  2943  088F                     	;# 
  2944  0890                     	;# 
  2945  0891                     	;# 
  2946  0892                     	;# 
  2947  0893                     	;# 
  2948  0893                     	;# 
  2949  0894                     	;# 
  2950  0895                     	;# 
  2951  0896                     	;# 
  2952  0897                     	;# 
  2953  0897                     	;# 
  2954  0898                     	;# 
  2955  0899                     	;# 
  2956  0D8C                     	;# 
  2957  0D8C                     	;# 
  2958  0D8D                     	;# 
  2959  0D8E                     	;# 
  2960  0D8F                     	;# 
  2961  0D8F                     	;# 
  2962  0D90                     	;# 
  2963  0D91                     	;# 
  2964  0D92                     	;# 
  2965  0D92                     	;# 
  2966  0D93                     	;# 
  2967  0D94                     	;# 
  2968  0D95                     	;# 
  2969  0D95                     	;# 
  2970  0D96                     	;# 
  2971  0D97                     	;# 
  2972  0D98                     	;# 
  2973  0D99                     	;# 
  2974  0D9A                     	;# 
  2975  0D9B                     	;# 
  2976  0D9C                     	;# 
  2977  0D9D                     	;# 
  2978  0D9E                     	;# 
  2979  0D9E                     	;# 
  2980  0D9F                     	;# 
  2981  0DA0                     	;# 
  2982  0DA1                     	;# 
  2983  0DA1                     	;# 
  2984  0DA2                     	;# 
  2985  0DA3                     	;# 
  2986  0DA4                     	;# 
  2987  0DA4                     	;# 
  2988  0DA5                     	;# 
  2989  0DA6                     	;# 
  2990  0DA7                     	;# 
  2991  0DA7                     	;# 
  2992  0DA8                     	;# 
  2993  0DA9                     	;# 
  2994  0DAA                     	;# 
  2995  0DAB                     	;# 
  2996  0DAC                     	;# 
  2997  0DAD                     	;# 
  2998  0DAE                     	;# 
  2999  0DAF                     	;# 
  3000  0E0F                     	;# 
  3001  0E10                     	;# 
  3002  0E11                     	;# 
  3003  0E12                     	;# 
  3004  0E13                     	;# 
  3005  0E14                     	;# 
  3006  0E15                     	;# 
  3007  0E16                     	;# 
  3008  0E17                     	;# 
  3009  0E18                     	;# 
  3010  0E19                     	;# 
  3011  0E1A                     	;# 
  3012  0E1B                     	;# 
  3013  0E1C                     	;# 
  3014  0E1D                     	;# 
  3015  0E1E                     	;# 
  3016  0E1F                     	;# 
  3017  0E20                     	;# 
  3018  0E21                     	;# 
  3019  0E22                     	;# 
  3020  0E23                     	;# 
  3021  0E24                     	;# 
  3022  0E25                     	;# 
  3023  0E26                     	;# 
  3024  0E27                     	;# 
  3025  0E28                     	;# 
  3026  0E29                     	;# 
  3027  0E2A                     	;# 
  3028  0E2B                     	;# 
  3029  0E2C                     	;# 
  3030  0E2D                     	;# 
  3031  0E2E                     	;# 
  3032  0E90                     	;# 
  3033  0E91                     	;# 
  3034  0E92                     	;# 
  3035  0E94                     	;# 
  3036  0E95                     	;# 
  3037  0E9C                     	;# 
  3038  0E9D                     	;# 
  3039  0E9E                     	;# 
  3040  0E9F                     	;# 
  3041  0EA0                     	;# 
  3042  0EA1                     	;# 
  3043  0EA2                     	;# 
  3044  0EA3                     	;# 
  3045  0EA4                     	;# 
  3046  0EA5                     	;# 
  3047  0EA6                     	;# 
  3048  0EA7                     	;# 
  3049  0F0F                     	;# 
  3050  0F10                     	;# 
  3051  0F11                     	;# 
  3052  0F12                     	;# 
  3053  0F13                     	;# 
  3054  0F14                     	;# 
  3055  0F15                     	;# 
  3056  0F16                     	;# 
  3057  0F17                     	;# 
  3058  0F18                     	;# 
  3059  0F19                     	;# 
  3060  0F1A                     	;# 
  3061  0F1B                     	;# 
  3062  0F1C                     	;# 
  3063  0F1D                     	;# 
  3064  0F1E                     	;# 
  3065  0F1F                     	;# 
  3066  0F20                     	;# 
  3067  0F21                     	;# 
  3068  0F22                     	;# 
  3069  0F23                     	;# 
  3070  0F24                     	;# 
  3071  0F25                     	;# 
  3072  0F26                     	;# 
  3073  0F27                     	;# 
  3074  0F28                     	;# 
  3075  0F29                     	;# 
  3076  0F2A                     	;# 
  3077  0F2B                     	;# 
  3078  0F2C                     	;# 
  3079  0F2D                     	;# 
  3080  0F2E                     	;# 
  3081  0F2F                     	;# 
  3082  0F30                     	;# 
  3083  0F31                     	;# 
  3084  0F32                     	;# 
  3085  0F33                     	;# 
  3086  0F34                     	;# 
  3087  0F35                     	;# 
  3088  0F36                     	;# 
  3089  0F37                     	;# 
  3090  0FE4                     	;# 
  3091  0FE5                     	;# 
  3092  0FE6                     	;# 
  3093  0FE7                     	;# 
  3094  0FE8                     	;# 
  3095  0FE9                     	;# 
  3096  0FEA                     	;# 
  3097  0FEB                     	;# 
  3098  0FED                     	;# 
  3099  0FEE                     	;# 
  3100  0FEF                     	;# 
  3101  0000                     	;# 
  3102  0001                     	;# 
  3103  0002                     	;# 
  3104  0003                     	;# 
  3105  0004                     	;# 
  3106  0005                     	;# 
  3107  0006                     	;# 
  3108  0007                     	;# 
  3109  0008                     	;# 
  3110  0009                     	;# 
  3111  000A                     	;# 
  3112  000B                     	;# 
  3113  000C                     	;# 
  3114  000D                     	;# 
  3115  000E                     	;# 
  3116  0010                     	;# 
  3117  0011                     	;# 
  3118  0012                     	;# 
  3119  0013                     	;# 
  3120  0014                     	;# 
  3121  0015                     	;# 
  3122  0016                     	;# 
  3123  0016                     	;# 
  3124  0017                     	;# 
  3125  0018                     	;# 
  3126  0019                     	;# 
  3127  001A                     	;# 
  3128  001A                     	;# 
  3129  001B                     	;# 
  3130  001B                     	;# 
  3131  001C                     	;# 
  3132  001D                     	;# 
  3133  001E                     	;# 
  3134  001F                     	;# 
  3135  008C                     	;# 
  3136  008D                     	;# 
  3137  008E                     	;# 
  3138  0090                     	;# 
  3139  0091                     	;# 
  3140  0092                     	;# 
  3141  0093                     	;# 
  3142  0094                     	;# 
  3143  0095                     	;# 
  3144  0096                     	;# 
  3145  0098                     	;# 
  3146  0099                     	;# 
  3147  009A                     	;# 
  3148  009B                     	;# 
  3149  009B                     	;# 
  3150  009C                     	;# 
  3151  009D                     	;# 
  3152  009E                     	;# 
  3153  009F                     	;# 
  3154  010C                     	;# 
  3155  010D                     	;# 
  3156  010E                     	;# 
  3157  0111                     	;# 
  3158  0112                     	;# 
  3159  0113                     	;# 
  3160  0114                     	;# 
  3161  0115                     	;# 
  3162  0116                     	;# 
  3163  0117                     	;# 
  3164  0118                     	;# 
  3165  0119                     	;# 
  3166  011C                     	;# 
  3167  018C                     	;# 
  3168  018D                     	;# 
  3169  018E                     	;# 
  3170  0191                     	;# 
  3171  0191                     	;# 
  3172  0192                     	;# 
  3173  0193                     	;# 
  3174  0193                     	;# 
  3175  0194                     	;# 
  3176  0195                     	;# 
  3177  0196                     	;# 
  3178  0197                     	;# 
  3179  0199                     	;# 
  3180  0199                     	;# 
  3181  0199                     	;# 
  3182  019A                     	;# 
  3183  019A                     	;# 
  3184  019A                     	;# 
  3185  019B                     	;# 
  3186  019B                     	;# 
  3187  019B                     	;# 
  3188  019B                     	;# 
  3189  019B                     	;# 
  3190  019C                     	;# 
  3191  019C                     	;# 
  3192  019C                     	;# 
  3193  019D                     	;# 
  3194  019D                     	;# 
  3195  019D                     	;# 
  3196  019E                     	;# 
  3197  019E                     	;# 
  3198  019E                     	;# 
  3199  019F                     	;# 
  3200  019F                     	;# 
  3201  019F                     	;# 
  3202  019F                     	;# 
  3203  019F                     	;# 
  3204  020C                     	;# 
  3205  020D                     	;# 
  3206  020E                     	;# 
  3207  0211                     	;# 
  3208  0211                     	;# 
  3209  0212                     	;# 
  3210  0212                     	;# 
  3211  0213                     	;# 
  3212  0213                     	;# 
  3213  0214                     	;# 
  3214  0214                     	;# 
  3215  0215                     	;# 
  3216  0215                     	;# 
  3217  0215                     	;# 
  3218  0215                     	;# 
  3219  0216                     	;# 
  3220  0216                     	;# 
  3221  0217                     	;# 
  3222  0217                     	;# 
  3223  028C                     	;# 
  3224  028D                     	;# 
  3225  028E                     	;# 
  3226  0291                     	;# 
  3227  0291                     	;# 
  3228  0292                     	;# 
  3229  0293                     	;# 
  3230  0294                     	;# 
  3231  0298                     	;# 
  3232  0298                     	;# 
  3233  0299                     	;# 
  3234  029A                     	;# 
  3235  029B                     	;# 
  3236  029E                     	;# 
  3237  030C                     	;# 
  3238  030D                     	;# 
  3239  030E                     	;# 
  3240  038C                     	;# 
  3241  038D                     	;# 
  3242  038E                     	;# 
  3243  0391                     	;# 
  3244  0392                     	;# 
  3245  0393                     	;# 
  3246  0394                     	;# 
  3247  0395                     	;# 
  3248  0396                     	;# 
  3249  0397                     	;# 
  3250  0398                     	;# 
  3251  0399                     	;# 
  3252  040E                     	;# 
  3253  0413                     	;# 
  3254  0413                     	;# 
  3255  0414                     	;# 
  3256  0414                     	;# 
  3257  0415                     	;# 
  3258  0416                     	;# 
  3259  0417                     	;# 
  3260  0418                     	;# 
  3261  041A                     	;# 
  3262  041A                     	;# 
  3263  041B                     	;# 
  3264  041B                     	;# 
  3265  041C                     	;# 
  3266  041D                     	;# 
  3267  041E                     	;# 
  3268  041F                     	;# 
  3269  0493                     	;# 
  3270  0494                     	;# 
  3271  0495                     	;# 
  3272  0496                     	;# 
  3273  049A                     	;# 
  3274  049B                     	;# 
  3275  049C                     	;# 
  3276  049D                     	;# 
  3277  058C                     	;# 
  3278  058C                     	;# 
  3279  058D                     	;# 
  3280  058E                     	;# 
  3281  058E                     	;# 
  3282  058F                     	;# 
  3283  0590                     	;# 
  3284  0590                     	;# 
  3285  0591                     	;# 
  3286  0592                     	;# 
  3287  0592                     	;# 
  3288  0593                     	;# 
  3289  0594                     	;# 
  3290  0594                     	;# 
  3291  0595                     	;# 
  3292  0596                     	;# 
  3293  0596                     	;# 
  3294  0597                     	;# 
  3295  0598                     	;# 
  3296  0599                     	;# 
  3297  059A                     	;# 
  3298  059B                     	;# 
  3299  059B                     	;# 
  3300  059C                     	;# 
  3301  059D                     	;# 
  3302  060C                     	;# 
  3303  060C                     	;# 
  3304  060D                     	;# 
  3305  060E                     	;# 
  3306  060F                     	;# 
  3307  060F                     	;# 
  3308  0610                     	;# 
  3309  0611                     	;# 
  3310  0612                     	;# 
  3311  0613                     	;# 
  3312  0614                     	;# 
  3313  0617                     	;# 
  3314  0618                     	;# 
  3315  0619                     	;# 
  3316  061A                     	;# 
  3317  061B                     	;# 
  3318  061C                     	;# 
  3319  0691                     	;# 
  3320  0692                     	;# 
  3321  0693                     	;# 
  3322  0694                     	;# 
  3323  0695                     	;# 
  3324  0696                     	;# 
  3325  0697                     	;# 
  3326  0699                     	;# 
  3327  069A                     	;# 
  3328  0711                     	;# 
  3329  0712                     	;# 
  3330  0713                     	;# 
  3331  0714                     	;# 
  3332  0715                     	;# 
  3333  0718                     	;# 
  3334  0718                     	;# 
  3335  0719                     	;# 
  3336  071A                     	;# 
  3337  071A                     	;# 
  3338  071B                     	;# 
  3339  071C                     	;# 
  3340  071D                     	;# 
  3341  0791                     	;# 
  3342  0791                     	;# 
  3343  0792                     	;# 
  3344  0793                     	;# 
  3345  0793                     	;# 
  3346  0794                     	;# 
  3347  0795                     	;# 
  3348  0795                     	;# 
  3349  0796                     	;# 
  3350  0797                     	;# 
  3351  0797                     	;# 
  3352  0798                     	;# 
  3353  0799                     	;# 
  3354  079A                     	;# 
  3355  080C                     	;# 
  3356  080C                     	;# 
  3357  080D                     	;# 
  3358  080E                     	;# 
  3359  080E                     	;# 
  3360  080F                     	;# 
  3361  0810                     	;# 
  3362  0810                     	;# 
  3363  0811                     	;# 
  3364  0812                     	;# 
  3365  0812                     	;# 
  3366  0813                     	;# 
  3367  0814                     	;# 
  3368  0815                     	;# 
  3369  0816                     	;# 
  3370  0817                     	;# 
  3371  0818                     	;# 
  3372  0819                     	;# 
  3373  081A                     	;# 
  3374  081A                     	;# 
  3375  081B                     	;# 
  3376  081C                     	;# 
  3377  081C                     	;# 
  3378  081D                     	;# 
  3379  088C                     	;# 
  3380  088D                     	;# 
  3381  088E                     	;# 
  3382  088F                     	;# 
  3383  088F                     	;# 
  3384  0890                     	;# 
  3385  0891                     	;# 
  3386  0892                     	;# 
  3387  0893                     	;# 
  3388  0893                     	;# 
  3389  0894                     	;# 
  3390  0895                     	;# 
  3391  0896                     	;# 
  3392  0897                     	;# 
  3393  0897                     	;# 
  3394  0898                     	;# 
  3395  0899                     	;# 
  3396  0D8C                     	;# 
  3397  0D8C                     	;# 
  3398  0D8D                     	;# 
  3399  0D8E                     	;# 
  3400  0D8F                     	;# 
  3401  0D8F                     	;# 
  3402  0D90                     	;# 
  3403  0D91                     	;# 
  3404  0D92                     	;# 
  3405  0D92                     	;# 
  3406  0D93                     	;# 
  3407  0D94                     	;# 
  3408  0D95                     	;# 
  3409  0D95                     	;# 
  3410  0D96                     	;# 
  3411  0D97                     	;# 
  3412  0D98                     	;# 
  3413  0D99                     	;# 
  3414  0D9A                     	;# 
  3415  0D9B                     	;# 
  3416  0D9C                     	;# 
  3417  0D9D                     	;# 
  3418  0D9E                     	;# 
  3419  0D9E                     	;# 
  3420  0D9F                     	;# 
  3421  0DA0                     	;# 
  3422  0DA1                     	;# 
  3423  0DA1                     	;# 
  3424  0DA2                     	;# 
  3425  0DA3                     	;# 
  3426  0DA4                     	;# 
  3427  0DA4                     	;# 
  3428  0DA5                     	;# 
  3429  0DA6                     	;# 
  3430  0DA7                     	;# 
  3431  0DA7                     	;# 
  3432  0DA8                     	;# 
  3433  0DA9                     	;# 
  3434  0DAA                     	;# 
  3435  0DAB                     	;# 
  3436  0DAC                     	;# 
  3437  0DAD                     	;# 
  3438  0DAE                     	;# 
  3439  0DAF                     	;# 
  3440  0E0F                     	;# 
  3441  0E10                     	;# 
  3442  0E11                     	;# 
  3443  0E12                     	;# 
  3444  0E13                     	;# 
  3445  0E14                     	;# 
  3446  0E15                     	;# 
  3447  0E16                     	;# 
  3448  0E17                     	;# 
  3449  0E18                     	;# 
  3450  0E19                     	;# 
  3451  0E1A                     	;# 
  3452  0E1B                     	;# 
  3453  0E1C                     	;# 
  3454  0E1D                     	;# 
  3455  0E1E                     	;# 
  3456  0E1F                     	;# 
  3457  0E20                     	;# 
  3458  0E21                     	;# 
  3459  0E22                     	;# 
  3460  0E23                     	;# 
  3461  0E24                     	;# 
  3462  0E25                     	;# 
  3463  0E26                     	;# 
  3464  0E27                     	;# 
  3465  0E28                     	;# 
  3466  0E29                     	;# 
  3467  0E2A                     	;# 
  3468  0E2B                     	;# 
  3469  0E2C                     	;# 
  3470  0E2D                     	;# 
  3471  0E2E                     	;# 
  3472  0E90                     	;# 
  3473  0E91                     	;# 
  3474  0E92                     	;# 
  3475  0E94                     	;# 
  3476  0E95                     	;# 
  3477  0E9C                     	;# 
  3478  0E9D                     	;# 
  3479  0E9E                     	;# 
  3480  0E9F                     	;# 
  3481  0EA0                     	;# 
  3482  0EA1                     	;# 
  3483  0EA2                     	;# 
  3484  0EA3                     	;# 
  3485  0EA4                     	;# 
  3486  0EA5                     	;# 
  3487  0EA6                     	;# 
  3488  0EA7                     	;# 
  3489  0F0F                     	;# 
  3490  0F10                     	;# 
  3491  0F11                     	;# 
  3492  0F12                     	;# 
  3493  0F13                     	;# 
  3494  0F14                     	;# 
  3495  0F15                     	;# 
  3496  0F16                     	;# 
  3497  0F17                     	;# 
  3498  0F18                     	;# 
  3499  0F19                     	;# 
  3500  0F1A                     	;# 
  3501  0F1B                     	;# 
  3502  0F1C                     	;# 
  3503  0F1D                     	;# 
  3504  0F1E                     	;# 
  3505  0F1F                     	;# 
  3506  0F20                     	;# 
  3507  0F21                     	;# 
  3508  0F22                     	;# 
  3509  0F23                     	;# 
  3510  0F24                     	;# 
  3511  0F25                     	;# 
  3512  0F26                     	;# 
  3513  0F27                     	;# 
  3514  0F28                     	;# 
  3515  0F29                     	;# 
  3516  0F2A                     	;# 
  3517  0F2B                     	;# 
  3518  0F2C                     	;# 
  3519  0F2D                     	;# 
  3520  0F2E                     	;# 
  3521  0F2F                     	;# 
  3522  0F30                     	;# 
  3523  0F31                     	;# 
  3524  0F32                     	;# 
  3525  0F33                     	;# 
  3526  0F34                     	;# 
  3527  0F35                     	;# 
  3528  0F36                     	;# 
  3529  0F37                     	;# 
  3530  0FE4                     	;# 
  3531  0FE5                     	;# 
  3532  0FE6                     	;# 
  3533  0FE7                     	;# 
  3534  0FE8                     	;# 
  3535  0FE9                     	;# 
  3536  0FEA                     	;# 
  3537  0FEB                     	;# 
  3538  0FED                     	;# 
  3539  0FEE                     	;# 
  3540  0FEF                     	;# 
  3541  0000                     	;# 
  3542  0001                     	;# 
  3543  0002                     	;# 
  3544  0003                     	;# 
  3545  0004                     	;# 
  3546  0005                     	;# 
  3547  0006                     	;# 
  3548  0007                     	;# 
  3549  0008                     	;# 
  3550  0009                     	;# 
  3551  000A                     	;# 
  3552  000B                     	;# 
  3553  000C                     	;# 
  3554  000D                     	;# 
  3555  000E                     	;# 
  3556  0010                     	;# 
  3557  0011                     	;# 
  3558  0012                     	;# 
  3559  0013                     	;# 
  3560  0014                     	;# 
  3561  0015                     	;# 
  3562  0016                     	;# 
  3563  0016                     	;# 
  3564  0017                     	;# 
  3565  0018                     	;# 
  3566  0019                     	;# 
  3567  001A                     	;# 
  3568  001A                     	;# 
  3569  001B                     	;# 
  3570  001B                     	;# 
  3571  001C                     	;# 
  3572  001D                     	;# 
  3573  001E                     	;# 
  3574  001F                     	;# 
  3575  008C                     	;# 
  3576  008D                     	;# 
  3577  008E                     	;# 
  3578  0090                     	;# 
  3579  0091                     	;# 
  3580  0092                     	;# 
  3581  0093                     	;# 
  3582  0094                     	;# 
  3583  0095                     	;# 
  3584  0096                     	;# 
  3585  0098                     	;# 
  3586  0099                     	;# 
  3587  009A                     	;# 
  3588  009B                     	;# 
  3589  009B                     	;# 
  3590  009C                     	;# 
  3591  009D                     	;# 
  3592  009E                     	;# 
  3593  009F                     	;# 
  3594  010C                     	;# 
  3595  010D                     	;# 
  3596  010E                     	;# 
  3597  0111                     	;# 
  3598  0112                     	;# 
  3599  0113                     	;# 
  3600  0114                     	;# 
  3601  0115                     	;# 
  3602  0116                     	;# 
  3603  0117                     	;# 
  3604  0118                     	;# 
  3605  0119                     	;# 
  3606  011C                     	;# 
  3607  018C                     	;# 
  3608  018D                     	;# 
  3609  018E                     	;# 
  3610  0191                     	;# 
  3611  0191                     	;# 
  3612  0192                     	;# 
  3613  0193                     	;# 
  3614  0193                     	;# 
  3615  0194                     	;# 
  3616  0195                     	;# 
  3617  0196                     	;# 
  3618  0197                     	;# 
  3619  0199                     	;# 
  3620  0199                     	;# 
  3621  0199                     	;# 
  3622  019A                     	;# 
  3623  019A                     	;# 
  3624  019A                     	;# 
  3625  019B                     	;# 
  3626  019B                     	;# 
  3627  019B                     	;# 
  3628  019B                     	;# 
  3629  019B                     	;# 
  3630  019C                     	;# 
  3631  019C                     	;# 
  3632  019C                     	;# 
  3633  019D                     	;# 
  3634  019D                     	;# 
  3635  019D                     	;# 
  3636  019E                     	;# 
  3637  019E                     	;# 
  3638  019E                     	;# 
  3639  019F                     	;# 
  3640  019F                     	;# 
  3641  019F                     	;# 
  3642  019F                     	;# 
  3643  019F                     	;# 
  3644  020C                     	;# 
  3645  020D                     	;# 
  3646  020E                     	;# 
  3647  0211                     	;# 
  3648  0211                     	;# 
  3649  0212                     	;# 
  3650  0212                     	;# 
  3651  0213                     	;# 
  3652  0213                     	;# 
  3653  0214                     	;# 
  3654  0214                     	;# 
  3655  0215                     	;# 
  3656  0215                     	;# 
  3657  0215                     	;# 
  3658  0215                     	;# 
  3659  0216                     	;# 
  3660  0216                     	;# 
  3661  0217                     	;# 
  3662  0217                     	;# 
  3663  028C                     	;# 
  3664  028D                     	;# 
  3665  028E                     	;# 
  3666  0291                     	;# 
  3667  0291                     	;# 
  3668  0292                     	;# 
  3669  0293                     	;# 
  3670  0294                     	;# 
  3671  0298                     	;# 
  3672  0298                     	;# 
  3673  0299                     	;# 
  3674  029A                     	;# 
  3675  029B                     	;# 
  3676  029E                     	;# 
  3677  030C                     	;# 
  3678  030D                     	;# 
  3679  030E                     	;# 
  3680  038C                     	;# 
  3681  038D                     	;# 
  3682  038E                     	;# 
  3683  0391                     	;# 
  3684  0392                     	;# 
  3685  0393                     	;# 
  3686  0394                     	;# 
  3687  0395                     	;# 
  3688  0396                     	;# 
  3689  0397                     	;# 
  3690  0398                     	;# 
  3691  0399                     	;# 
  3692  040E                     	;# 
  3693  0413                     	;# 
  3694  0413                     	;# 
  3695  0414                     	;# 
  3696  0414                     	;# 
  3697  0415                     	;# 
  3698  0416                     	;# 
  3699  0417                     	;# 
  3700  0418                     	;# 
  3701  041A                     	;# 
  3702  041A                     	;# 
  3703  041B                     	;# 
  3704  041B                     	;# 
  3705  041C                     	;# 
  3706  041D                     	;# 
  3707  041E                     	;# 
  3708  041F                     	;# 
  3709  0493                     	;# 
  3710  0494                     	;# 
  3711  0495                     	;# 
  3712  0496                     	;# 
  3713  049A                     	;# 
  3714  049B                     	;# 
  3715  049C                     	;# 
  3716  049D                     	;# 
  3717  058C                     	;# 
  3718  058C                     	;# 
  3719  058D                     	;# 
  3720  058E                     	;# 
  3721  058E                     	;# 
  3722  058F                     	;# 
  3723  0590                     	;# 
  3724  0590                     	;# 
  3725  0591                     	;# 
  3726  0592                     	;# 
  3727  0592                     	;# 
  3728  0593                     	;# 
  3729  0594                     	;# 
  3730  0594                     	;# 
  3731  0595                     	;# 
  3732  0596                     	;# 
  3733  0596                     	;# 
  3734  0597                     	;# 
  3735  0598                     	;# 
  3736  0599                     	;# 
  3737  059A                     	;# 
  3738  059B                     	;# 
  3739  059B                     	;# 
  3740  059C                     	;# 
  3741  059D                     	;# 
  3742  060C                     	;# 
  3743  060C                     	;# 
  3744  060D                     	;# 
  3745  060E                     	;# 
  3746  060F                     	;# 
  3747  060F                     	;# 
  3748  0610                     	;# 
  3749  0611                     	;# 
  3750  0612                     	;# 
  3751  0613                     	;# 
  3752  0614                     	;# 
  3753  0617                     	;# 
  3754  0618                     	;# 
  3755  0619                     	;# 
  3756  061A                     	;# 
  3757  061B                     	;# 
  3758  061C                     	;# 
  3759  0691                     	;# 
  3760  0692                     	;# 
  3761  0693                     	;# 
  3762  0694                     	;# 
  3763  0695                     	;# 
  3764  0696                     	;# 
  3765  0697                     	;# 
  3766  0699                     	;# 
  3767  069A                     	;# 
  3768  0711                     	;# 
  3769  0712                     	;# 
  3770  0713                     	;# 
  3771  0714                     	;# 
  3772  0715                     	;# 
  3773  0718                     	;# 
  3774  0718                     	;# 
  3775  0719                     	;# 
  3776  071A                     	;# 
  3777  071A                     	;# 
  3778  071B                     	;# 
  3779  071C                     	;# 
  3780  071D                     	;# 
  3781  0791                     	;# 
  3782  0791                     	;# 
  3783  0792                     	;# 
  3784  0793                     	;# 
  3785  0793                     	;# 
  3786  0794                     	;# 
  3787  0795                     	;# 
  3788  0795                     	;# 
  3789  0796                     	;# 
  3790  0797                     	;# 
  3791  0797                     	;# 
  3792  0798                     	;# 
  3793  0799                     	;# 
  3794  079A                     	;# 
  3795  080C                     	;# 
  3796  080C                     	;# 
  3797  080D                     	;# 
  3798  080E                     	;# 
  3799  080E                     	;# 
  3800  080F                     	;# 
  3801  0810                     	;# 
  3802  0810                     	;# 
  3803  0811                     	;# 
  3804  0812                     	;# 
  3805  0812                     	;# 
  3806  0813                     	;# 
  3807  0814                     	;# 
  3808  0815                     	;# 
  3809  0816                     	;# 
  3810  0817                     	;# 
  3811  0818                     	;# 
  3812  0819                     	;# 
  3813  081A                     	;# 
  3814  081A                     	;# 
  3815  081B                     	;# 
  3816  081C                     	;# 
  3817  081C                     	;# 
  3818  081D                     	;# 
  3819  088C                     	;# 
  3820  088D                     	;# 
  3821  088E                     	;# 
  3822  088F                     	;# 
  3823  088F                     	;# 
  3824  0890                     	;# 
  3825  0891                     	;# 
  3826  0892                     	;# 
  3827  0893                     	;# 
  3828  0893                     	;# 
  3829  0894                     	;# 
  3830  0895                     	;# 
  3831  0896                     	;# 
  3832  0897                     	;# 
  3833  0897                     	;# 
  3834  0898                     	;# 
  3835  0899                     	;# 
  3836  0D8C                     	;# 
  3837  0D8C                     	;# 
  3838  0D8D                     	;# 
  3839  0D8E                     	;# 
  3840  0D8F                     	;# 
  3841  0D8F                     	;# 
  3842  0D90                     	;# 
  3843  0D91                     	;# 
  3844  0D92                     	;# 
  3845  0D92                     	;# 
  3846  0D93                     	;# 
  3847  0D94                     	;# 
  3848  0D95                     	;# 
  3849  0D95                     	;# 
  3850  0D96                     	;# 
  3851  0D97                     	;# 
  3852  0D98                     	;# 
  3853  0D99                     	;# 
  3854  0D9A                     	;# 
  3855  0D9B                     	;# 
  3856  0D9C                     	;# 
  3857  0D9D                     	;# 
  3858  0D9E                     	;# 
  3859  0D9E                     	;# 
  3860  0D9F                     	;# 
  3861  0DA0                     	;# 
  3862  0DA1                     	;# 
  3863  0DA1                     	;# 
  3864  0DA2                     	;# 
  3865  0DA3                     	;# 
  3866  0DA4                     	;# 
  3867  0DA4                     	;# 
  3868  0DA5                     	;# 
  3869  0DA6                     	;# 
  3870  0DA7                     	;# 
  3871  0DA7                     	;# 
  3872  0DA8                     	;# 
  3873  0DA9                     	;# 
  3874  0DAA                     	;# 
  3875  0DAB                     	;# 
  3876  0DAC                     	;# 
  3877  0DAD                     	;# 
  3878  0DAE                     	;# 
  3879  0DAF                     	;# 
  3880  0E0F                     	;# 
  3881  0E10                     	;# 
  3882  0E11                     	;# 
  3883  0E12                     	;# 
  3884  0E13                     	;# 
  3885  0E14                     	;# 
  3886  0E15                     	;# 
  3887  0E16                     	;# 
  3888  0E17                     	;# 
  3889  0E18                     	;# 
  3890  0E19                     	;# 
  3891  0E1A                     	;# 
  3892  0E1B                     	;# 
  3893  0E1C                     	;# 
  3894  0E1D                     	;# 
  3895  0E1E                     	;# 
  3896  0E1F                     	;# 
  3897  0E20                     	;# 
  3898  0E21                     	;# 
  3899  0E22                     	;# 
  3900  0E23                     	;# 
  3901  0E24                     	;# 
  3902  0E25                     	;# 
  3903  0E26                     	;# 
  3904  0E27                     	;# 
  3905  0E28                     	;# 
  3906  0E29                     	;# 
  3907  0E2A                     	;# 
  3908  0E2B                     	;# 
  3909  0E2C                     	;# 
  3910  0E2D                     	;# 
  3911  0E2E                     	;# 
  3912  0E90                     	;# 
  3913  0E91                     	;# 
  3914  0E92                     	;# 
  3915  0E94                     	;# 
  3916  0E95                     	;# 
  3917  0E9C                     	;# 
  3918  0E9D                     	;# 
  3919  0E9E                     	;# 
  3920  0E9F                     	;# 
  3921  0EA0                     	;# 
  3922  0EA1                     	;# 
  3923  0EA2                     	;# 
  3924  0EA3                     	;# 
  3925  0EA4                     	;# 
  3926  0EA5                     	;# 
  3927  0EA6                     	;# 
  3928  0EA7                     	;# 
  3929  0F0F                     	;# 
  3930  0F10                     	;# 
  3931  0F11                     	;# 
  3932  0F12                     	;# 
  3933  0F13                     	;# 
  3934  0F14                     	;# 
  3935  0F15                     	;# 
  3936  0F16                     	;# 
  3937  0F17                     	;# 
  3938  0F18                     	;# 
  3939  0F19                     	;# 
  3940  0F1A                     	;# 
  3941  0F1B                     	;# 
  3942  0F1C                     	;# 
  3943  0F1D                     	;# 
  3944  0F1E                     	;# 
  3945  0F1F                     	;# 
  3946  0F20                     	;# 
  3947  0F21                     	;# 
  3948  0F22                     	;# 
  3949  0F23                     	;# 
  3950  0F24                     	;# 
  3951  0F25                     	;# 
  3952  0F26                     	;# 
  3953  0F27                     	;# 
  3954  0F28                     	;# 
  3955  0F29                     	;# 
  3956  0F2A                     	;# 
  3957  0F2B                     	;# 
  3958  0F2C                     	;# 
  3959  0F2D                     	;# 
  3960  0F2E                     	;# 
  3961  0F2F                     	;# 
  3962  0F30                     	;# 
  3963  0F31                     	;# 
  3964  0F32                     	;# 
  3965  0F33                     	;# 
  3966  0F34                     	;# 
  3967  0F35                     	;# 
  3968  0F36                     	;# 
  3969  0F37                     	;# 
  3970  0FE4                     	;# 
  3971  0FE5                     	;# 
  3972  0FE6                     	;# 
  3973  0FE7                     	;# 
  3974  0FE8                     	;# 
  3975  0FE9                     	;# 
  3976  0FEA                     	;# 
  3977  0FEB                     	;# 
  3978  0FED                     	;# 
  3979  0FEE                     	;# 
  3980  0FEF                     	;# 
  3981  0000                     	;# 
  3982  0001                     	;# 
  3983  0002                     	;# 
  3984  0003                     	;# 
  3985  0004                     	;# 
  3986  0005                     	;# 
  3987  0006                     	;# 
  3988  0007                     	;# 
  3989  0008                     	;# 
  3990  0009                     	;# 
  3991  000A                     	;# 
  3992  000B                     	;# 
  3993  000C                     	;# 
  3994  000D                     	;# 
  3995  000E                     	;# 
  3996  0010                     	;# 
  3997  0011                     	;# 
  3998  0012                     	;# 
  3999  0013                     	;# 
  4000  0014                     	;# 
  4001  0015                     	;# 
  4002  0016                     	;# 
  4003  0016                     	;# 
  4004  0017                     	;# 
  4005  0018                     	;# 
  4006  0019                     	;# 
  4007  001A                     	;# 
  4008  001A                     	;# 
  4009  001B                     	;# 
  4010  001B                     	;# 
  4011  001C                     	;# 
  4012  001D                     	;# 
  4013  001E                     	;# 
  4014  001F                     	;# 
  4015  008C                     	;# 
  4016  008D                     	;# 
  4017  008E                     	;# 
  4018  0090                     	;# 
  4019  0091                     	;# 
  4020  0092                     	;# 
  4021  0093                     	;# 
  4022  0094                     	;# 
  4023  0095                     	;# 
  4024  0096                     	;# 
  4025  0098                     	;# 
  4026  0099                     	;# 
  4027  009A                     	;# 
  4028  009B                     	;# 
  4029  009B                     	;# 
  4030  009C                     	;# 
  4031  009D                     	;# 
  4032  009E                     	;# 
  4033  009F                     	;# 
  4034  010C                     	;# 
  4035  010D                     	;# 
  4036  010E                     	;# 
  4037  0111                     	;# 
  4038  0112                     	;# 
  4039  0113                     	;# 
  4040  0114                     	;# 
  4041  0115                     	;# 
  4042  0116                     	;# 
  4043  0117                     	;# 
  4044  0118                     	;# 
  4045  0119                     	;# 
  4046  011C                     	;# 
  4047  018C                     	;# 
  4048  018D                     	;# 
  4049  018E                     	;# 
  4050  0191                     	;# 
  4051  0191                     	;# 
  4052  0192                     	;# 
  4053  0193                     	;# 
  4054  0193                     	;# 
  4055  0194                     	;# 
  4056  0195                     	;# 
  4057  0196                     	;# 
  4058  0197                     	;# 
  4059  0199                     	;# 
  4060  0199                     	;# 
  4061  0199                     	;# 
  4062  019A                     	;# 
  4063  019A                     	;# 
  4064  019A                     	;# 
  4065  019B                     	;# 
  4066  019B                     	;# 
  4067  019B                     	;# 
  4068  019B                     	;# 
  4069  019B                     	;# 
  4070  019C                     	;# 
  4071  019C                     	;# 
  4072  019C                     	;# 
  4073  019D                     	;# 
  4074  019D                     	;# 
  4075  019D                     	;# 
  4076  019E                     	;# 
  4077  019E                     	;# 
  4078  019E                     	;# 
  4079  019F                     	;# 
  4080  019F                     	;# 
  4081  019F                     	;# 
  4082  019F                     	;# 
  4083  019F                     	;# 
  4084  020C                     	;# 
  4085  020D                     	;# 
  4086  020E                     	;# 
  4087  0211                     	;# 
  4088  0211                     	;# 
  4089  0212                     	;# 
  4090  0212                     	;# 
  4091  0213                     	;# 
  4092  0213                     	;# 
  4093  0214                     	;# 
  4094  0214                     	;# 
  4095  0215                     	;# 
  4096  0215                     	;# 
  4097  0215                     	;# 
  4098  0215                     	;# 
  4099  0216                     	;# 
  4100  0216                     	;# 
  4101  0217                     	;# 
  4102  0217                     	;# 
  4103  028C                     	;# 
  4104  028D                     	;# 
  4105  028E                     	;# 
  4106  0291                     	;# 
  4107  0291                     	;# 
  4108  0292                     	;# 
  4109  0293                     	;# 
  4110  0294                     	;# 
  4111  0298                     	;# 
  4112  0298                     	;# 
  4113  0299                     	;# 
  4114  029A                     	;# 
  4115  029B                     	;# 
  4116  029E                     	;# 
  4117  030C                     	;# 
  4118  030D                     	;# 
  4119  030E                     	;# 
  4120  038C                     	;# 
  4121  038D                     	;# 
  4122  038E                     	;# 
  4123  0391                     	;# 
  4124  0392                     	;# 
  4125  0393                     	;# 
  4126  0394                     	;# 
  4127  0395                     	;# 
  4128  0396                     	;# 
  4129  0397                     	;# 
  4130  0398                     	;# 
  4131  0399                     	;# 
  4132  040E                     	;# 
  4133  0413                     	;# 
  4134  0413                     	;# 
  4135  0414                     	;# 
  4136  0414                     	;# 
  4137  0415                     	;# 
  4138  0416                     	;# 
  4139  0417                     	;# 
  4140  0418                     	;# 
  4141  041A                     	;# 
  4142  041A                     	;# 
  4143  041B                     	;# 
  4144  041B                     	;# 
  4145  041C                     	;# 
  4146  041D                     	;# 
  4147  041E                     	;# 
  4148  041F                     	;# 
  4149  0493                     	;# 
  4150  0494                     	;# 
  4151  0495                     	;# 
  4152  0496                     	;# 
  4153  049A                     	;# 
  4154  049B                     	;# 
  4155  049C                     	;# 
  4156  049D                     	;# 
  4157  058C                     	;# 
  4158  058C                     	;# 
  4159  058D                     	;# 
  4160  058E                     	;# 
  4161  058E                     	;# 
  4162  058F                     	;# 
  4163  0590                     	;# 
  4164  0590                     	;# 
  4165  0591                     	;# 
  4166  0592                     	;# 
  4167  0592                     	;# 
  4168  0593                     	;# 
  4169  0594                     	;# 
  4170  0594                     	;# 
  4171  0595                     	;# 
  4172  0596                     	;# 
  4173  0596                     	;# 
  4174  0597                     	;# 
  4175  0598                     	;# 
  4176  0599                     	;# 
  4177  059A                     	;# 
  4178  059B                     	;# 
  4179  059B                     	;# 
  4180  059C                     	;# 
  4181  059D                     	;# 
  4182  060C                     	;# 
  4183  060C                     	;# 
  4184  060D                     	;# 
  4185  060E                     	;# 
  4186  060F                     	;# 
  4187  060F                     	;# 
  4188  0610                     	;# 
  4189  0611                     	;# 
  4190  0612                     	;# 
  4191  0613                     	;# 
  4192  0614                     	;# 
  4193  0617                     	;# 
  4194  0618                     	;# 
  4195  0619                     	;# 
  4196  061A                     	;# 
  4197  061B                     	;# 
  4198  061C                     	;# 
  4199  0691                     	;# 
  4200  0692                     	;# 
  4201  0693                     	;# 
  4202  0694                     	;# 
  4203  0695                     	;# 
  4204  0696                     	;# 
  4205  0697                     	;# 
  4206  0699                     	;# 
  4207  069A                     	;# 
  4208  0711                     	;# 
  4209  0712                     	;# 
  4210  0713                     	;# 
  4211  0714                     	;# 
  4212  0715                     	;# 
  4213  0718                     	;# 
  4214  0718                     	;# 
  4215  0719                     	;# 
  4216  071A                     	;# 
  4217  071A                     	;# 
  4218  071B                     	;# 
  4219  071C                     	;# 
  4220  071D                     	;# 
  4221  0791                     	;# 
  4222  0791                     	;# 
  4223  0792                     	;# 
  4224  0793                     	;# 
  4225  0793                     	;# 
  4226  0794                     	;# 
  4227  0795                     	;# 
  4228  0795                     	;# 
  4229  0796                     	;# 
  4230  0797                     	;# 
  4231  0797                     	;# 
  4232  0798                     	;# 
  4233  0799                     	;# 
  4234  079A                     	;# 
  4235  080C                     	;# 
  4236  080C                     	;# 
  4237  080D                     	;# 
  4238  080E                     	;# 
  4239  080E                     	;# 
  4240  080F                     	;# 
  4241  0810                     	;# 
  4242  0810                     	;# 
  4243  0811                     	;# 
  4244  0812                     	;# 
  4245  0812                     	;# 
  4246  0813                     	;# 
  4247  0814                     	;# 
  4248  0815                     	;# 
  4249  0816                     	;# 
  4250  0817                     	;# 
  4251  0818                     	;# 
  4252  0819                     	;# 
  4253  081A                     	;# 
  4254  081A                     	;# 
  4255  081B                     	;# 
  4256  081C                     	;# 
  4257  081C                     	;# 
  4258  081D                     	;# 
  4259  088C                     	;# 
  4260  088D                     	;# 
  4261  088E                     	;# 
  4262  088F                     	;# 
  4263  088F                     	;# 
  4264  0890                     	;# 
  4265  0891                     	;# 
  4266  0892                     	;# 
  4267  0893                     	;# 
  4268  0893                     	;# 
  4269  0894                     	;# 
  4270  0895                     	;# 
  4271  0896                     	;# 
  4272  0897                     	;# 
  4273  0897                     	;# 
  4274  0898                     	;# 
  4275  0899                     	;# 
  4276  0D8C                     	;# 
  4277  0D8C                     	;# 
  4278  0D8D                     	;# 
  4279  0D8E                     	;# 
  4280  0D8F                     	;# 
  4281  0D8F                     	;# 
  4282  0D90                     	;# 
  4283  0D91                     	;# 
  4284  0D92                     	;# 
  4285  0D92                     	;# 
  4286  0D93                     	;# 
  4287  0D94                     	;# 
  4288  0D95                     	;# 
  4289  0D95                     	;# 
  4290  0D96                     	;# 
  4291  0D97                     	;# 
  4292  0D98                     	;# 
  4293  0D99                     	;# 
  4294  0D9A                     	;# 
  4295  0D9B                     	;# 
  4296  0D9C                     	;# 
  4297  0D9D                     	;# 
  4298  0D9E                     	;# 
  4299  0D9E                     	;# 
  4300  0D9F                     	;# 
  4301  0DA0                     	;# 
  4302  0DA1                     	;# 
  4303  0DA1                     	;# 
  4304  0DA2                     	;# 
  4305  0DA3                     	;# 
  4306  0DA4                     	;# 
  4307  0DA4                     	;# 
  4308  0DA5                     	;# 
  4309  0DA6                     	;# 
  4310  0DA7                     	;# 
  4311  0DA7                     	;# 
  4312  0DA8                     	;# 
  4313  0DA9                     	;# 
  4314  0DAA                     	;# 
  4315  0DAB                     	;# 
  4316  0DAC                     	;# 
  4317  0DAD                     	;# 
  4318  0DAE                     	;# 
  4319  0DAF                     	;# 
  4320  0E0F                     	;# 
  4321  0E10                     	;# 
  4322  0E11                     	;# 
  4323  0E12                     	;# 
  4324  0E13                     	;# 
  4325  0E14                     	;# 
  4326  0E15                     	;# 
  4327  0E16                     	;# 
  4328  0E17                     	;# 
  4329  0E18                     	;# 
  4330  0E19                     	;# 
  4331  0E1A                     	;# 
  4332  0E1B                     	;# 
  4333  0E1C                     	;# 
  4334  0E1D                     	;# 
  4335  0E1E                     	;# 
  4336  0E1F                     	;# 
  4337  0E20                     	;# 
  4338  0E21                     	;# 
  4339  0E22                     	;# 
  4340  0E23                     	;# 
  4341  0E24                     	;# 
  4342  0E25                     	;# 
  4343  0E26                     	;# 
  4344  0E27                     	;# 
  4345  0E28                     	;# 
  4346  0E29                     	;# 
  4347  0E2A                     	;# 
  4348  0E2B                     	;# 
  4349  0E2C                     	;# 
  4350  0E2D                     	;# 
  4351  0E2E                     	;# 
  4352  0E90                     	;# 
  4353  0E91                     	;# 
  4354  0E92                     	;# 
  4355  0E94                     	;# 
  4356  0E95                     	;# 
  4357  0E9C                     	;# 
  4358  0E9D                     	;# 
  4359  0E9E                     	;# 
  4360  0E9F                     	;# 
  4361  0EA0                     	;# 
  4362  0EA1                     	;# 
  4363  0EA2                     	;# 
  4364  0EA3                     	;# 
  4365  0EA4                     	;# 
  4366  0EA5                     	;# 
  4367  0EA6                     	;# 
  4368  0EA7                     	;# 
  4369  0F0F                     	;# 
  4370  0F10                     	;# 
  4371  0F11                     	;# 
  4372  0F12                     	;# 
  4373  0F13                     	;# 
  4374  0F14                     	;# 
  4375  0F15                     	;# 
  4376  0F16                     	;# 
  4377  0F17                     	;# 
  4378  0F18                     	;# 
  4379  0F19                     	;# 
  4380  0F1A                     	;# 
  4381  0F1B                     	;# 
  4382  0F1C                     	;# 
  4383  0F1D                     	;# 
  4384  0F1E                     	;# 
  4385  0F1F                     	;# 
  4386  0F20                     	;# 
  4387  0F21                     	;# 
  4388  0F22                     	;# 
  4389  0F23                     	;# 
  4390  0F24                     	;# 
  4391  0F25                     	;# 
  4392  0F26                     	;# 
  4393  0F27                     	;# 
  4394  0F28                     	;# 
  4395  0F29                     	;# 
  4396  0F2A                     	;# 
  4397  0F2B                     	;# 
  4398  0F2C                     	;# 
  4399  0F2D                     	;# 
  4400  0F2E                     	;# 
  4401  0F2F                     	;# 
  4402  0F30                     	;# 
  4403  0F31                     	;# 
  4404  0F32                     	;# 
  4405  0F33                     	;# 
  4406  0F34                     	;# 
  4407  0F35                     	;# 
  4408  0F36                     	;# 
  4409  0F37                     	;# 
  4410  0FE4                     	;# 
  4411  0FE5                     	;# 
  4412  0FE6                     	;# 
  4413  0FE7                     	;# 
  4414  0FE8                     	;# 
  4415  0FE9                     	;# 
  4416  0FEA                     	;# 
  4417  0FEB                     	;# 
  4418  0FED                     	;# 
  4419  0FEE                     	;# 
  4420  0FEF                     	;# 
  4421  0000                     	;# 
  4422  0001                     	;# 
  4423  0002                     	;# 
  4424  0003                     	;# 
  4425  0004                     	;# 
  4426  0005                     	;# 
  4427  0006                     	;# 
  4428  0007                     	;# 
  4429  0008                     	;# 
  4430  0009                     	;# 
  4431  000A                     	;# 
  4432  000B                     	;# 
  4433  000C                     	;# 
  4434  000D                     	;# 
  4435  000E                     	;# 
  4436  0010                     	;# 
  4437  0011                     	;# 
  4438  0012                     	;# 
  4439  0013                     	;# 
  4440  0014                     	;# 
  4441  0015                     	;# 
  4442  0016                     	;# 
  4443  0016                     	;# 
  4444  0017                     	;# 
  4445  0018                     	;# 
  4446  0019                     	;# 
  4447  001A                     	;# 
  4448  001A                     	;# 
  4449  001B                     	;# 
  4450  001B                     	;# 
  4451  001C                     	;# 
  4452  001D                     	;# 
  4453  001E                     	;# 
  4454  001F                     	;# 
  4455  008C                     	;# 
  4456  008D                     	;# 
  4457  008E                     	;# 
  4458  0090                     	;# 
  4459  0091                     	;# 
  4460  0092                     	;# 
  4461  0093                     	;# 
  4462  0094                     	;# 
  4463  0095                     	;# 
  4464  0096                     	;# 
  4465  0098                     	;# 
  4466  0099                     	;# 
  4467  009A                     	;# 
  4468  009B                     	;# 
  4469  009B                     	;# 
  4470  009C                     	;# 
  4471  009D                     	;# 
  4472  009E                     	;# 
  4473  009F                     	;# 
  4474  010C                     	;# 
  4475  010D                     	;# 
  4476  010E                     	;# 
  4477  0111                     	;# 
  4478  0112                     	;# 
  4479  0113                     	;# 
  4480  0114                     	;# 
  4481  0115                     	;# 
  4482  0116                     	;# 
  4483  0117                     	;# 
  4484  0118                     	;# 
  4485  0119                     	;# 
  4486  011C                     	;# 
  4487  018C                     	;# 
  4488  018D                     	;# 
  4489  018E                     	;# 
  4490  0191                     	;# 
  4491  0191                     	;# 
  4492  0192                     	;# 
  4493  0193                     	;# 
  4494  0193                     	;# 
  4495  0194                     	;# 
  4496  0195                     	;# 
  4497  0196                     	;# 
  4498  0197                     	;# 
  4499  0199                     	;# 
  4500  0199                     	;# 
  4501  0199                     	;# 
  4502  019A                     	;# 
  4503  019A                     	;# 
  4504  019A                     	;# 
  4505  019B                     	;# 
  4506  019B                     	;# 
  4507  019B                     	;# 
  4508  019B                     	;# 
  4509  019B                     	;# 
  4510  019C                     	;# 
  4511  019C                     	;# 
  4512  019C                     	;# 
  4513  019D                     	;# 
  4514  019D                     	;# 
  4515  019D                     	;# 
  4516  019E                     	;# 
  4517  019E                     	;# 
  4518  019E                     	;# 
  4519  019F                     	;# 
  4520  019F                     	;# 
  4521  019F                     	;# 
  4522  019F                     	;# 
  4523  019F                     	;# 
  4524  020C                     	;# 
  4525  020D                     	;# 
  4526  020E                     	;# 
  4527  0211                     	;# 
  4528  0211                     	;# 
  4529  0212                     	;# 
  4530  0212                     	;# 
  4531  0213                     	;# 
  4532  0213                     	;# 
  4533  0214                     	;# 
  4534  0214                     	;# 
  4535  0215                     	;# 
  4536  0215                     	;# 
  4537  0215                     	;# 
  4538  0215                     	;# 
  4539  0216                     	;# 
  4540  0216                     	;# 
  4541  0217                     	;# 
  4542  0217                     	;# 
  4543  028C                     	;# 
  4544  028D                     	;# 
  4545  028E                     	;# 
  4546  0291                     	;# 
  4547  0291                     	;# 
  4548  0292                     	;# 
  4549  0293                     	;# 
  4550  0294                     	;# 
  4551  0298                     	;# 
  4552  0298                     	;# 
  4553  0299                     	;# 
  4554  029A                     	;# 
  4555  029B                     	;# 
  4556  029E                     	;# 
  4557  030C                     	;# 
  4558  030D                     	;# 
  4559  030E                     	;# 
  4560  038C                     	;# 
  4561  038D                     	;# 
  4562  038E                     	;# 
  4563  0391                     	;# 
  4564  0392                     	;# 
  4565  0393                     	;# 
  4566  0394                     	;# 
  4567  0395                     	;# 
  4568  0396                     	;# 
  4569  0397                     	;# 
  4570  0398                     	;# 
  4571  0399                     	;# 
  4572  040E                     	;# 
  4573  0413                     	;# 
  4574  0413                     	;# 
  4575  0414                     	;# 
  4576  0414                     	;# 
  4577  0415                     	;# 
  4578  0416                     	;# 
  4579  0417                     	;# 
  4580  0418                     	;# 
  4581  041A                     	;# 
  4582  041A                     	;# 
  4583  041B                     	;# 
  4584  041B                     	;# 
  4585  041C                     	;# 
  4586  041D                     	;# 
  4587  041E                     	;# 
  4588  041F                     	;# 
  4589  0493                     	;# 
  4590  0494                     	;# 
  4591  0495                     	;# 
  4592  0496                     	;# 
  4593  049A                     	;# 
  4594  049B                     	;# 
  4595  049C                     	;# 
  4596  049D                     	;# 
  4597  058C                     	;# 
  4598  058C                     	;# 
  4599  058D                     	;# 
  4600  058E                     	;# 
  4601  058E                     	;# 
  4602  058F                     	;# 
  4603  0590                     	;# 
  4604  0590                     	;# 
  4605  0591                     	;# 
  4606  0592                     	;# 
  4607  0592                     	;# 
  4608  0593                     	;# 
  4609  0594                     	;# 
  4610  0594                     	;# 
  4611  0595                     	;# 
  4612  0596                     	;# 
  4613  0596                     	;# 
  4614  0597                     	;# 
  4615  0598                     	;# 
  4616  0599                     	;# 
  4617  059A                     	;# 
  4618  059B                     	;# 
  4619  059B                     	;# 
  4620  059C                     	;# 
  4621  059D                     	;# 
  4622  060C                     	;# 
  4623  060C                     	;# 
  4624  060D                     	;# 
  4625  060E                     	;# 
  4626  060F                     	;# 
  4627  060F                     	;# 
  4628  0610                     	;# 
  4629  0611                     	;# 
  4630  0612                     	;# 
  4631  0613                     	;# 
  4632  0614                     	;# 
  4633  0617                     	;# 
  4634  0618                     	;# 
  4635  0619                     	;# 
  4636  061A                     	;# 
  4637  061B                     	;# 
  4638  061C                     	;# 
  4639  0691                     	;# 
  4640  0692                     	;# 
  4641  0693                     	;# 
  4642  0694                     	;# 
  4643  0695                     	;# 
  4644  0696                     	;# 
  4645  0697                     	;# 
  4646  0699                     	;# 
  4647  069A                     	;# 
  4648  0711                     	;# 
  4649  0712                     	;# 
  4650  0713                     	;# 
  4651  0714                     	;# 
  4652  0715                     	;# 
  4653  0718                     	;# 
  4654  0718                     	;# 
  4655  0719                     	;# 
  4656  071A                     	;# 
  4657  071A                     	;# 
  4658  071B                     	;# 
  4659  071C                     	;# 
  4660  071D                     	;# 
  4661  0791                     	;# 
  4662  0791                     	;# 
  4663  0792                     	;# 
  4664  0793                     	;# 
  4665  0793                     	;# 
  4666  0794                     	;# 
  4667  0795                     	;# 
  4668  0795                     	;# 
  4669  0796                     	;# 
  4670  0797                     	;# 
  4671  0797                     	;# 
  4672  0798                     	;# 
  4673  0799                     	;# 
  4674  079A                     	;# 
  4675  080C                     	;# 
  4676  080C                     	;# 
  4677  080D                     	;# 
  4678  080E                     	;# 
  4679  080E                     	;# 
  4680  080F                     	;# 
  4681  0810                     	;# 
  4682  0810                     	;# 
  4683  0811                     	;# 
  4684  0812                     	;# 
  4685  0812                     	;# 
  4686  0813                     	;# 
  4687  0814                     	;# 
  4688  0815                     	;# 
  4689  0816                     	;# 
  4690  0817                     	;# 
  4691  0818                     	;# 
  4692  0819                     	;# 
  4693  081A                     	;# 
  4694  081A                     	;# 
  4695  081B                     	;# 
  4696  081C                     	;# 
  4697  081C                     	;# 
  4698  081D                     	;# 
  4699  088C                     	;# 
  4700  088D                     	;# 
  4701  088E                     	;# 
  4702  088F                     	;# 
  4703  088F                     	;# 
  4704  0890                     	;# 
  4705  0891                     	;# 
  4706  0892                     	;# 
  4707  0893                     	;# 
  4708  0893                     	;# 
  4709  0894                     	;# 
  4710  0895                     	;# 
  4711  0896                     	;# 
  4712  0897                     	;# 
  4713  0897                     	;# 
  4714  0898                     	;# 
  4715  0899                     	;# 
  4716  0D8C                     	;# 
  4717  0D8C                     	;# 
  4718  0D8D                     	;# 
  4719  0D8E                     	;# 
  4720  0D8F                     	;# 
  4721  0D8F                     	;# 
  4722  0D90                     	;# 
  4723  0D91                     	;# 
  4724  0D92                     	;# 
  4725  0D92                     	;# 
  4726  0D93                     	;# 
  4727  0D94                     	;# 
  4728  0D95                     	;# 
  4729  0D95                     	;# 
  4730  0D96                     	;# 
  4731  0D97                     	;# 
  4732  0D98                     	;# 
  4733  0D99                     	;# 
  4734  0D9A                     	;# 
  4735  0D9B                     	;# 
  4736  0D9C                     	;# 
  4737  0D9D                     	;# 
  4738  0D9E                     	;# 
  4739  0D9E                     	;# 
  4740  0D9F                     	;# 
  4741  0DA0                     	;# 
  4742  0DA1                     	;# 
  4743  0DA1                     	;# 
  4744  0DA2                     	;# 
  4745  0DA3                     	;# 
  4746  0DA4                     	;# 
  4747  0DA4                     	;# 
  4748  0DA5                     	;# 
  4749  0DA6                     	;# 
  4750  0DA7                     	;# 
  4751  0DA7                     	;# 
  4752  0DA8                     	;# 
  4753  0DA9                     	;# 
  4754  0DAA                     	;# 
  4755  0DAB                     	;# 
  4756  0DAC                     	;# 
  4757  0DAD                     	;# 
  4758  0DAE                     	;# 
  4759  0DAF                     	;# 
  4760  0E0F                     	;# 
  4761  0E10                     	;# 
  4762  0E11                     	;# 
  4763  0E12                     	;# 
  4764  0E13                     	;# 
  4765  0E14                     	;# 
  4766  0E15                     	;# 
  4767  0E16                     	;# 
  4768  0E17                     	;# 
  4769  0E18                     	;# 
  4770  0E19                     	;# 
  4771  0E1A                     	;# 
  4772  0E1B                     	;# 
  4773  0E1C                     	;# 
  4774  0E1D                     	;# 
  4775  0E1E                     	;# 
  4776  0E1F                     	;# 
  4777  0E20                     	;# 
  4778  0E21                     	;# 
  4779  0E22                     	;# 
  4780  0E23                     	;# 
  4781  0E24                     	;# 
  4782  0E25                     	;# 
  4783  0E26                     	;# 
  4784  0E27                     	;# 
  4785  0E28                     	;# 
  4786  0E29                     	;# 
  4787  0E2A                     	;# 
  4788  0E2B                     	;# 
  4789  0E2C                     	;# 
  4790  0E2D                     	;# 
  4791  0E2E                     	;# 
  4792  0E90                     	;# 
  4793  0E91                     	;# 
  4794  0E92                     	;# 
  4795  0E94                     	;# 
  4796  0E95                     	;# 
  4797  0E9C                     	;# 
  4798  0E9D                     	;# 
  4799  0E9E                     	;# 
  4800  0E9F                     	;# 
  4801  0EA0                     	;# 
  4802  0EA1                     	;# 
  4803  0EA2                     	;# 
  4804  0EA3                     	;# 
  4805  0EA4                     	;# 
  4806  0EA5                     	;# 
  4807  0EA6                     	;# 
  4808  0EA7                     	;# 
  4809  0F0F                     	;# 
  4810  0F10                     	;# 
  4811  0F11                     	;# 
  4812  0F12                     	;# 
  4813  0F13                     	;# 
  4814  0F14                     	;# 
  4815  0F15                     	;# 
  4816  0F16                     	;# 
  4817  0F17                     	;# 
  4818  0F18                     	;# 
  4819  0F19                     	;# 
  4820  0F1A                     	;# 
  4821  0F1B                     	;# 
  4822  0F1C                     	;# 
  4823  0F1D                     	;# 
  4824  0F1E                     	;# 
  4825  0F1F                     	;# 
  4826  0F20                     	;# 
  4827  0F21                     	;# 
  4828  0F22                     	;# 
  4829  0F23                     	;# 
  4830  0F24                     	;# 
  4831  0F25                     	;# 
  4832  0F26                     	;# 
  4833  0F27                     	;# 
  4834  0F28                     	;# 
  4835  0F29                     	;# 
  4836  0F2A                     	;# 
  4837  0F2B                     	;# 
  4838  0F2C                     	;# 
  4839  0F2D                     	;# 
  4840  0F2E                     	;# 
  4841  0F2F                     	;# 
  4842  0F30                     	;# 
  4843  0F31                     	;# 
  4844  0F32                     	;# 
  4845  0F33                     	;# 
  4846  0F34                     	;# 
  4847  0F35                     	;# 
  4848  0F36                     	;# 
  4849  0F37                     	;# 
  4850  0FE4                     	;# 
  4851  0FE5                     	;# 
  4852  0FE6                     	;# 
  4853  0FE7                     	;# 
  4854  0FE8                     	;# 
  4855  0FE9                     	;# 
  4856  0FEA                     	;# 
  4857  0FEB                     	;# 
  4858  0FED                     	;# 
  4859  0FEE                     	;# 
  4860  0FEF                     	;# 
  4861  0000                     	;# 
  4862  0001                     	;# 
  4863  0002                     	;# 
  4864  0003                     	;# 
  4865  0004                     	;# 
  4866  0005                     	;# 
  4867  0006                     	;# 
  4868  0007                     	;# 
  4869  0008                     	;# 
  4870  0009                     	;# 
  4871  000A                     	;# 
  4872  000B                     	;# 
  4873  000C                     	;# 
  4874  000D                     	;# 
  4875  000E                     	;# 
  4876  0010                     	;# 
  4877  0011                     	;# 
  4878  0012                     	;# 
  4879  0013                     	;# 
  4880  0014                     	;# 
  4881  0015                     	;# 
  4882  0016                     	;# 
  4883  0016                     	;# 
  4884  0017                     	;# 
  4885  0018                     	;# 
  4886  0019                     	;# 
  4887  001A                     	;# 
  4888  001A                     	;# 
  4889  001B                     	;# 
  4890  001B                     	;# 
  4891  001C                     	;# 
  4892  001D                     	;# 
  4893  001E                     	;# 
  4894  001F                     	;# 
  4895  008C                     	;# 
  4896  008D                     	;# 
  4897  008E                     	;# 
  4898  0090                     	;# 
  4899  0091                     	;# 
  4900  0092                     	;# 
  4901  0093                     	;# 
  4902  0094                     	;# 
  4903  0095                     	;# 
  4904  0096                     	;# 
  4905  0098                     	;# 
  4906  0099                     	;# 
  4907  009A                     	;# 
  4908  009B                     	;# 
  4909  009B                     	;# 
  4910  009C                     	;# 
  4911  009D                     	;# 
  4912  009E                     	;# 
  4913  009F                     	;# 
  4914  010C                     	;# 
  4915  010D                     	;# 
  4916  010E                     	;# 
  4917  0111                     	;# 
  4918  0112                     	;# 
  4919  0113                     	;# 
  4920  0114                     	;# 
  4921  0115                     	;# 
  4922  0116                     	;# 
  4923  0117                     	;# 
  4924  0118                     	;# 
  4925  0119                     	;# 
  4926  011C                     	;# 
  4927  018C                     	;# 
  4928  018D                     	;# 
  4929  018E                     	;# 
  4930  0191                     	;# 
  4931  0191                     	;# 
  4932  0192                     	;# 
  4933  0193                     	;# 
  4934  0193                     	;# 
  4935  0194                     	;# 
  4936  0195                     	;# 
  4937  0196                     	;# 
  4938  0197                     	;# 
  4939  0199                     	;# 
  4940  0199                     	;# 
  4941  0199                     	;# 
  4942  019A                     	;# 
  4943  019A                     	;# 
  4944  019A                     	;# 
  4945  019B                     	;# 
  4946  019B                     	;# 
  4947  019B                     	;# 
  4948  019B                     	;# 
  4949  019B                     	;# 
  4950  019C                     	;# 
  4951  019C                     	;# 
  4952  019C                     	;# 
  4953  019D                     	;# 
  4954  019D                     	;# 
  4955  019D                     	;# 
  4956  019E                     	;# 
  4957  019E                     	;# 
  4958  019E                     	;# 
  4959  019F                     	;# 
  4960  019F                     	;# 
  4961  019F                     	;# 
  4962  019F                     	;# 
  4963  019F                     	;# 
  4964  020C                     	;# 
  4965  020D                     	;# 
  4966  020E                     	;# 
  4967  0211                     	;# 
  4968  0211                     	;# 
  4969  0212                     	;# 
  4970  0212                     	;# 
  4971  0213                     	;# 
  4972  0213                     	;# 
  4973  0214                     	;# 
  4974  0214                     	;# 
  4975  0215                     	;# 
  4976  0215                     	;# 
  4977  0215                     	;# 
  4978  0215                     	;# 
  4979  0216                     	;# 
  4980  0216                     	;# 
  4981  0217                     	;# 
  4982  0217                     	;# 
  4983  028C                     	;# 
  4984  028D                     	;# 
  4985  028E                     	;# 
  4986  0291                     	;# 
  4987  0291                     	;# 
  4988  0292                     	;# 
  4989  0293                     	;# 
  4990  0294                     	;# 
  4991  0298                     	;# 
  4992  0298                     	;# 
  4993  0299                     	;# 
  4994  029A                     	;# 
  4995  029B                     	;# 
  4996  029E                     	;# 
  4997  030C                     	;# 
  4998  030D                     	;# 
  4999  030E                     	;# 
  5000  038C                     	;# 
  5001  038D                     	;# 
  5002  038E                     	;# 
  5003  0391                     	;# 
  5004  0392                     	;# 
  5005  0393                     	;# 
  5006  0394                     	;# 
  5007  0395                     	;# 
  5008  0396                     	;# 
  5009  0397                     	;# 
  5010  0398                     	;# 
  5011  0399                     	;# 
  5012  040E                     	;# 
  5013  0413                     	;# 
  5014  0413                     	;# 
  5015  0414                     	;# 
  5016  0414                     	;# 
  5017  0415                     	;# 
  5018  0416                     	;# 
  5019  0417                     	;# 
  5020  0418                     	;# 
  5021  041A                     	;# 
  5022  041A                     	;# 
  5023  041B                     	;# 
  5024  041B                     	;# 
  5025  041C                     	;# 
  5026  041D                     	;# 
  5027  041E                     	;# 
  5028  041F                     	;# 
  5029  0493                     	;# 
  5030  0494                     	;# 
  5031  0495                     	;# 
  5032  0496                     	;# 
  5033  049A                     	;# 
  5034  049B                     	;# 
  5035  049C                     	;# 
  5036  049D                     	;# 
  5037  058C                     	;# 
  5038  058C                     	;# 
  5039  058D                     	;# 
  5040  058E                     	;# 
  5041  058E                     	;# 
  5042  058F                     	;# 
  5043  0590                     	;# 
  5044  0590                     	;# 
  5045  0591                     	;# 
  5046  0592                     	;# 
  5047  0592                     	;# 
  5048  0593                     	;# 
  5049  0594                     	;# 
  5050  0594                     	;# 
  5051  0595                     	;# 
  5052  0596                     	;# 
  5053  0596                     	;# 
  5054  0597                     	;# 
  5055  0598                     	;# 
  5056  0599                     	;# 
  5057  059A                     	;# 
  5058  059B                     	;# 
  5059  059B                     	;# 
  5060  059C                     	;# 
  5061  059D                     	;# 
  5062  060C                     	;# 
  5063  060C                     	;# 
  5064  060D                     	;# 
  5065  060E                     	;# 
  5066  060F                     	;# 
  5067  060F                     	;# 
  5068  0610                     	;# 
  5069  0611                     	;# 
  5070  0612                     	;# 
  5071  0613                     	;# 
  5072  0614                     	;# 
  5073  0617                     	;# 
  5074  0618                     	;# 
  5075  0619                     	;# 
  5076  061A                     	;# 
  5077  061B                     	;# 
  5078  061C                     	;# 
  5079  0691                     	;# 
  5080  0692                     	;# 
  5081  0693                     	;# 
  5082  0694                     	;# 
  5083  0695                     	;# 
  5084  0696                     	;# 
  5085  0697                     	;# 
  5086  0699                     	;# 
  5087  069A                     	;# 
  5088  0711                     	;# 
  5089  0712                     	;# 
  5090  0713                     	;# 
  5091  0714                     	;# 
  5092  0715                     	;# 
  5093  0718                     	;# 
  5094  0718                     	;# 
  5095  0719                     	;# 
  5096  071A                     	;# 
  5097  071A                     	;# 
  5098  071B                     	;# 
  5099  071C                     	;# 
  5100  071D                     	;# 
  5101  0791                     	;# 
  5102  0791                     	;# 
  5103  0792                     	;# 
  5104  0793                     	;# 
  5105  0793                     	;# 
  5106  0794                     	;# 
  5107  0795                     	;# 
  5108  0795                     	;# 
  5109  0796                     	;# 
  5110  0797                     	;# 
  5111  0797                     	;# 
  5112  0798                     	;# 
  5113  0799                     	;# 
  5114  079A                     	;# 
  5115  080C                     	;# 
  5116  080C                     	;# 
  5117  080D                     	;# 
  5118  080E                     	;# 
  5119  080E                     	;# 
  5120  080F                     	;# 
  5121  0810                     	;# 
  5122  0810                     	;# 
  5123  0811                     	;# 
  5124  0812                     	;# 
  5125  0812                     	;# 
  5126  0813                     	;# 
  5127  0814                     	;# 
  5128  0815                     	;# 
  5129  0816                     	;# 
  5130  0817                     	;# 
  5131  0818                     	;# 
  5132  0819                     	;# 
  5133  081A                     	;# 
  5134  081A                     	;# 
  5135  081B                     	;# 
  5136  081C                     	;# 
  5137  081C                     	;# 
  5138  081D                     	;# 
  5139  088C                     	;# 
  5140  088D                     	;# 
  5141  088E                     	;# 
  5142  088F                     	;# 
  5143  088F                     	;# 
  5144  0890                     	;# 
  5145  0891                     	;# 
  5146  0892                     	;# 
  5147  0893                     	;# 
  5148  0893                     	;# 
  5149  0894                     	;# 
  5150  0895                     	;# 
  5151  0896                     	;# 
  5152  0897                     	;# 
  5153  0897                     	;# 
  5154  0898                     	;# 
  5155  0899                     	;# 
  5156  0D8C                     	;# 
  5157  0D8C                     	;# 
  5158  0D8D                     	;# 
  5159  0D8E                     	;# 
  5160  0D8F                     	;# 
  5161  0D8F                     	;# 
  5162  0D90                     	;# 
  5163  0D91                     	;# 
  5164  0D92                     	;# 
  5165  0D92                     	;# 
  5166  0D93                     	;# 
  5167  0D94                     	;# 
  5168  0D95                     	;# 
  5169  0D95                     	;# 
  5170  0D96                     	;# 
  5171  0D97                     	;# 
  5172  0D98                     	;# 
  5173  0D99                     	;# 
  5174  0D9A                     	;# 
  5175  0D9B                     	;# 
  5176  0D9C                     	;# 
  5177  0D9D                     	;# 
  5178  0D9E                     	;# 
  5179  0D9E                     	;# 
  5180  0D9F                     	;# 
  5181  0DA0                     	;# 
  5182  0DA1                     	;# 
  5183  0DA1                     	;# 
  5184  0DA2                     	;# 
  5185  0DA3                     	;# 
  5186  0DA4                     	;# 
  5187  0DA4                     	;# 
  5188  0DA5                     	;# 
  5189  0DA6                     	;# 
  5190  0DA7                     	;# 
  5191  0DA7                     	;# 
  5192  0DA8                     	;# 
  5193  0DA9                     	;# 
  5194  0DAA                     	;# 
  5195  0DAB                     	;# 
  5196  0DAC                     	;# 
  5197  0DAD                     	;# 
  5198  0DAE                     	;# 
  5199  0DAF                     	;# 
  5200  0E0F                     	;# 
  5201  0E10                     	;# 
  5202  0E11                     	;# 
  5203  0E12                     	;# 
  5204  0E13                     	;# 
  5205  0E14                     	;# 
  5206  0E15                     	;# 
  5207  0E16                     	;# 
  5208  0E17                     	;# 
  5209  0E18                     	;# 
  5210  0E19                     	;# 
  5211  0E1A                     	;# 
  5212  0E1B                     	;# 
  5213  0E1C                     	;# 
  5214  0E1D                     	;# 
  5215  0E1E                     	;# 
  5216  0E1F                     	;# 
  5217  0E20                     	;# 
  5218  0E21                     	;# 
  5219  0E22                     	;# 
  5220  0E23                     	;# 
  5221  0E24                     	;# 
  5222  0E25                     	;# 
  5223  0E26                     	;# 
  5224  0E27                     	;# 
  5225  0E28                     	;# 
  5226  0E29                     	;# 
  5227  0E2A                     	;# 
  5228  0E2B                     	;# 
  5229  0E2C                     	;# 
  5230  0E2D                     	;# 
  5231  0E2E                     	;# 
  5232  0E90                     	;# 
  5233  0E91                     	;# 
  5234  0E92                     	;# 
  5235  0E94                     	;# 
  5236  0E95                     	;# 
  5237  0E9C                     	;# 
  5238  0E9D                     	;# 
  5239  0E9E                     	;# 
  5240  0E9F                     	;# 
  5241  0EA0                     	;# 
  5242  0EA1                     	;# 
  5243  0EA2                     	;# 
  5244  0EA3                     	;# 
  5245  0EA4                     	;# 
  5246  0EA5                     	;# 
  5247  0EA6                     	;# 
  5248  0EA7                     	;# 
  5249  0F0F                     	;# 
  5250  0F10                     	;# 
  5251  0F11                     	;# 
  5252  0F12                     	;# 
  5253  0F13                     	;# 
  5254  0F14                     	;# 
  5255  0F15                     	;# 
  5256  0F16                     	;# 
  5257  0F17                     	;# 
  5258  0F18                     	;# 
  5259  0F19                     	;# 
  5260  0F1A                     	;# 
  5261  0F1B                     	;# 
  5262  0F1C                     	;# 
  5263  0F1D                     	;# 
  5264  0F1E                     	;# 
  5265  0F1F                     	;# 
  5266  0F20                     	;# 
  5267  0F21                     	;# 
  5268  0F22                     	;# 
  5269  0F23                     	;# 
  5270  0F24                     	;# 
  5271  0F25                     	;# 
  5272  0F26                     	;# 
  5273  0F27                     	;# 
  5274  0F28                     	;# 
  5275  0F29                     	;# 
  5276  0F2A                     	;# 
  5277  0F2B                     	;# 
  5278  0F2C                     	;# 
  5279  0F2D                     	;# 
  5280  0F2E                     	;# 
  5281  0F2F                     	;# 
  5282  0F30                     	;# 
  5283  0F31                     	;# 
  5284  0F32                     	;# 
  5285  0F33                     	;# 
  5286  0F34                     	;# 
  5287  0F35                     	;# 
  5288  0F36                     	;# 
  5289  0F37                     	;# 
  5290  0FE4                     	;# 
  5291  0FE5                     	;# 
  5292  0FE6                     	;# 
  5293  0FE7                     	;# 
  5294  0FE8                     	;# 
  5295  0FE9                     	;# 
  5296  0FEA                     	;# 
  5297  0FEB                     	;# 
  5298  0FED                     	;# 
  5299  0FEE                     	;# 
  5300  0FEF                     	;# 
  5301                           
  5302                           	psect	stringtext
  5303  0600                     __pstringtext:	
  5304  0600                     _ledFullOff:	
  5305  0600  3400               	retlw	0
  5306  0601  3400               	retlw	0
  5307  0602  3400               	retlw	0
  5308  0603                     __end_of_ledFullOff:	
  5309  0603                     _ledFullOn:	
  5310  0603  3414               	retlw	20
  5311  0604  3414               	retlw	20
  5312  0605  3414               	retlw	20
  5313  0606                     __end_of_ledFullOn:	
  5314  0606                     _commands:	
  5315  0606  345C               	retlw	low (STR_1| (0+32768))
  5316  0607  3487               	retlw	high (STR_1| (0+32768))
  5317  0608  3406               	retlw	6
  5318  0609  3400               	retlw	low _setCommandProcess
  5319  060A  3403               	retlw	high _setCommandProcess
  5320  060B  3490               	retlw	low (STR_2| (0+32768))
  5321  060C  3486               	retlw	high (STR_2| (0+32768))
  5322  060D  3455               	retlw	low (STR_3| (0+32768))
  5323  060E  3487               	retlw	high (STR_3| (0+32768))
  5324  060F  3406               	retlw	6
  5325  0610  34C5               	retlw	low _getCommandProcess
  5326  0611  3402               	retlw	high _getCommandProcess
  5327  0612  34E0               	retlw	low (STR_4| (0+32768))
  5328  0613  3486               	retlw	high (STR_4| (0+32768))
  5329  0614  3463               	retlw	low (STR_5| (0+32768))
  5330  0615  3487               	retlw	high (STR_5| (0+32768))
  5331  0616  3404               	retlw	4
  5332  0617  34A6               	retlw	low _testCommandProcess
  5333  0618  3402               	retlw	high _testCommandProcess
  5334  0619  34BE               	retlw	low (STR_6| (0+32768))
  5335  061A  3486               	retlw	high (STR_6| (0+32768))
  5336  061B  3410               	retlw	low ((STR_14+18)| (0+32768))
  5337  061C  3487               	retlw	high ((STR_14+18)| (0+32768))
  5338  061D  3400               	retlw	0
  5339  061E  3400               	retlw	0
  5340  061F  3400               	retlw	0
  5341  0620  3410               	retlw	low ((STR_14+18)| (0+32768))
  5342  0621  3487               	retlw	high ((STR_14+18)| (0+32768))
  5343  0622                     __end_of_commands:	
  5344  0622                     _CMD_SET_STARRY:	
  5345  0622  3453               	retlw	83
  5346  0623  3465               	retlw	101
  5347  0624  3474               	retlw	116
  5348  0625  344C               	retlw	76
  5349  0626  3445               	retlw	69
  5350  0627  3444               	retlw	68
  5351  0628  3420               	retlw	32
  5352  0629  3453               	retlw	83
  5353  062A  3454               	retlw	84
  5354  062B  3441               	retlw	65
  5355  062C  3452               	retlw	82
  5356  062D  3452               	retlw	82
  5357  062E  3459               	retlw	89
  5358  062F  340D               	retlw	13
  5359  0630  340A               	retlw	10
  5360  0631  3400               	retlw	0
  5361  0632                     __end_of_CMD_SET_STARRY:	
  5362  0632                     _CMD_SET_DIRECT:	
  5363  0632  3453               	retlw	83
  5364  0633  3465               	retlw	101
  5365  0634  3474               	retlw	116
  5366  0635  344C               	retlw	76
  5367  0636  3445               	retlw	69
  5368  0637  3444               	retlw	68
  5369  0638  3420               	retlw	32
  5370  0639  3444               	retlw	68
  5371  063A  3449               	retlw	73
  5372  063B  3452               	retlw	82
  5373  063C  3445               	retlw	69
  5374  063D  3443               	retlw	67
  5375  063E  3454               	retlw	84
  5376  063F  3420               	retlw	32
  5377  0640  3400               	retlw	0
  5378  0641                     __end_of_CMD_SET_DIRECT:	
  5379  0641                     _CMD_SET_PARTY:	
  5380  0641  3453               	retlw	83
  5381  0642  3465               	retlw	101
  5382  0643  3474               	retlw	116
  5383  0644  344C               	retlw	76
  5384  0645  3445               	retlw	69
  5385  0646  3444               	retlw	68
  5386  0647  3420               	retlw	32
  5387  0648  3450               	retlw	80
  5388  0649  3441               	retlw	65
  5389  064A  3452               	retlw	82
  5390  064B  3454               	retlw	84
  5391  064C  3459               	retlw	89
  5392  064D  340D               	retlw	13
  5393  064E  340A               	retlw	10
  5394  064F  3400               	retlw	0
  5395  0650                     __end_of_CMD_SET_PARTY:	
  5396  0650                     _CMD_GET_STATE:	
  5397  0650  3447               	retlw	71
  5398  0651  3465               	retlw	101
  5399  0652  3474               	retlw	116
  5400  0653  344C               	retlw	76
  5401  0654  3445               	retlw	69
  5402  0655  3444               	retlw	68
  5403  0656  3453               	retlw	83
  5404  0657  3474               	retlw	116
  5405  0658  3461               	retlw	97
  5406  0659  3474               	retlw	116
  5407  065A  3465               	retlw	101
  5408  065B  340D               	retlw	13
  5409  065C  340A               	retlw	10
  5410  065D  3400               	retlw	0
  5411  065E                     __end_of_CMD_GET_STATE:	
  5412  065E                     _CMD_SET_XMAS:	
  5413  065E  3453               	retlw	83
  5414  065F  3465               	retlw	101
  5415  0660  3474               	retlw	116
  5416  0661  344C               	retlw	76
  5417  0662  3445               	retlw	69
  5418  0663  3444               	retlw	68
  5419  0664  3420               	retlw	32
  5420  0665  3458               	retlw	88
  5421  0666  344D               	retlw	77
  5422  0667  3441               	retlw	65
  5423  0668  3453               	retlw	83
  5424  0669  340D               	retlw	13
  5425  066A  340A               	retlw	10
  5426  066B  3400               	retlw	0
  5427  066C                     __end_of_CMD_SET_XMAS:	
  5428  066C                     _CMD_SET_OFF:	
  5429  066C  3453               	retlw	83
  5430  066D  3465               	retlw	101
  5431  066E  3474               	retlw	116
  5432  066F  344C               	retlw	76
  5433  0670  3445               	retlw	69
  5434  0671  3444               	retlw	68
  5435  0672  3420               	retlw	32
  5436  0673  344F               	retlw	79
  5437  0674  3466               	retlw	102
  5438  0675  3466               	retlw	102
  5439  0676  340D               	retlw	13
  5440  0677  340A               	retlw	10
  5441  0678  3400               	retlw	0
  5442  0679                     __end_of_CMD_SET_OFF:	
  5443  0679                     _CMD_TEST_SRAM:	
  5444  0679  3454               	retlw	84
  5445  067A  3445               	retlw	69
  5446  067B  3453               	retlw	83
  5447  067C  3454               	retlw	84
  5448  067D  3420               	retlw	32
  5449  067E  3453               	retlw	83
  5450  067F  3452               	retlw	82
  5451  0680  3441               	retlw	65
  5452  0681  344D               	retlw	77
  5453  0682  340D               	retlw	13
  5454  0683  340A               	retlw	10
  5455  0684  3400               	retlw	0
  5456  0685                     __end_of_CMD_TEST_SRAM:	
  5457  0685                     _CMD_TEST_LED:	
  5458  0685  3454               	retlw	84
  5459  0686  3445               	retlw	69
  5460  0687  3453               	retlw	83
  5461  0688  3454               	retlw	84
  5462  0689  3420               	retlw	32
  5463  068A  344C               	retlw	76
  5464  068B  3445               	retlw	69
  5465  068C  3444               	retlw	68
  5466  068D  340D               	retlw	13
  5467  068E  340A               	retlw	10
  5468  068F  3400               	retlw	0
  5469  0690                     __end_of_CMD_TEST_LED:	
  5470  000B                     _INTCONbits	set	11
  5471  0010                     _PIR1bits	set	16
  5472  001E                     _T2CLKCON	set	30
  5473  001C                     _T2CON	set	28
  5474  001C                     _T2CONbits	set	28
  5475  001D                     _T2HLT	set	29
  5476  001B                     _T2PR	set	27
  5477  001F                     _T2RST	set	31
  5478  001A                     _T2TMR	set	26
  5479  005F                     _GIE	set	95
  5480  009D                     _ADCON0	set	157
  5481  009E                     _ADCON1	set	158
  5482  009F                     _ADCON2	set	159
  5483  009C                     _ADRESH	set	156
  5484  009B                     _ADRESL	set	155
  5485  0095                     _OPTION_REGbits	set	149
  5486  0099                     _OSCCON	set	153
  5487  009A                     _OSCSTAT	set	154
  5488  0098                     _OSCTUNE	set	152
  5489  0090                     _PIE1bits	set	144
  5490  008C                     _TRISA	set	140
  5491  008D                     _TRISB	set	141
  5492  008E                     _TRISC	set	142
  5493  04D6                     _PLLR	set	1238
  5494  010C                     _LATA	set	268
  5495  010D                     _LATB	set	269
  5496  010E                     _LATC	set	270
  5497  018C                     _ANSELA	set	396
  5498  018D                     _ANSELB	set	397
  5499  018E                     _ANSELC	set	398
  5500  019F                     _BAUD1CON	set	415
  5501  0199                     _RC1REG	set	409
  5502  019D                     _RC1STA	set	413
  5503  019D                     _RC1STAbits	set	413
  5504  019C                     _SPBRGH	set	412
  5505  019B                     _SPBRGL	set	411
  5506  019A                     _TX1REG	set	410
  5507  019E                     _TX1STA	set	414
  5508  0212                     _SSP1ADD	set	530
  5509  0215                     _SSP1CON1	set	533
  5510  0215                     _SSP1CON1bits	set	533
  5511  0214                     _SSP1STAT	set	532
  5512  0214                     _SSP1STATbits	set	532
  5513  0211                     _SSPBUF	set	529
  5514  020D                     _WPUB	set	525
  5515  020E                     _WPUC	set	526
  5516  029E                     _CCPTMRSbits	set	670
  5517  1CB6                     _IOCBF6	set	7350
  5518  1CB7                     _IOCBF7	set	7351
  5519  1CA6                     _IOCBP6	set	7334
  5520  1CA7                     _IOCBP7	set	7335
  5521  1CCB                     _IOCCF3	set	7371
  5522  1CCC                     _IOCCF4	set	7372
  5523  1CCD                     _IOCCF5	set	7373
  5524  1CCE                     _IOCCF6	set	7374
  5525  1CCF                     _IOCCF7	set	7375
  5526  1CBB                     _IOCCP3	set	7355
  5527  1CBC                     _IOCCP4	set	7356
  5528  1CBD                     _IOCCP5	set	7357
  5529  1CBE                     _IOCCP6	set	7358
  5530  1CBF                     _IOCCP7	set	7359
  5531  0619                     _PWM3CON	set	1561
  5532  0618                     _PWM3DCH	set	1560
  5533  0617                     _PWM3DCL	set	1559
  5534  0E0F                     _PPSLOCK	set	3599
  5535  0E0F                     _PPSLOCKbits	set	3599
  5536  0E24                     _RXPPS	set	3620
  5537  0E20                     _SSPCLKPPS	set	3616
  5538  0E21                     _SSPDATPPS	set	3617
  5539  0E95                     _RA5PPS	set	3733
  5540  0E9C                     _RB4PPS	set	3740
  5541  0EA0                     _RC0PPS	set	3744
  5542  0EA1                     _RC1PPS	set	3745
  5543  0F2E                     _CLC4CON	set	3886
  5544  0F34                     _CLC4GLS0	set	3892
  5545  0F35                     _CLC4GLS1	set	3893
  5546  0F36                     _CLC4GLS2	set	3894
  5547  0F37                     _CLC4GLS3	set	3895
  5548  0F2F                     _CLC4POL	set	3887
  5549  0F30                     _CLC4SEL0	set	3888
  5550  0F31                     _CLC4SEL1	set	3889
  5551  0F32                     _CLC4SEL2	set	3890
  5552  0F33                     _CLC4SEL3	set	3891
  5553  0690                     STR_2:	
  5554  0690  3453               	retlw	83	;'S'
  5555  0691  3465               	retlw	101	;'e'
  5556  0692  3474               	retlw	116	;'t'
  5557  0693  3420               	retlw	32	;' '
  5558  0694  344C               	retlw	76	;'L'
  5559  0695  3445               	retlw	69	;'E'
  5560  0696  3444               	retlw	68	;'D'
  5561  0697  3420               	retlw	32	;' '
  5562  0698  344D               	retlw	77	;'M'
  5563  0699  346F               	retlw	111	;'o'
  5564  069A  3464               	retlw	100	;'d'
  5565  069B  3465               	retlw	101	;'e'
  5566  069C  343A               	retlw	58	;':'
  5567  069D  3420               	retlw	32	;' '
  5568  069E  344F               	retlw	79	;'O'
  5569  069F  3466               	retlw	102	;'f'
  5570  06A0  3466               	retlw	102	;'f'
  5571  06A1  342C               	retlw	44	;','
  5572  06A2  3444               	retlw	68	;'D'
  5573  06A3  3449               	retlw	73	;'I'
  5574  06A4  3452               	retlw	82	;'R'
  5575  06A5  3445               	retlw	69	;'E'
  5576  06A6  3443               	retlw	67	;'C'
  5577  06A7  3454               	retlw	84	;'T'
  5578  06A8  342C               	retlw	44	;','
  5579  06A9  3453               	retlw	83	;'S'
  5580  06AA  3454               	retlw	84	;'T'
  5581  06AB  3441               	retlw	65	;'A'
  5582  06AC  3452               	retlw	82	;'R'
  5583  06AD  3452               	retlw	82	;'R'
  5584  06AE  3459               	retlw	89	;'Y'
  5585  06AF  342C               	retlw	44	;','
  5586  06B0  3458               	retlw	88	;'X'
  5587  06B1  344D               	retlw	77	;'M'
  5588  06B2  3441               	retlw	65	;'A'
  5589  06B3  3453               	retlw	83	;'S'
  5590  06B4  342C               	retlw	44	;','
  5591  06B5  3450               	retlw	80	;'P'
  5592  06B6  3441               	retlw	65	;'A'
  5593  06B7  3452               	retlw	82	;'R'
  5594  06B8  3454               	retlw	84	;'T'
  5595  06B9  3459               	retlw	89	;'Y'
  5596  06BA  342E               	retlw	46	;'.'
  5597  06BB  340D               	retlw	13
  5598  06BC  340A               	retlw	10
  5599  06BD  3400               	retlw	0
  5600  06BE                     STR_6:	
  5601  06BE  3453               	retlw	83	;'S'
  5602  06BF  3479               	retlw	121	;'y'
  5603  06C0  3473               	retlw	115	;'s'
  5604  06C1  3474               	retlw	116	;'t'
  5605  06C2  3465               	retlw	101	;'e'
  5606  06C3  346D               	retlw	109	;'m'
  5607  06C4  3420               	retlw	32	;' '
  5608  06C5  3473               	retlw	115	;'s'
  5609  06C6  3465               	retlw	101	;'e'
  5610  06C7  346C               	retlw	108	;'l'
  5611  06C8  3466               	retlw	102	;'f'
  5612  06C9  342D               	retlw	45	;'-'
  5613  06CA  3474               	retlw	116	;'t'
  5614  06CB  3465               	retlw	101	;'e'
  5615  06CC  3473               	retlw	115	;'s'
  5616  06CD  3474               	retlw	116	;'t'
  5617  06CE  343A               	retlw	58	;':'
  5618  06CF  344C               	retlw	76	;'L'
  5619  06D0  3445               	retlw	69	;'E'
  5620  06D1  3444               	retlw	68	;'D'
  5621  06D2  342C               	retlw	44	;','
  5622  06D3  3420               	retlw	32	;' '
  5623  06D4  3453               	retlw	83	;'S'
  5624  06D5  3452               	retlw	82	;'R'
  5625  06D6  3441               	retlw	65	;'A'
  5626  06D7  344D               	retlw	77	;'M'
  5627  06D8  342C               	retlw	44	;','
  5628  06D9  3420               	retlw	32	;' '
  5629  06DA  3441               	retlw	65	;'A'
  5630  06DB  344C               	retlw	76	;'L'
  5631  06DC  344C               	retlw	76	;'L'
  5632  06DD  340D               	retlw	13
  5633  06DE  340A               	retlw	10
  5634  06DF  3400               	retlw	0
  5635  06E0                     STR_4:	
  5636  06E0  3447               	retlw	71	;'G'
  5637  06E1  3465               	retlw	101	;'e'
  5638  06E2  3474               	retlw	116	;'t'
  5639  06E3  3420               	retlw	32	;' '
  5640  06E4  3474               	retlw	116	;'t'
  5641  06E5  3468               	retlw	104	;'h'
  5642  06E6  3465               	retlw	101	;'e'
  5643  06E7  3420               	retlw	32	;' '
  5644  06E8  3463               	retlw	99	;'c'
  5645  06E9  3475               	retlw	117	;'u'
  5646  06EA  3472               	retlw	114	;'r'
  5647  06EB  3472               	retlw	114	;'r'
  5648  06EC  3465               	retlw	101	;'e'
  5649  06ED  346E               	retlw	110	;'n'
  5650  06EE  3474               	retlw	116	;'t'
  5651  06EF  3420               	retlw	32	;' '
  5652  06F0  344C               	retlw	76	;'L'
  5653  06F1  3445               	retlw	69	;'E'
  5654  06F2  3444               	retlw	68	;'D'
  5655  06F3  3420               	retlw	32	;' '
  5656  06F4  3473               	retlw	115	;'s'
  5657  06F5  3474               	retlw	116	;'t'
  5658  06F6  3461               	retlw	97	;'a'
  5659  06F7  3474               	retlw	116	;'t'
  5660  06F8  3475               	retlw	117	;'u'
  5661  06F9  3473               	retlw	115	;'s'
  5662  06FA  342E               	retlw	46	;'.'
  5663  06FB  340D               	retlw	13
  5664  06FC  340A               	retlw	10
  5665  06FD  3400               	retlw	0
  5666  06FE                     STR_14:	
  5667  06FE  3449               	retlw	73	;'I'
  5668  06FF  346E               	retlw	110	;'n'
  5669  0700  3476               	retlw	118	;'v'
  5670  0701  3461               	retlw	97	;'a'
  5671  0702  346C               	retlw	108	;'l'
  5672  0703  3469               	retlw	105	;'i'
  5673  0704  3464               	retlw	100	;'d'
  5674  0705  3420               	retlw	32	;' '
  5675  0706  3443               	retlw	67	;'C'
  5676  0707  346F               	retlw	111	;'o'
  5677  0708  346D               	retlw	109	;'m'
  5678  0709  346D               	retlw	109	;'m'
  5679  070A  3461               	retlw	97	;'a'
  5680  070B  346E               	retlw	110	;'n'
  5681  070C  3464               	retlw	100	;'d'
  5682  070D  3420               	retlw	32	;' '
  5683  070E  340D               	retlw	13
  5684  070F  340A               	retlw	10
  5685  0710  3400               	retlw	0
  5686  0711                     STR_17:	
  5687  0711  3444               	retlw	68	;'D'
  5688  0712  3469               	retlw	105	;'i'
  5689  0713  3472               	retlw	114	;'r'
  5690  0714  3465               	retlw	101	;'e'
  5691  0715  3463               	retlw	99	;'c'
  5692  0716  3474               	retlw	116	;'t'
  5693  0717  3420               	retlw	32	;' '
  5694  0718  3463               	retlw	99	;'c'
  5695  0719  346F               	retlw	111	;'o'
  5696  071A  346C               	retlw	108	;'l'
  5697  071B  346F               	retlw	111	;'o'
  5698  071C  3472               	retlw	114	;'r'
  5699  071D  340D               	retlw	13
  5700  071E  340A               	retlw	10
  5701  071F  3400               	retlw	0
  5702  0720                     STR_16:	
  5703  0720  344C               	retlw	76	;'L'
  5704  0721  3445               	retlw	69	;'E'
  5705  0722  3444               	retlw	68	;'D'
  5706  0723  3420               	retlw	32	;' '
  5707  0724  3469               	retlw	105	;'i'
  5708  0725  3473               	retlw	115	;'s'
  5709  0726  3420               	retlw	32	;' '
  5710  0727  344F               	retlw	79	;'O'
  5711  0728  3446               	retlw	70	;'F'
  5712  0729  3446               	retlw	70	;'F'
  5713  072A  340D               	retlw	13
  5714  072B  340A               	retlw	10
  5715  072C  3400               	retlw	0
  5716  072D                     STR_18:	
  5717  072D  3453               	retlw	83	;'S'
  5718  072E  3474               	retlw	116	;'t'
  5719  072F  3461               	retlw	97	;'a'
  5720  0730  3472               	retlw	114	;'r'
  5721  0731  3472               	retlw	114	;'r'
  5722  0732  3479               	retlw	121	;'y'
  5723  0733  340D               	retlw	13
  5724  0734  340A               	retlw	10
  5725  0735  3400               	retlw	0
  5726  0736                     STR_9:	
  5727  0736  3444               	retlw	68	;'D'
  5728  0737  344F               	retlw	79	;'O'
  5729  0738  344E               	retlw	78	;'N'
  5730  0739  3445               	retlw	69	;'E'
  5731  073A  3421               	retlw	33	;'!'
  5732  073B  340D               	retlw	13
  5733  073C  340A               	retlw	10
  5734  073D  3400               	retlw	0
  5735  073E                     STR_21:	
  5736  073E  3445               	retlw	69	;'E'
  5737  073F  3452               	retlw	82	;'R'
  5738  0740  3452               	retlw	82	;'R'
  5739  0741  344F               	retlw	79	;'O'
  5740  0742  3452               	retlw	82	;'R'
  5741  0743  340D               	retlw	13
  5742  0744  340A               	retlw	10
  5743  0745  3400               	retlw	0
  5744  0746                     STR_20:	
  5745  0746  3450               	retlw	80	;'P'
  5746  0747  3461               	retlw	97	;'a'
  5747  0748  3472               	retlw	114	;'r'
  5748  0749  3474               	retlw	116	;'t'
  5749  074A  3479               	retlw	121	;'y'
  5750  074B  340D               	retlw	13
  5751  074C  340A               	retlw	10
  5752  074D  3400               	retlw	0
  5753  074E                     STR_19:	
  5754  074E  3458               	retlw	88	;'X'
  5755  074F  346D               	retlw	109	;'m'
  5756  0750  3461               	retlw	97	;'a'
  5757  0751  3473               	retlw	115	;'s'
  5758  0752  340D               	retlw	13
  5759  0753  340A               	retlw	10
  5760  0754  3400               	retlw	0
  5761  0755                     STR_3:	
  5762  0755  3447               	retlw	71	;'G'
  5763  0756  3465               	retlw	101	;'e'
  5764  0757  3474               	retlw	116	;'t'
  5765  0758  344C               	retlw	76	;'L'
  5766  0759  3445               	retlw	69	;'E'
  5767  075A  3444               	retlw	68	;'D'
  5768  075B  3400               	retlw	0
  5769  075C                     STR_1:	
  5770  075C  3453               	retlw	83	;'S'
  5771  075D  3465               	retlw	101	;'e'
  5772  075E  3474               	retlw	116	;'t'
  5773  075F  344C               	retlw	76	;'L'
  5774  0760  3445               	retlw	69	;'E'
  5775  0761  3444               	retlw	68	;'D'
  5776  0762  3400               	retlw	0
  5777  0763                     STR_5:	
  5778  0763  3454               	retlw	84	;'T'
  5779  0764  3465               	retlw	101	;'e'
  5780  0765  3473               	retlw	115	;'s'
  5781  0766  3474               	retlw	116	;'t'
  5782  0767  3400               	retlw	0
  5783  0710                     
  5784                           ; #config settings
  5785  0000                     
  5786                           	psect	cinit
  5787  0020                     start_initialization:	
  5788  0020                     __initialization:	
  5789                           
  5790                           ; Clear objects allocated to BANK0
  5791  0020  3020               	movlw	low __pbssBANK0
  5792  0021  0084               	movwf	4
  5793  0022  3000               	movlw	high __pbssBANK0
  5794  0023  0085               	movwf	5
  5795  0024  3039               	movlw	57
  5796  0025  3187  27B7  3180   	fcall	clear_ram0
  5797  0028                     end_of_initialization:	
  5798                           ;End of C runtime variable initialization code
  5799                           
  5800  0028                     __end_of__initialization:	
  5801  0028  0020               	movlb	0
  5802  0029  282A               	ljmp	_main	;jump to C main() function
  5803  002A                     __pmaintext:	
  5804 ;;
  5805 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  5806 ;;
  5807 ;; *************** function _main *****************
  5808 ;; Defined at:
  5809 ;;		line 56 in file "../src/main.c"
  5810 ;; Parameters:    Size  Location     Type
  5811 ;;		None
  5812 ;; Auto vars:     Size  Location     Type
  5813 ;;		None
  5814 ;; Return value:  Size  Location     Type
  5815 ;;		None               void
  5816 ;; Registers used:
  5817 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5818 ;; Tracked objects:
  5819 ;;		On entry : B1F/0
  5820 ;;		On exit  : 0/0
  5821 ;;		Unchanged: 0/0
  5822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5825 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5826 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5827 ;;Total ram usage:        3 bytes
  5828 ;; Hardware stack levels required when called:    7
  5829 ;; This function calls:
  5830 ;;		_COMM_Task
  5831 ;;		_LED_Task
  5832 ;;		_LED_Test
  5833 ;;		_SYSTEM_Initialize
  5834 ;; This function is called by:
  5835 ;;		Startup code after reset
  5836 ;; This function uses a non-reentrant model
  5837 ;;
  5838                           
  5839                           
  5840                           ;psect for function _main
  5841  002A                     _main:	
  5842                           
  5843                           ;main.c: 59: SYSTEM_Initialize();
  5844                           
  5845                           ;incstack = 0
  5846                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5847  002A  2114  3180         	fcall	_SYSTEM_Initialize
  5848                           
  5849                           ;main.c: 62: (INTCONbits.GIE = 1);
  5850  002C  178B               	bsf	11,7	;volatile
  5851                           
  5852                           ;main.c: 65: (INTCONbits.PEIE = 1);
  5853  002D  170B               	bsf	11,6	;volatile
  5854                           
  5855                           ;main.c: 68: LED_Test();
  5856  002E  2041               	fcall	_LED_Test
  5857  002F                     l2172:	
  5858                           
  5859                           ;main.c: 71: {
  5860                           ;main.c: 72: COMM_Task();
  5861  002F  3181  21CD  3180   	fcall	_COMM_Task
  5862                           
  5863                           ;main.c: 73: LED_Task();
  5864  0032  2095  3180         	fcall	_LED_Task
  5865                           
  5866                           ;main.c: 74: _delay((unsigned long)((100)*(32000000/4000.0)));
  5867  0034  3005               	movlw	5
  5868  0035  00DE               	movwf	??_main+2
  5869  0036  300F               	movlw	15
  5870  0037  00DD               	movwf	??_main+1
  5871  0038  30F4               	movlw	244
  5872  0039  00DC               	movwf	??_main
  5873  003A                     u1527:	
  5874  003A  0BDC               	decfsz	??_main,f
  5875  003B  283A               	goto	u1527
  5876  003C  0BDD               	decfsz	??_main+1,f
  5877  003D  283A               	goto	u1527
  5878  003E  0BDE               	decfsz	??_main+2,f
  5879  003F  283A               	goto	u1527
  5880  0040  282F               	goto	l2172
  5881  0041                     __end_of_main:	
  5882  0041                     __ptext17:	
  5883 ;; *************** function _LED_Test *****************
  5884 ;; Defined at:
  5885 ;;		line 13 in file "../src/LED.c"
  5886 ;; Parameters:    Size  Location     Type
  5887 ;;		None
  5888 ;; Auto vars:     Size  Location     Type
  5889 ;;  j               1    6[COMMON] unsigned char 
  5890 ;;  i               1    5[COMMON] unsigned char 
  5891 ;; Return value:  Size  Location     Type
  5892 ;;		None               void
  5893 ;; Registers used:
  5894 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5895 ;; Tracked objects:
  5896 ;;		On entry : 0/5
  5897 ;;		On exit  : 0/0
  5898 ;;		Unchanged: 0/0
  5899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5901 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5902 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5903 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5904 ;;Total ram usage:        5 bytes
  5905 ;; Hardware stack levels used:    1
  5906 ;; Hardware stack levels required when called:    4
  5907 ;; This function calls:
  5908 ;;		_ledSendByte
  5909 ;; This function is called by:
  5910 ;;		_main
  5911 ;;		_testCommandProcess
  5912 ;; This function uses a non-reentrant model
  5913 ;;
  5914                           
  5915                           
  5916                           ;psect for function _LED_Test
  5917  0041                     _LED_Test:	
  5918  0041                     l1732:	
  5919                           ;incstack = 0
  5920                           ; Regs used in _LED_Test: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5921                           
  5922                           
  5923                           ;LED.c: 17: for(uint8_t i=0; i<6; i++)
  5924  0041  01F5               	clrf	LED_Test@i
  5925  0042                     l1738:	
  5926                           
  5927                           ;LED.c: 18: {
  5928                           ;LED.c: 19: for(uint8_t j=0;j<6;j++)
  5929  0042  01F6               	clrf	LED_Test@j
  5930  0043                     l1744:	
  5931                           
  5932                           ;LED.c: 20: {
  5933                           ;LED.c: 21: if(j==i)
  5934  0043  0876               	movf	LED_Test@j,w
  5935  0044  0675               	xorwf	LED_Test@i,w
  5936  0045  1D03               	skipz
  5937  0046  2879               	goto	l1748
  5938                           
  5939                           ;LED.c: 22: {
  5940                           ;LED.c: 23: ledSendByte(ledFullOn.Green);
  5941  0047  3004               	movlw	low ((_ledFullOn+1)| (0+32768))
  5942  0048  0084               	movwf	4
  5943  0049  3086               	movlw	high ((_ledFullOn+1)| (0+32768))
  5944  004A  0085               	movwf	5
  5945  004B  0800               	movf	0,w	;code access
  5946  004C                     i12L__ptext18:	
  5947                           
  5948                           ;psect for function _ledSendByte
  5949  004C                     i12L_ledSendByte:	
  5950                           
  5951                           ;incstack = 0
  5952                           ; Regs used in _ledSendByte: [wreg+status,2+status,0+pclath+cstack]
  5953                           ;ledSendByte@data stored from wreg
  5954  004C  00F1               	movwf	ledSendByte@data
  5955  004D                     i12Ll1730:	
  5956                           
  5957                           ;LED.c: 147: SPI_Exchange8bit(data);
  5958  004D  0871               	movf	ledSendByte@data,w
  5959  004E  210B  3180         	fcall	_SPI_Exchange8bit
  5960  0050                     i12Ll455:	
  5961                           
  5962                           ;LED.c: 24: ledSendByte(ledFullOn.Red);
  5963  0050  3003               	movlw	low (_ledFullOn| (0+32768))
  5964  0051  0084               	movwf	4
  5965  0052  3086               	movlw	high (_ledFullOn| (0+32768))
  5966  0053  0085               	movwf	5
  5967  0054  0800               	movf	0,w	;code access
  5968  0055                     i13L__ptext18:	
  5969                           
  5970                           ;psect for function _ledSendByte
  5971  0055                     i13L_ledSendByte:	
  5972                           
  5973                           ;incstack = 0
  5974                           ; Regs used in _ledSendByte: [wreg+status,2+status,0+pclath+cstack]
  5975                           ;ledSendByte@data stored from wreg
  5976  0055  00F1               	movwf	ledSendByte@data
  5977  0056                     i13Ll1730:	
  5978                           
  5979                           ;LED.c: 147: SPI_Exchange8bit(data);
  5980  0056  0871               	movf	ledSendByte@data,w
  5981  0057  210B  3180         	fcall	_SPI_Exchange8bit
  5982  0059                     i13Ll455:	
  5983                           
  5984                           ;LED.c: 25: ledSendByte(ledFullOn.Blue);
  5985  0059  3005               	movlw	low ((_ledFullOn+2)| (0+32768))
  5986  005A  0084               	movwf	4
  5987  005B  3086               	movlw	high ((_ledFullOn+2)| (0+32768))
  5988  005C  0085               	movwf	5
  5989  005D  0800               	movf	0,w	;code access
  5990  005E                     i14L__ptext18:	
  5991                           
  5992                           ;psect for function _ledSendByte
  5993  005E                     i14L_ledSendByte:	
  5994                           
  5995                           ;incstack = 0
  5996                           ; Regs used in _ledSendByte: [wreg+status,2+status,0+pclath+cstack]
  5997                           ;ledSendByte@data stored from wreg
  5998  005E  00F1               	movwf	ledSendByte@data
  5999  005F                     i14Ll1730:	
  6000                           
  6001                           ;LED.c: 147: SPI_Exchange8bit(data);
  6002  005F  0871               	movf	ledSendByte@data,w
  6003  0060  210B  3180         	fcall	_SPI_Exchange8bit
  6004  0062                     i14Ll455:	
  6005  0062                     iL98:	
  6006                           ;LED.c: 26: }
  6007                           
  6008  0062  3006               	movlw	6
  6009  0063  0AF6               	incf	LED_Test@j,f
  6010  0064  0276               	subwf	LED_Test@j,w
  6011  0065  1C03               	skipc
  6012  0066  2843               	goto	l1744
  6013                           
  6014                           ;LED.c: 32: }
  6015                           ;LED.c: 33: }
  6016                           ;LED.c: 34: _delay((unsigned long)((50)*(32000000/4000.0)));
  6017  0067  3003               	movlw	3
  6018  0068  00F4               	movwf	??_LED_Test+2
  6019  0069  3008               	movlw	8
  6020  006A  00F3               	movwf	??_LED_Test+1
  6021  006B  3078               	movlw	120
  6022  006C  00F2               	movwf	??_LED_Test
  6023  006D                     u1537:	
  6024  006D  0BF2               	decfsz	??_LED_Test,f
  6025  006E  286D               	goto	u1537
  6026  006F  0BF3               	decfsz	??_LED_Test+1,f
  6027  0070  286D               	goto	u1537
  6028  0071  0BF4               	decfsz	??_LED_Test+2,f
  6029  0072  286D               	goto	u1537
  6030  0073  3006               	movlw	6
  6031  0074  0AF5               	incf	LED_Test@i,f
  6032  0075  0275               	subwf	LED_Test@i,w
  6033  0076  1803               	btfsc	3,0
  6034  0077  0008               	return
  6035  0078  2842               	goto	l1738
  6036  0079                     l1748:	
  6037                           
  6038                           ;LED.c: 27: else
  6039                           ;LED.c: 28: {
  6040                           ;LED.c: 29: ledSendByte(ledFullOff.Green);
  6041  0079  3001               	movlw	low ((_ledFullOff+1)| (0+32768))
  6042  007A  0084               	movwf	4
  6043  007B  3086               	movlw	high ((_ledFullOff+1)| (0+32768))
  6044  007C  0085               	movwf	5
  6045  007D  0800               	movf	0,w	;code access
  6046  007E                     i15L__ptext18:	
  6047                           
  6048                           ;psect for function _ledSendByte
  6049  007E                     i15L_ledSendByte:	
  6050                           
  6051                           ;incstack = 0
  6052                           ; Regs used in _ledSendByte: [wreg+status,2+status,0+pclath+cstack]
  6053                           ;ledSendByte@data stored from wreg
  6054  007E  00F1               	movwf	ledSendByte@data
  6055  007F                     i15Ll1730:	
  6056                           
  6057                           ;LED.c: 147: SPI_Exchange8bit(data);
  6058  007F  0871               	movf	ledSendByte@data,w
  6059  0080  210B  3180         	fcall	_SPI_Exchange8bit
  6060  0082                     i15Ll455:	
  6061                           
  6062                           ;LED.c: 30: ledSendByte(ledFullOff.Red);
  6063  0082  3000               	movlw	low (_ledFullOff| (0+32768))
  6064  0083  0084               	movwf	4
  6065  0084  3086               	movlw	high (_ledFullOff| (0+32768))
  6066  0085  0085               	movwf	5
  6067  0086  0800               	movf	0,w	;code access
  6068  0087                     i16L__ptext18:	
  6069                           
  6070                           ;psect for function _ledSendByte
  6071  0087                     i16L_ledSendByte:	
  6072                           
  6073                           ;incstack = 0
  6074                           ; Regs used in _ledSendByte: [wreg+status,2+status,0+pclath+cstack]
  6075                           ;ledSendByte@data stored from wreg
  6076  0087  00F1               	movwf	ledSendByte@data
  6077  0088                     i16Ll1730:	
  6078                           
  6079                           ;LED.c: 147: SPI_Exchange8bit(data);
  6080  0088  0871               	movf	ledSendByte@data,w
  6081  0089  210B  3180         	fcall	_SPI_Exchange8bit
  6082  008B                     i16Ll455:	
  6083                           
  6084                           ;LED.c: 31: ledSendByte(ledFullOff.Blue);
  6085  008B  3002               	movlw	low ((_ledFullOff+2)| (0+32768))
  6086  008C  0084               	movwf	4
  6087  008D  3086               	movlw	high ((_ledFullOff+2)| (0+32768))
  6088  008E  0085               	movwf	5
  6089  008F  0800               	movf	0,w	;code access
  6090  0090                     i17L__ptext18:	
  6091                           
  6092                           ;psect for function _ledSendByte
  6093  0090                     i17L_ledSendByte:	
  6094                           
  6095                           ;incstack = 0
  6096                           ; Regs used in _ledSendByte: [wreg+status,2+status,0+pclath+cstack]
  6097                           ;ledSendByte@data stored from wreg
  6098  0090  00F1               	movwf	ledSendByte@data
  6099  0091                     i17Ll1730:	
  6100                           
  6101                           ;LED.c: 147: SPI_Exchange8bit(data);
  6102  0091  0871               	movf	ledSendByte@data,w
  6103  0092  210B  3180         	fcall	_SPI_Exchange8bit
  6104  0094                     i17Ll455:	
  6105  0094  2862               	ljmp	iL98
  6106  0095                     __end_of_LED_Test:	
  6107  0095                     __ptext11:	
  6108 ;; *************** function _LED_Task *****************
  6109 ;; Defined at:
  6110 ;;		line 39 in file "../src/LED.c"
  6111 ;; Parameters:    Size  Location     Type
  6112 ;;		None
  6113 ;; Auto vars:     Size  Location     Type
  6114 ;;  i               2    7[COMMON] unsigned int 
  6115 ;;  i               2    5[COMMON] unsigned int 
  6116 ;; Return value:  Size  Location     Type
  6117 ;;		None               void
  6118 ;; Registers used:
  6119 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6120 ;; Tracked objects:
  6121 ;;		On entry : 0/5
  6122 ;;		On exit  : 1F/0
  6123 ;;		Unchanged: 0/0
  6124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6126 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6128 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6129 ;;Total ram usage:        4 bytes
  6130 ;; Hardware stack levels used:    1
  6131 ;; Hardware stack levels required when called:    5
  6132 ;; This function calls:
  6133 ;;		_ledSetColor
  6134 ;; This function is called by:
  6135 ;;		_main
  6136 ;; This function uses a non-reentrant model
  6137 ;;
  6138                           
  6139                           
  6140                           ;psect for function _LED_Task
  6141  0095                     _LED_Task:	
  6142                           
  6143                           ;LED.c: 41: static uint8_t ledOFF = 0;
  6144                           ;LED.c: 42: switch(LED_mode)
  6145                           
  6146                           ;incstack = 0
  6147                           ; Regs used in _LED_Task: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6148  0095  28FF               	goto	l2086
  6149  0096                     l2040:	
  6150                           
  6151                           ;LED.c: 45: if(ledOFF ==0)
  6152  0096  0840               	movf	LED_Task@ledOFF,w
  6153  0097  1D03               	btfss	3,2
  6154  0098  0008               	return
  6155                           
  6156                           ;LED.c: 46: {
  6157                           ;LED.c: 47: GIE = 0;
  6158  0099  138B               	bcf	11,7	;volatile
  6159                           
  6160                           ;LED.c: 48: for(uint16_t i=0;i<6;i++)
  6161  009A  01F5               	clrf	LED_Task@i
  6162  009B  01F6               	clrf	LED_Task@i+1
  6163  009C                     l2050:	
  6164                           
  6165                           ;LED.c: 49: {
  6166                           ;LED.c: 50: ledSetColor(ledFullOff);
  6167  009C  3000               	movlw	low (_ledFullOff| (0+32768))
  6168  009D  0084               	movwf	4
  6169  009E  3086               	movlw	high (_ledFullOff| (0+32768))
  6170  009F  0085               	movwf	5
  6171  00A0  3F00               	moviw [0]fsr0
  6172  00A1  00F2               	movwf	ledSetColor@ledColor
  6173  00A2  3F01               	moviw [1]fsr0
  6174  00A3  00F3               	movwf	ledSetColor@ledColor+1
  6175  00A4  3F02               	moviw [2]fsr0
  6176  00A5  00F4               	movwf	ledSetColor@ledColor+2
  6177  00A6                     i1L__ptext12:	
  6178                           
  6179                           ;psect for function _ledSetColor
  6180  00A6                     i1L_ledSetColor:	
  6181  00A6                     i1Ll1914:	
  6182                           
  6183                           ;LED.c: 90: ledSendByte(ledColor.Green);
  6184  00A6  0873               	movf	ledSetColor@ledColor+1,w
  6185  00A7                     i3L__ptext18:	
  6186                           
  6187                           ;psect for function _ledSendByte
  6188  00A7                     i3L_ledSendByte:	
  6189                           
  6190                           ;incstack = 0
  6191                           ; Regs used in _ledSendByte: [wreg+status,2+status,0+pclath+cstack]
  6192                           ;ledSendByte@data stored from wreg
  6193  00A7  00F1               	movwf	ledSendByte@data
  6194  00A8                     i3Ll1730:	
  6195                           
  6196                           ;LED.c: 147: SPI_Exchange8bit(data);
  6197  00A8  0871               	movf	ledSendByte@data,w
  6198  00A9  210B  3180         	fcall	_SPI_Exchange8bit
  6199  00AB                     i3Ll455:	
  6200                           
  6201                           ;LED.c: 91: ledSendByte(ledColor.Red);
  6202  00AB  0872               	movf	ledSetColor@ledColor,w
  6203  00AC                     i4L__ptext18:	
  6204                           
  6205                           ;psect for function _ledSendByte
  6206  00AC                     i4L_ledSendByte:	
  6207                           
  6208                           ;incstack = 0
  6209                           ; Regs used in _ledSendByte: [wreg+status,2+status,0+pclath+cstack]
  6210                           ;ledSendByte@data stored from wreg
  6211  00AC  00F1               	movwf	ledSendByte@data
  6212  00AD                     i4Ll1730:	
  6213                           
  6214                           ;LED.c: 147: SPI_Exchange8bit(data);
  6215  00AD  0871               	movf	ledSendByte@data,w
  6216  00AE  210B  3180         	fcall	_SPI_Exchange8bit
  6217  00B0                     i4Ll455:	
  6218                           
  6219                           ;LED.c: 92: ledSendByte(ledColor.Blue);
  6220  00B0  0874               	movf	ledSetColor@ledColor+2,w
  6221  00B1                     i5L__ptext18:	
  6222                           
  6223                           ;psect for function _ledSendByte
  6224  00B1                     i5L_ledSendByte:	
  6225                           
  6226                           ;incstack = 0
  6227                           ; Regs used in _ledSendByte: [wreg+status,2+status,0+pclath+cstack]
  6228                           ;ledSendByte@data stored from wreg
  6229  00B1  00F1               	movwf	ledSendByte@data
  6230  00B2                     i5Ll1730:	
  6231                           
  6232                           ;LED.c: 147: SPI_Exchange8bit(data);
  6233  00B2  0871               	movf	ledSendByte@data,w
  6234  00B3  210B  3180         	fcall	_SPI_Exchange8bit
  6235  00B5                     i5Ll455:	
  6236  00B5  28B6               	ljmp	iL2
  6237  00B6                     i1Ll445:	
  6238  00B6                     iL2:	
  6239  00B6  0AF5               	incf	LED_Task@i,f
  6240  00B7  1903               	skipnz
  6241  00B8  0AF6               	incf	LED_Task@i+1,f
  6242  00B9  3000               	movlw	0
  6243  00BA  0276               	subwf	LED_Task@i+1,w
  6244  00BB  3006               	movlw	6
  6245  00BC  1903               	skipnz
  6246  00BD  0275               	subwf	LED_Task@i,w
  6247  00BE  1C03               	skipc
  6248  00BF  289C               	goto	l2050
  6249                           
  6250                           ;LED.c: 51: }
  6251                           ;LED.c: 52: GIE = 1;
  6252  00C0  178B               	bsf	11,7	;volatile
  6253                           
  6254                           ;LED.c: 53: ledOFF = 1;
  6255  00C1  0020               	movlb	0	; select bank0
  6256  00C2  01C0               	clrf	LED_Task@ledOFF
  6257  00C3  0AC0               	incf	LED_Task@ledOFF,f
  6258  00C4  0008               	return
  6259  00C5                     l2056:	
  6260                           
  6261                           ;LED.c: 57: if(LED_currentColor.Blue!=LED_SetColor.Blue
  6262                           ;LED.c: 58: || LED_currentColor.Red!=LED_SetColor.Red
  6263                           ;LED.c: 59: || LED_currentColor.Green!=LED_SetColor.Green)
  6264  00C5  083D               	movf	_LED_currentColor+2,w
  6265  00C6  063A               	xorwf	_LED_SetColor+2,w
  6266  00C7  1D03               	skipz
  6267  00C8  28D1               	goto	l435
  6268  00C9  083B               	movf	_LED_currentColor,w
  6269  00CA  0638               	xorwf	_LED_SetColor,w
  6270  00CB  1D03               	skipz
  6271  00CC  28D1               	goto	l435
  6272  00CD  083C               	movf	_LED_currentColor+1,w
  6273  00CE  0639               	xorwf	_LED_SetColor+1,w
  6274  00CF  1903               	skipnz
  6275  00D0  0008               	return
  6276  00D1                     l435:	
  6277                           
  6278                           ;LED.c: 60: {
  6279                           ;LED.c: 61: GIE = 0;
  6280  00D1  138B               	bcf	11,7	;volatile
  6281                           
  6282                           ;LED.c: 62: for(uint16_t i=0;i<6;i++)
  6283  00D2  01F7               	clrf	LED_Task@i_858
  6284  00D3  01F8               	clrf	LED_Task@i_858+1
  6285  00D4                     l2068:	
  6286                           
  6287                           ;LED.c: 63: {
  6288                           ;LED.c: 64: ledSetColor(LED_SetColor);
  6289  00D4  0020               	movlb	0	; select bank0
  6290  00D5  0838               	movf	_LED_SetColor,w
  6291  00D6  00F2               	movwf	ledSetColor@ledColor
  6292  00D7  0839               	movf	_LED_SetColor+1,w
  6293  00D8  00F3               	movwf	ledSetColor@ledColor+1
  6294  00D9  083A               	movf	_LED_SetColor+2,w
  6295  00DA  00F4               	movwf	ledSetColor@ledColor+2
  6296  00DB                     i2L__ptext12:	
  6297                           
  6298                           ;psect for function _ledSetColor
  6299  00DB                     i2L_ledSetColor:	
  6300  00DB                     i2Ll1914:	
  6301                           
  6302                           ;LED.c: 90: ledSendByte(ledColor.Green);
  6303  00DB  0873               	movf	ledSetColor@ledColor+1,w
  6304  00DC                     i6L__ptext18:	
  6305                           
  6306                           ;psect for function _ledSendByte
  6307  00DC                     i6L_ledSendByte:	
  6308                           
  6309                           ;incstack = 0
  6310                           ; Regs used in _ledSendByte: [wreg+status,2+status,0+pclath+cstack]
  6311                           ;ledSendByte@data stored from wreg
  6312  00DC  00F1               	movwf	ledSendByte@data
  6313  00DD                     i6Ll1730:	
  6314                           
  6315                           ;LED.c: 147: SPI_Exchange8bit(data);
  6316  00DD  0871               	movf	ledSendByte@data,w
  6317  00DE  210B  3180         	fcall	_SPI_Exchange8bit
  6318  00E0                     i6Ll455:	
  6319                           
  6320                           ;LED.c: 91: ledSendByte(ledColor.Red);
  6321  00E0  0872               	movf	ledSetColor@ledColor,w
  6322  00E1                     i7L__ptext18:	
  6323                           
  6324                           ;psect for function _ledSendByte
  6325  00E1                     i7L_ledSendByte:	
  6326                           
  6327                           ;incstack = 0
  6328                           ; Regs used in _ledSendByte: [wreg+status,2+status,0+pclath+cstack]
  6329                           ;ledSendByte@data stored from wreg
  6330  00E1  00F1               	movwf	ledSendByte@data
  6331  00E2                     i7Ll1730:	
  6332                           
  6333                           ;LED.c: 147: SPI_Exchange8bit(data);
  6334  00E2  0871               	movf	ledSendByte@data,w
  6335  00E3  210B  3180         	fcall	_SPI_Exchange8bit
  6336  00E5                     i7Ll455:	
  6337                           
  6338                           ;LED.c: 92: ledSendByte(ledColor.Blue);
  6339  00E5  0874               	movf	ledSetColor@ledColor+2,w
  6340  00E6                     i8L__ptext18:	
  6341                           
  6342                           ;psect for function _ledSendByte
  6343  00E6                     i8L_ledSendByte:	
  6344                           
  6345                           ;incstack = 0
  6346                           ; Regs used in _ledSendByte: [wreg+status,2+status,0+pclath+cstack]
  6347                           ;ledSendByte@data stored from wreg
  6348  00E6  00F1               	movwf	ledSendByte@data
  6349  00E7                     i8Ll1730:	
  6350                           
  6351                           ;LED.c: 147: SPI_Exchange8bit(data);
  6352  00E7  0871               	movf	ledSendByte@data,w
  6353  00E8  210B  3180         	fcall	_SPI_Exchange8bit
  6354  00EA                     i8Ll455:	
  6355  00EA  28EB               	ljmp	iL8
  6356  00EB                     i2Ll445:	
  6357  00EB                     iL8:	
  6358  00EB  0AF7               	incf	LED_Task@i_858,f
  6359  00EC  1903               	skipnz
  6360  00ED  0AF8               	incf	LED_Task@i_858+1,f
  6361  00EE  3000               	movlw	0
  6362  00EF  0278               	subwf	LED_Task@i_858+1,w
  6363  00F0  3006               	movlw	6
  6364  00F1  1903               	skipnz
  6365  00F2  0277               	subwf	LED_Task@i_858,w
  6366  00F3  1C03               	skipc
  6367  00F4  28D4               	goto	l2068
  6368                           
  6369                           ;LED.c: 65: }
  6370                           ;LED.c: 66: GIE = 1;
  6371  00F5  178B               	bsf	11,7	;volatile
  6372                           
  6373                           ;LED.c: 67: LED_currentColor = LED_SetColor;
  6374  00F6  0020               	movlb	0	; select bank0
  6375  00F7  0838               	movf	_LED_SetColor,w
  6376  00F8  00BB               	movwf	_LED_currentColor
  6377  00F9  0839               	movf	_LED_SetColor+1,w
  6378  00FA  00BC               	movwf	_LED_currentColor+1
  6379  00FB  083A               	movf	_LED_SetColor+2,w
  6380  00FC  00BD               	movwf	_LED_currentColor+2
  6381  00FD                     l2076:	
  6382                           
  6383                           ;LED.c: 68: ledOFF = 0;
  6384  00FD  01C0               	clrf	LED_Task@ledOFF
  6385  00FE  0008               	return
  6386  00FF                     l2086:	
  6387  00FF  0020               	movlb	0	; select bank0
  6388  0100  0841               	movf	_LED_mode,w
  6389                           
  6390                           ; Switch size 1, requested type "speed"
  6391                           ; Number of cases is 5, Range of values is 0 to 4
  6392                           ; switch strategies available:
  6393                           ; Name         Instructions Cycles
  6394                           ; direct_byte           16     6 (fixed)
  6395                           ; simple_byte           16     9 (average)
  6396                           ; jumptable            260     6 (fixed)
  6397                           ;	Chosen strategy is direct_byte
  6398  0101  0084               	movwf	4
  6399  0102  3005               	movlw	5
  6400  0103  0204               	subwf	4,w
  6401  0104  1803               	skipnc
  6402  0105  0008               	return
  6403  0106  3185               	movlp	high S2218
  6404  0107  3504               	lslf	4,w
  6405  0108  3E10               	addlw	low S2218
  6406  0109  0082               	movwf	2
  6407  010A  0008               	return
  6408  010B                     __end_of_LED_Task:	
  6409  010B                     __ptext19:	
  6410 ;; *************** function _SPI_Exchange8bit *****************
  6411 ;; Defined at:
  6412 ;;		line 77 in file "mcc_generated_files/spi.c"
  6413 ;; Parameters:    Size  Location     Type
  6414 ;;  data            1    wreg     unsigned char 
  6415 ;; Auto vars:     Size  Location     Type
  6416 ;;  data            1    0[COMMON] unsigned char 
  6417 ;; Return value:  Size  Location     Type
  6418 ;;                  1    wreg      unsigned char 
  6419 ;; Registers used:
  6420 ;;		wreg
  6421 ;; Tracked objects:
  6422 ;;		On entry : 0/0
  6423 ;;		On exit  : 1F/4
  6424 ;;		Unchanged: 0/0
  6425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6427 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6429 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6430 ;;Total ram usage:        1 bytes
  6431 ;; Hardware stack levels used:    1
  6432 ;; Hardware stack levels required when called:    2
  6433 ;; This function calls:
  6434 ;;		Nothing
  6435 ;; This function is called by:
  6436 ;;		_ledSendByte
  6437 ;; This function uses a non-reentrant model
  6438 ;;
  6439                           
  6440                           
  6441                           ;psect for function _SPI_Exchange8bit
  6442  010B                     _SPI_Exchange8bit:	
  6443                           
  6444                           ;incstack = 0
  6445                           ; Regs used in _SPI_Exchange8bit: [wreg]
  6446                           ;SPI_Exchange8bit@data stored from wreg
  6447  010B  00F0               	movwf	SPI_Exchange8bit@data
  6448                           
  6449                           ;spi.c: 79: SSP1CON1bits.WCOL = 0;
  6450  010C  0024               	movlb	4	; select bank4
  6451  010D  1395               	bcf	21,7	;volatile
  6452                           
  6453                           ;spi.c: 81: SSPBUF = data;
  6454  010E  0870               	movf	SPI_Exchange8bit@data,w
  6455  010F  0091               	movwf	17	;volatile
  6456  0110                     l309:	
  6457                           ;spi.c: 83: while (SSP1STATbits.BF == 0x0) {
  6458                           
  6459  0110  1C14               	btfss	20,0	;volatile
  6460  0111  2910               	goto	l309
  6461                           
  6462                           ;spi.c: 84: }
  6463                           ;spi.c: 86: return (SSPBUF);
  6464  0112  0811               	movf	17,w	;volatile
  6465  0113  0008               	return
  6466  0114                     __end_of_SPI_Exchange8bit:	
  6467  0114                     __ptext1:	
  6468 ;; *************** function _SYSTEM_Initialize *****************
  6469 ;; Defined at:
  6470 ;;		line 77 in file "mcc_generated_files/mcc.c"
  6471 ;; Parameters:    Size  Location     Type
  6472 ;;		None
  6473 ;; Auto vars:     Size  Location     Type
  6474 ;;		None
  6475 ;; Return value:  Size  Location     Type
  6476 ;;		None               void
  6477 ;; Registers used:
  6478 ;;		wreg, status,2, status,0, pclath, cstack
  6479 ;; Tracked objects:
  6480 ;;		On entry : B1F/0
  6481 ;;		On exit  : 1F/5
  6482 ;;		Unchanged: 0/0
  6483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6488 ;;Total ram usage:        0 bytes
  6489 ;; Hardware stack levels used:    1
  6490 ;; Hardware stack levels required when called:    4
  6491 ;; This function calls:
  6492 ;;		_ADC1_Initialize
  6493 ;;		_CLC4_Initialize
  6494 ;;		_EUSART_Initialize
  6495 ;;		_OSCILLATOR_Initialize
  6496 ;;		_PIN_MANAGER_Initialize
  6497 ;;		_PWM3_Initialize
  6498 ;;		_SPI_Initialize
  6499 ;;		_TMR2_Initialize
  6500 ;; This function is called by:
  6501 ;;		_main
  6502 ;; This function uses a non-reentrant model
  6503 ;;
  6504                           
  6505                           
  6506                           ;psect for function _SYSTEM_Initialize
  6507  0114                     _SYSTEM_Initialize:	
  6508                           
  6509                           ;mcc.c: 78: OSCILLATOR_Initialize();
  6510                           
  6511                           ;incstack = 0
  6512                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6513  0114  2144  3180         	fcall	_OSCILLATOR_Initialize
  6514                           
  6515                           ;mcc.c: 79: PIN_MANAGER_Initialize();
  6516  0116  214C  3180         	fcall	_PIN_MANAGER_Initialize
  6517                           
  6518                           ;mcc.c: 80: EUSART_Initialize();
  6519  0118  212C  3180         	fcall	_EUSART_Initialize
  6520                           
  6521                           ;mcc.c: 81: SPI_Initialize();
  6522  011A  219A  3180         	fcall	_SPI_Initialize
  6523                           
  6524                           ;mcc.c: 82: TMR2_Initialize();
  6525  011C  21A0  3180         	fcall	_TMR2_Initialize
  6526                           
  6527                           ;mcc.c: 83: ADC1_Initialize();
  6528  011E  2123  3180         	fcall	_ADC1_Initialize
  6529                           
  6530                           ;mcc.c: 84: CLC4_Initialize();
  6531  0120  21AB  3180         	fcall	_CLC4_Initialize
  6532                           
  6533                           ;mcc.c: 85: PWM3_Initialize();
  6534  0122  29C0               	ljmp	l1364
  6535  0123                     __end_of_SYSTEM_Initialize:	
  6536  0123                     __ptext10:	
  6537 ;; *************** function _ADC1_Initialize *****************
  6538 ;; Defined at:
  6539 ;;		line 65 in file "mcc_generated_files/adc1.c"
  6540 ;; Parameters:    Size  Location     Type
  6541 ;;		None
  6542 ;; Auto vars:     Size  Location     Type
  6543 ;;		None
  6544 ;; Return value:  Size  Location     Type
  6545 ;;		None               void
  6546 ;; Registers used:
  6547 ;;		wreg, status,2
  6548 ;; Tracked objects:
  6549 ;;		On entry : 1F/0
  6550 ;;		On exit  : 1F/1
  6551 ;;		Unchanged: 0/0
  6552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6557 ;;Total ram usage:        0 bytes
  6558 ;; Hardware stack levels used:    1
  6559 ;; Hardware stack levels required when called:    2
  6560 ;; This function calls:
  6561 ;;		Nothing
  6562 ;; This function is called by:
  6563 ;;		_SYSTEM_Initialize
  6564 ;; This function uses a non-reentrant model
  6565 ;;
  6566                           
  6567                           
  6568                           ;psect for function _ADC1_Initialize
  6569  0123                     _ADC1_Initialize:	
  6570                           
  6571                           ;adc1.c: 69: ADCON0 = 0x01;
  6572                           
  6573                           ;incstack = 0
  6574                           ; Regs used in _ADC1_Initialize: [wreg+status,2]
  6575  0123  3001               	movlw	1
  6576  0124  0021               	movlb	1	; select bank1
  6577  0125  009D               	movwf	29	;volatile
  6578                           
  6579                           ;adc1.c: 72: ADCON1 = 0xA0;
  6580  0126  30A0               	movlw	160
  6581  0127  009E               	movwf	30	;volatile
  6582                           
  6583                           ;adc1.c: 75: ADCON2 = 0x00;
  6584  0128  019F               	clrf	31	;volatile
  6585                           
  6586                           ;adc1.c: 78: ADRESL = 0x00;
  6587  0129  019B               	clrf	27	;volatile
  6588                           
  6589                           ;adc1.c: 81: ADRESH = 0x00;
  6590  012A  019C               	clrf	28	;volatile
  6591  012B  0008               	return
  6592  012C                     __end_of_ADC1_Initialize:	
  6593  012C                     __ptext8:	
  6594 ;; *************** function _EUSART_Initialize *****************
  6595 ;; Defined at:
  6596 ;;		line 76 in file "mcc_generated_files/eusart.c"
  6597 ;; Parameters:    Size  Location     Type
  6598 ;;		None
  6599 ;; Auto vars:     Size  Location     Type
  6600 ;;		None
  6601 ;; Return value:  Size  Location     Type
  6602 ;;		None               void
  6603 ;; Registers used:
  6604 ;;		wreg, status,2
  6605 ;; Tracked objects:
  6606 ;;		On entry : 0/1
  6607 ;;		On exit  : 1F/1
  6608 ;;		Unchanged: 0/0
  6609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6614 ;;Total ram usage:        0 bytes
  6615 ;; Hardware stack levels used:    1
  6616 ;; Hardware stack levels required when called:    2
  6617 ;; This function calls:
  6618 ;;		Nothing
  6619 ;; This function is called by:
  6620 ;;		_SYSTEM_Initialize
  6621 ;; This function uses a non-reentrant model
  6622 ;;
  6623                           
  6624                           
  6625                           ;psect for function _EUSART_Initialize
  6626  012C                     _EUSART_Initialize:	
  6627                           
  6628                           ;eusart.c: 78: PIE1bits.RCIE = 0;
  6629                           
  6630                           ;incstack = 0
  6631                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  6632  012C  0021               	movlb	1	; select bank1
  6633  012D  1290               	bcf	16,5	;volatile
  6634                           
  6635                           ;eusart.c: 79: PIE1bits.TXIE = 0;
  6636  012E  1210               	bcf	16,4	;volatile
  6637                           
  6638                           ;eusart.c: 84: BAUD1CON = 0x48;
  6639  012F  3048               	movlw	72
  6640  0130  0023               	movlb	3	; select bank3
  6641  0131  009F               	movwf	31	;volatile
  6642                           
  6643                           ;eusart.c: 87: RC1STA = 0x90;
  6644  0132  3090               	movlw	144
  6645  0133  009D               	movwf	29	;volatile
  6646                           
  6647                           ;eusart.c: 90: TX1STA = 0x26;
  6648  0134  3026               	movlw	38
  6649  0135  009E               	movwf	30	;volatile
  6650                           
  6651                           ;eusart.c: 93: SPBRGL = 0x44;
  6652  0136  3044               	movlw	68
  6653  0137  009B               	movwf	27	;volatile
  6654                           
  6655                           ;eusart.c: 96: SPBRGH = 0x00;
  6656  0138  019C               	clrf	28	;volatile
  6657                           
  6658                           ;eusart.c: 100: eusartTxHead = 0;
  6659  0139  0020               	movlb	0	; select bank0
  6660  013A  3008               	movlw	8
  6661  013B  01C6               	clrf	_eusartTxHead
  6662                           
  6663                           ;eusart.c: 101: eusartTxTail = 0;
  6664  013C  01C7               	clrf	_eusartTxTail
  6665                           
  6666                           ;eusart.c: 102: eusartTxBufferRemaining = sizeof (eusartTxBuffer);
  6667  013D  00C5               	movwf	_eusartTxBufferRemaining	;volatile
  6668                           
  6669                           ;eusart.c: 104: eusartRxHead = 0;
  6670  013E  01C3               	clrf	_eusartRxHead
  6671                           
  6672                           ;eusart.c: 105: eusartRxTail = 0;
  6673  013F  01C4               	clrf	_eusartRxTail
  6674                           
  6675                           ;eusart.c: 106: eusartRxCount = 0;
  6676  0140  01C2               	clrf	_eusartRxCount	;volatile
  6677                           
  6678                           ;eusart.c: 109: PIE1bits.RCIE = 1;
  6679  0141  0021               	movlb	1	; select bank1
  6680  0142  1690               	bsf	16,5	;volatile
  6681  0143  0008               	return
  6682  0144                     __end_of_EUSART_Initialize:	
  6683  0144                     __ptext7:	
  6684 ;; *************** function _OSCILLATOR_Initialize *****************
  6685 ;; Defined at:
  6686 ;;		line 88 in file "mcc_generated_files/mcc.c"
  6687 ;; Parameters:    Size  Location     Type
  6688 ;;		None
  6689 ;; Auto vars:     Size  Location     Type
  6690 ;;		None
  6691 ;; Return value:  Size  Location     Type
  6692 ;;		None               void
  6693 ;; Registers used:
  6694 ;;		wreg, status,2
  6695 ;; Tracked objects:
  6696 ;;		On entry : B1F/0
  6697 ;;		On exit  : B1F/1
  6698 ;;		Unchanged: B00/0
  6699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6704 ;;Total ram usage:        0 bytes
  6705 ;; Hardware stack levels used:    1
  6706 ;; Hardware stack levels required when called:    2
  6707 ;; This function calls:
  6708 ;;		Nothing
  6709 ;; This function is called by:
  6710 ;;		_SYSTEM_Initialize
  6711 ;; This function uses a non-reentrant model
  6712 ;;
  6713                           
  6714                           
  6715                           ;psect for function _OSCILLATOR_Initialize
  6716  0144                     _OSCILLATOR_Initialize:	
  6717                           
  6718                           ;mcc.c: 90: OSCCON = 0x70;
  6719                           
  6720                           ;incstack = 0
  6721                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6722  0144  3070               	movlw	112
  6723  0145  0021               	movlb	1	; select bank1
  6724  0146  0099               	movwf	25	;volatile
  6725                           
  6726                           ;mcc.c: 92: OSCSTAT = 0x00;
  6727  0147  019A               	clrf	26	;volatile
  6728                           
  6729                           ;mcc.c: 94: OSCTUNE = 0x00;
  6730  0148  0198               	clrf	24	;volatile
  6731  0149                     l181:	
  6732                           ;mcc.c: 98: while (PLLR == 0) {
  6733                           
  6734  0149  1B1A               	btfsc	26,6	;volatile
  6735  014A  0008               	return
  6736  014B  2949               	goto	l181
  6737  014C                     __end_of_OSCILLATOR_Initialize:	
  6738  014C                     __ptext6:	
  6739 ;; *************** function _PIN_MANAGER_Initialize *****************
  6740 ;; Defined at:
  6741 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  6742 ;; Parameters:    Size  Location     Type
  6743 ;;		None
  6744 ;; Auto vars:     Size  Location     Type
  6745 ;;  state           1    0[COMMON] unsigned char 
  6746 ;; Return value:  Size  Location     Type
  6747 ;;		None               void
  6748 ;; Registers used:
  6749 ;;		wreg, status,2
  6750 ;; Tracked objects:
  6751 ;;		On entry : B1F/1
  6752 ;;		On exit  : 0/0
  6753 ;;		Unchanged: 0/0
  6754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6756 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6758 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6759 ;;Total ram usage:        1 bytes
  6760 ;; Hardware stack levels used:    1
  6761 ;; Hardware stack levels required when called:    2
  6762 ;; This function calls:
  6763 ;;		Nothing
  6764 ;; This function is called by:
  6765 ;;		_SYSTEM_Initialize
  6766 ;; This function uses a non-reentrant model
  6767 ;;
  6768                           
  6769                           
  6770                           ;psect for function _PIN_MANAGER_Initialize
  6771  014C                     _PIN_MANAGER_Initialize:	
  6772                           
  6773                           ;pin_manager.c: 52: LATA = 0x00;
  6774                           
  6775                           ;incstack = 0
  6776                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  6777  014C  0022               	movlb	2	; select bank2
  6778  014D  018C               	clrf	12	;volatile
  6779                           
  6780                           ;pin_manager.c: 53: TRISA = 0x1F;
  6781  014E  301F               	movlw	31
  6782  014F  0021               	movlb	1	; select bank1
  6783  0150  008C               	movwf	12	;volatile
  6784                           
  6785                           ;pin_manager.c: 54: ANSELA = 0x03;
  6786  0151  3003               	movlw	3
  6787  0152  0023               	movlb	3	; select bank3
  6788  0153  008C               	movwf	12	;volatile
  6789                           
  6790                           ;pin_manager.c: 56: LATB = 0x20;
  6791  0154  3020               	movlw	32
  6792  0155  0022               	movlb	2	; select bank2
  6793  0156  008D               	movwf	13	;volatile
  6794                           
  6795                           ;pin_manager.c: 57: TRISB = 0xC0;
  6796  0157  30C0               	movlw	192
  6797  0158  0021               	movlb	1	; select bank1
  6798  0159  008D               	movwf	13	;volatile
  6799                           
  6800                           ;pin_manager.c: 58: ANSELB = 0x00;
  6801  015A  0023               	movlb	3	; select bank3
  6802  015B  018D               	clrf	13	;volatile
  6803                           
  6804                           ;pin_manager.c: 59: WPUB = 0x00;
  6805  015C  0024               	movlb	4	; select bank4
  6806  015D  018D               	clrf	13	;volatile
  6807                           
  6808                           ;pin_manager.c: 61: LATC = 0x00;
  6809  015E  0022               	movlb	2	; select bank2
  6810  015F  018E               	clrf	14	;volatile
  6811                           
  6812                           ;pin_manager.c: 62: TRISC = 0xFD;
  6813  0160  30FD               	movlw	253
  6814  0161  0021               	movlb	1	; select bank1
  6815  0162  008E               	movwf	14	;volatile
  6816                           
  6817                           ;pin_manager.c: 63: ANSELC = 0x00;
  6818  0163  0023               	movlb	3	; select bank3
  6819  0164  018E               	clrf	14	;volatile
  6820                           
  6821                           ;pin_manager.c: 64: WPUC = 0x00;
  6822  0165  0024               	movlb	4	; select bank4
  6823  0166  018E               	clrf	14	;volatile
  6824                           
  6825                           ;pin_manager.c: 66: OPTION_REGbits.nWPUEN = 0x01;
  6826  0167  0021               	movlb	1	; select bank1
  6827  0168  1795               	bsf	21,7	;volatile
  6828                           
  6829                           ;pin_manager.c: 69: IOCBP6 = 1;
  6830  0169  0027               	movlb	7	; select bank7
  6831  016A  1714               	bsf	20,6	;volatile
  6832                           
  6833                           ;pin_manager.c: 70: IOCBP7 = 1;
  6834  016B  1794               	bsf	20,7	;volatile
  6835                           
  6836                           ;pin_manager.c: 71: IOCCP3 = 1;
  6837  016C  1597               	bsf	23,3	;volatile
  6838                           
  6839                           ;pin_manager.c: 72: IOCCP4 = 1;
  6840  016D  1617               	bsf	23,4	;volatile
  6841                           
  6842                           ;pin_manager.c: 73: IOCCP5 = 1;
  6843  016E  1697               	bsf	23,5	;volatile
  6844                           
  6845                           ;pin_manager.c: 74: IOCCP6 = 1;
  6846  016F  1717               	bsf	23,6	;volatile
  6847                           
  6848                           ;pin_manager.c: 75: IOCCP7 = 1;
  6849  0170  1797               	bsf	23,7	;volatile
  6850                           
  6851                           ;pin_manager.c: 78: INTCONbits.IOCIE = 1;
  6852  0171  158B               	bsf	11,3	;volatile
  6853                           
  6854                           ;pin_manager.c: 80: bool state = GIE;
  6855  0172  3000               	movlw	0
  6856  0173  1B8B               	btfsc	11,7	;volatile
  6857  0174  3001               	movlw	1
  6858  0175  00F0               	movwf	PIN_MANAGER_Initialize@state
  6859                           
  6860                           ;pin_manager.c: 81: GIE = 0;
  6861  0176  138B               	bcf	11,7	;volatile
  6862                           
  6863                           ;pin_manager.c: 82: PPSLOCK = 0x55;
  6864  0177  3055               	movlw	85
  6865  0178  003C               	movlb	28	; select bank28
  6866  0179  008F               	movwf	15	;volatile
  6867                           
  6868                           ;pin_manager.c: 83: PPSLOCK = 0xAA;
  6869  017A  30AA               	movlw	170
  6870  017B  008F               	movwf	15	;volatile
  6871                           
  6872                           ;pin_manager.c: 84: PPSLOCKbits.PPSLOCKED = 0x00;
  6873  017C  100F               	bcf	15,0	;volatile
  6874                           
  6875                           ;pin_manager.c: 86: RXPPS = 0x02;
  6876  017D  3002               	movlw	2
  6877  017E  00A4               	movwf	36	;volatile
  6878                           
  6879                           ;pin_manager.c: 87: RA5PPS = 0x07;
  6880  017F  3007               	movlw	7
  6881  0180  003D               	movlb	29	; select bank29
  6882  0181  0095               	movwf	21	;volatile
  6883                           
  6884                           ;pin_manager.c: 88: RB4PPS = 0x11;
  6885  0182  3011               	movlw	17
  6886  0183  009C               	movwf	28	;volatile
  6887                           
  6888                           ;pin_manager.c: 89: RC0PPS = 0x12;
  6889  0184  3012               	movlw	18
  6890  0185  00A0               	movwf	32	;volatile
  6891                           
  6892                           ;pin_manager.c: 90: SSPCLKPPS = 0x11;
  6893  0186  3011               	movlw	17
  6894  0187  003C               	movlb	28	; select bank28
  6895  0188  00A0               	movwf	32	;volatile
  6896                           
  6897                           ;pin_manager.c: 91: RC1PPS = 0x10;
  6898  0189  3010               	movlw	16
  6899  018A  003D               	movlb	29	; select bank29
  6900  018B  00A1               	movwf	33	;volatile
  6901                           
  6902                           ;pin_manager.c: 92: SSPDATPPS = 0x12;
  6903  018C  3012               	movlw	18
  6904  018D  003C               	movlb	28	; select bank28
  6905  018E  00A1               	movwf	33	;volatile
  6906                           
  6907                           ;pin_manager.c: 93: PPSLOCK = 0x55;
  6908  018F  3055               	movlw	85
  6909  0190  008F               	movwf	15	;volatile
  6910                           
  6911                           ;pin_manager.c: 94: PPSLOCK = 0xAA;
  6912  0191  30AA               	movlw	170
  6913  0192  008F               	movwf	15	;volatile
  6914                           
  6915                           ;pin_manager.c: 95: PPSLOCKbits.PPSLOCKED = 0x01;
  6916  0193  140F               	bsf	15,0	;volatile
  6917                           
  6918                           ;pin_manager.c: 96: GIE = state;
  6919  0194  1C70               	btfss	PIN_MANAGER_Initialize@state,0
  6920  0195  2998               	goto	u290
  6921  0196  178B               	bsf	11,7	;volatile
  6922  0197  0008               	return
  6923  0198                     u290:	
  6924  0198  138B               	bcf	11,7	;volatile
  6925  0199  0008               	return
  6926  019A                     __end_of_PIN_MANAGER_Initialize:	
  6927  019A                     __ptext4:	
  6928 ;; *************** function _SPI_Initialize *****************
  6929 ;; Defined at:
  6930 ;;		line 64 in file "mcc_generated_files/spi.c"
  6931 ;; Parameters:    Size  Location     Type
  6932 ;;		None
  6933 ;; Auto vars:     Size  Location     Type
  6934 ;;		None
  6935 ;; Return value:  Size  Location     Type
  6936 ;;		None               void
  6937 ;; Registers used:
  6938 ;;		wreg, status,2
  6939 ;; Tracked objects:
  6940 ;;		On entry : 1F/1
  6941 ;;		On exit  : 1F/4
  6942 ;;		Unchanged: 0/0
  6943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6948 ;;Total ram usage:        0 bytes
  6949 ;; Hardware stack levels used:    1
  6950 ;; Hardware stack levels required when called:    2
  6951 ;; This function calls:
  6952 ;;		Nothing
  6953 ;; This function is called by:
  6954 ;;		_SYSTEM_Initialize
  6955 ;; This function uses a non-reentrant model
  6956 ;;
  6957                           
  6958                           
  6959                           ;psect for function _SPI_Initialize
  6960  019A                     _SPI_Initialize:	
  6961                           
  6962                           ;spi.c: 68: SSP1STAT = 0x00;
  6963                           
  6964                           ;incstack = 0
  6965                           ; Regs used in _SPI_Initialize: [wreg+status,2]
  6966  019A  0024               	movlb	4	; select bank4
  6967  019B  0194               	clrf	20	;volatile
  6968                           
  6969                           ;spi.c: 71: SSP1CON1 = 0x33;
  6970  019C  3033               	movlw	51
  6971  019D  0095               	movwf	21	;volatile
  6972                           
  6973                           ;spi.c: 74: SSP1ADD = 0x00;
  6974  019E  0192               	clrf	18	;volatile
  6975  019F  0008               	return
  6976  01A0                     __end_of_SPI_Initialize:	
  6977  01A0                     __ptext2:	
  6978 ;; *************** function _TMR2_Initialize *****************
  6979 ;; Defined at:
  6980 ;;		line 58 in file "mcc_generated_files/tmr2.c"
  6981 ;; Parameters:    Size  Location     Type
  6982 ;;		None
  6983 ;; Auto vars:     Size  Location     Type
  6984 ;;		None
  6985 ;; Return value:  Size  Location     Type
  6986 ;;		None               void
  6987 ;; Registers used:
  6988 ;;		wreg, status,2, status,0, pclath, cstack
  6989 ;; Tracked objects:
  6990 ;;		On entry : 1F/4
  6991 ;;		On exit  : 1F/0
  6992 ;;		Unchanged: 0/0
  6993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6998 ;;Total ram usage:        0 bytes
  6999 ;; Hardware stack levels used:    1
  7000 ;; Hardware stack levels required when called:    3
  7001 ;; This function calls:
  7002 ;;		_TMR2_Start
  7003 ;; This function is called by:
  7004 ;;		_SYSTEM_Initialize
  7005 ;; This function uses a non-reentrant model
  7006 ;;
  7007                           
  7008                           
  7009                           ;psect for function _TMR2_Initialize
  7010  01A0                     _TMR2_Initialize:	
  7011                           
  7012                           ;tmr2.c: 62: T2CON = 0x00;
  7013                           
  7014                           ;incstack = 0
  7015                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7016  01A0  0020               	movlb	0	; select bank0
  7017  01A1  019C               	clrf	28	;volatile
  7018                           
  7019                           ;tmr2.c: 65: T2CLKCON = 0x00;
  7020  01A2  019E               	clrf	30	;volatile
  7021                           
  7022                           ;tmr2.c: 68: T2HLT = 0xA0;
  7023  01A3  30A0               	movlw	160
  7024  01A4  009D               	movwf	29	;volatile
  7025                           
  7026                           ;tmr2.c: 71: T2RST = 0x00;
  7027  01A5  019F               	clrf	31	;volatile
  7028                           
  7029                           ;tmr2.c: 74: T2PR = 0x04;
  7030  01A6  3004               	movlw	4
  7031  01A7  009B               	movwf	27	;volatile
  7032                           
  7033                           ;tmr2.c: 77: T2TMR = 0x00;
  7034  01A8  019A               	clrf	26	;volatile
  7035                           
  7036                           ;tmr2.c: 80: PIR1bits.TMR2IF = 0;
  7037  01A9  1090               	bcf	16,1	;volatile
  7038                           
  7039                           ;tmr2.c: 83: TMR2_Start();
  7040  01AA  29CB               	ljmp	l1076
  7041  01AB                     __end_of_TMR2_Initialize:	
  7042  01AB                     __ptext9:	
  7043 ;; *************** function _CLC4_Initialize *****************
  7044 ;; Defined at:
  7045 ;;		line 58 in file "mcc_generated_files/clc4.c"
  7046 ;; Parameters:    Size  Location     Type
  7047 ;;		None
  7048 ;; Auto vars:     Size  Location     Type
  7049 ;;		None
  7050 ;; Return value:  Size  Location     Type
  7051 ;;		None               void
  7052 ;; Registers used:
  7053 ;;		wreg, status,2
  7054 ;; Tracked objects:
  7055 ;;		On entry : 1F/1
  7056 ;;		On exit  : 1F/1E
  7057 ;;		Unchanged: 0/0
  7058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7063 ;;Total ram usage:        0 bytes
  7064 ;; Hardware stack levels used:    1
  7065 ;; Hardware stack levels required when called:    2
  7066 ;; This function calls:
  7067 ;;		Nothing
  7068 ;; This function is called by:
  7069 ;;		_SYSTEM_Initialize
  7070 ;; This function uses a non-reentrant model
  7071 ;;
  7072                           
  7073                           
  7074                           ;psect for function _CLC4_Initialize
  7075  01AB                     _CLC4_Initialize:	
  7076                           
  7077                           ;clc4.c: 62: CLC4POL = 0x0A;
  7078                           
  7079                           ;incstack = 0
  7080                           ; Regs used in _CLC4_Initialize: [wreg+status,2]
  7081  01AB  300A               	movlw	10
  7082  01AC  003E               	movlb	30	; select bank30
  7083  01AD  00AF               	movwf	47	;volatile
  7084                           
  7085                           ;clc4.c: 65: CLC4SEL0 = 0x21;
  7086  01AE  3021               	movlw	33
  7087  01AF  00B0               	movwf	48	;volatile
  7088                           
  7089                           ;clc4.c: 68: CLC4SEL1 = 0x0E;
  7090  01B0  300E               	movlw	14
  7091  01B1  00B1               	movwf	49	;volatile
  7092                           
  7093                           ;clc4.c: 71: CLC4SEL2 = 0x28;
  7094  01B2  3028               	movlw	40
  7095  01B3  00B2               	movwf	50	;volatile
  7096                           
  7097                           ;clc4.c: 74: CLC4SEL3 = 0x27;
  7098  01B4  3027               	movlw	39
  7099  01B5  00B3               	movwf	51	;volatile
  7100                           
  7101                           ;clc4.c: 77: CLC4GLS0 = 0x02;
  7102  01B6  3002               	movlw	2
  7103  01B7  00B4               	movwf	52	;volatile
  7104                           
  7105                           ;clc4.c: 80: CLC4GLS1 = 0xA4;
  7106  01B8  30A4               	movlw	164
  7107  01B9  00B5               	movwf	53	;volatile
  7108                           
  7109                           ;clc4.c: 83: CLC4GLS2 = 0x00;
  7110  01BA  01B6               	clrf	54	;volatile
  7111                           
  7112                           ;clc4.c: 86: CLC4GLS3 = 0x90;
  7113  01BB  3090               	movlw	144
  7114  01BC  00B7               	movwf	55	;volatile
  7115                           
  7116                           ;clc4.c: 89: CLC4CON = 0x85;
  7117  01BD  3085               	movlw	133
  7118  01BE  00AE               	movwf	46	;volatile
  7119  01BF  0008               	return
  7120  01C0                     __end_of_CLC4_Initialize:	
  7121  01C0                     __ptext5:	
  7122 ;; *************** function _PWM3_Initialize *****************
  7123 ;; Defined at:
  7124 ;;		line 58 in file "mcc_generated_files/pwm3.c"
  7125 ;; Parameters:    Size  Location     Type
  7126 ;;		None
  7127 ;; Auto vars:     Size  Location     Type
  7128 ;;		None
  7129 ;; Return value:  Size  Location     Type
  7130 ;;		None               void
  7131 ;; Registers used:
  7132 ;;		wreg, status,2, status,0
  7133 ;; Tracked objects:
  7134 ;;		On entry : 1F/1E
  7135 ;;		On exit  : 1F/5
  7136 ;;		Unchanged: 0/0
  7137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7142 ;;Total ram usage:        0 bytes
  7143 ;; Hardware stack levels used:    1
  7144 ;; Hardware stack levels required when called:    2
  7145 ;; This function calls:
  7146 ;;		Nothing
  7147 ;; This function is called by:
  7148 ;;		_SYSTEM_Initialize
  7149 ;; This function uses a non-reentrant model
  7150 ;;
  7151                           
  7152                           
  7153                           ;psect for function _PWM3_Initialize
  7154  01C0                     _PWM3_Initialize:	
  7155  01C0                     l1364:	
  7156                           ;incstack = 0
  7157                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
  7158                           
  7159                           
  7160                           ;pwm3.c: 61: PWM3CON = 0x80;
  7161  01C0  3080               	movlw	128
  7162  01C1  002C               	movlb	12	; select bank12
  7163  01C2  0099               	movwf	25	;volatile
  7164                           
  7165                           ;pwm3.c: 64: PWM3DCH = 0x02;
  7166  01C3  3002               	movlw	2
  7167  01C4  0098               	movwf	24	;volatile
  7168                           
  7169                           ;pwm3.c: 67: PWM3DCL = 0x40;
  7170  01C5  3040               	movlw	64
  7171  01C6  0097               	movwf	23	;volatile
  7172                           
  7173                           ;pwm3.c: 71: CCPTMRSbits.P3TSEL = 0x0;
  7174  01C7  30CF               	movlw	-49
  7175  01C8  0025               	movlb	5	; select bank5
  7176  01C9  059E               	andwf	30,f	;volatile
  7177  01CA  0008               	return
  7178  01CB                     __end_of_PWM3_Initialize:	
  7179  01CB                     __ptext3:	
  7180 ;; *************** function _TMR2_Start *****************
  7181 ;; Defined at:
  7182 ;;		line 96 in file "mcc_generated_files/tmr2.c"
  7183 ;; Parameters:    Size  Location     Type
  7184 ;;		None
  7185 ;; Auto vars:     Size  Location     Type
  7186 ;;		None
  7187 ;; Return value:  Size  Location     Type
  7188 ;;		None               void
  7189 ;; Registers used:
  7190 ;;		None
  7191 ;; Tracked objects:
  7192 ;;		On entry : 1F/0
  7193 ;;		On exit  : 1F/0
  7194 ;;		Unchanged: 0/0
  7195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7200 ;;Total ram usage:        0 bytes
  7201 ;; Hardware stack levels used:    1
  7202 ;; Hardware stack levels required when called:    2
  7203 ;; This function calls:
  7204 ;;		Nothing
  7205 ;; This function is called by:
  7206 ;;		_TMR2_Initialize
  7207 ;; This function uses a non-reentrant model
  7208 ;;
  7209                           
  7210                           
  7211                           ;psect for function _TMR2_Start
  7212  01CB                     _TMR2_Start:	
  7213  01CB                     l1076:	
  7214                           ;incstack = 0
  7215                           ; Regs used in _TMR2_Start: []
  7216                           
  7217                           
  7218                           ;tmr2.c: 98: T2CONbits.TMR2ON = 1;
  7219  01CB  179C               	bsf	28,7	;volatile
  7220  01CC  0008               	return
  7221  01CD                     __end_of_TMR2_Start:	
  7222                           
  7223                           	psect	bssBANK0
  7224  0020                     __pbssBANK0:	
  7225  0020                     _eusartRxBuffer:	
  7226  0020                     	ds	16
  7227  0030                     _eusartTxBuffer:	
  7228  0030                     	ds	8
  7229  0038                     _LED_SetColor:	
  7230  0038                     	ds	3
  7231  003B                     _LED_currentColor:	
  7232  003B                     	ds	3
  7233  003E                     COMM_Task@UART_ReceiveState:	
  7234  003E                     	ds	1
  7235  003F                     COMM_Task@receiveCounter:	
  7236  003F                     	ds	1
  7237  0040                     LED_Task@ledOFF:	
  7238  0040                     	ds	1
  7239  0041                     _LED_mode:	
  7240  0041                     	ds	1
  7241  0042                     _eusartRxCount:	
  7242  0042                     	ds	1
  7243  0043                     _eusartRxHead:	
  7244  0043                     	ds	1
  7245  0044                     _eusartRxTail:	
  7246  0044                     	ds	1
  7247  0045                     _eusartTxBufferRemaining:	
  7248  0045                     	ds	1
  7249  0046                     _eusartTxHead:	
  7250  0046                     	ds	1
  7251  0047                     _eusartTxTail:	
  7252  0047                     	ds	1
  7253  0048                     command_GetnumberofCommands@numberofCommands:	
  7254  0048                     	ds	1
  7255  0049                     _inputCommand:	
  7256  0049                     	ds	16
  7257                           
  7258                           	psect	clrtext
  7259  07B7                     clear_ram0:	
  7260                           ;	Called with FSR0 containing the base address, and
  7261                           ;	WREG with the size to clear
  7262                           
  7263  07B7  0064               	clrwdt	;clear the watchdog before getting into this loop
  7264  07B8                     clrloop0:	
  7265  07B8  0180               	clrf	0	;clear RAM location pointed to by FSR
  7266  07B9  3101               	addfsr 0,1
  7267  07BA  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  7268  07BB  2FB8               	goto	clrloop0	;have we reached the end yet?
  7269  07BC  3400               	retlw	0	;all done for this memory range, return
  7270                           
  7271                           	psect	cstackCOMMON
  7272  0070                     __pcstackCOMMON:	
  7273  0070                     ?_PIN_MANAGER_IOC:	
  7274  0070                     ??_PIN_MANAGER_IOC:	
  7275                           ; 0 bytes @ 0x0
  7276                           
  7277  0070                     ?_OSCILLATOR_Initialize:	
  7278                           ; 0 bytes @ 0x0
  7279                           
  7280  0070                     ??_OSCILLATOR_Initialize:	
  7281                           ; 0 bytes @ 0x0
  7282                           
  7283  0070                     ?_PIN_MANAGER_Initialize:	
  7284                           ; 0 bytes @ 0x0
  7285                           
  7286  0070                     ??_PIN_MANAGER_Initialize:	
  7287                           ; 0 bytes @ 0x0
  7288                           
  7289  0070                     ?_SPI_Initialize:	
  7290                           ; 0 bytes @ 0x0
  7291                           
  7292  0070                     ??_SPI_Initialize:	
  7293                           ; 0 bytes @ 0x0
  7294                           
  7295  0070                     ?_TMR2_Initialize:	
  7296                           ; 0 bytes @ 0x0
  7297                           
  7298  0070                     ??_TMR2_Initialize:	
  7299                           ; 0 bytes @ 0x0
  7300                           
  7301  0070                     ?_PWM3_Initialize:	
  7302                           ; 0 bytes @ 0x0
  7303                           
  7304  0070                     ??_PWM3_Initialize:	
  7305                           ; 0 bytes @ 0x0
  7306                           
  7307  0070                     ?_TMR2_Start:	
  7308                           ; 0 bytes @ 0x0
  7309                           
  7310  0070                     ??_TMR2_Start:	
  7311                           ; 0 bytes @ 0x0
  7312                           
  7313  0070                     ?_ledSendByte:	
  7314                           ; 0 bytes @ 0x0
  7315                           
  7316  0070                     ?_COMM_Task:	
  7317                           ; 0 bytes @ 0x0
  7318                           
  7319  0070                     ??_oneByte_HexSrtingToBinary:	
  7320                           ; 0 bytes @ 0x0
  7321                           
  7322  0070                     ?_ADC1_Initialize:	
  7323                           ; 0 bytes @ 0x0
  7324                           
  7325  0070                     ??_ADC1_Initialize:	
  7326                           ; 0 bytes @ 0x0
  7327                           
  7328  0070                     ?_CLC4_Initialize:	
  7329                           ; 0 bytes @ 0x0
  7330                           
  7331  0070                     ??_CLC4_Initialize:	
  7332                           ; 0 bytes @ 0x0
  7333                           
  7334  0070                     ?_EUSART_Initialize:	
  7335                           ; 0 bytes @ 0x0
  7336                           
  7337  0070                     ??_EUSART_Initialize:	
  7338                           ; 0 bytes @ 0x0
  7339                           
  7340  0070                     ??_EUSART_Read:	
  7341                           ; 0 bytes @ 0x0
  7342                           
  7343  0070                     ?_EUSART_Write:	
  7344                           ; 0 bytes @ 0x0
  7345                           
  7346  0070                     ??_EUSART_Write:	
  7347                           ; 0 bytes @ 0x0
  7348                           
  7349  0070                     ?_putch:	
  7350                           ; 0 bytes @ 0x0
  7351                           
  7352  0070                     ?_EUSART_Transmit_ISR:	
  7353                           ; 0 bytes @ 0x0
  7354                           
  7355  0070                     ??_EUSART_Transmit_ISR:	
  7356                           ; 0 bytes @ 0x0
  7357                           
  7358  0070                     ?_EUSART_Receive_ISR:	
  7359                           ; 0 bytes @ 0x0
  7360                           
  7361  0070                     ??_EUSART_Receive_ISR:	
  7362                           ; 0 bytes @ 0x0
  7363                           
  7364  0070                     ?_INTERRUPT_InterruptManager:	
  7365                           ; 0 bytes @ 0x0
  7366                           
  7367  0070                     ??_INTERRUPT_InterruptManager:	
  7368                           ; 0 bytes @ 0x0
  7369                           
  7370  0070                     ?_SYSTEM_Initialize:	
  7371                           ; 0 bytes @ 0x0
  7372                           
  7373  0070                     ??_SPI_Exchange8bit:	
  7374                           ; 0 bytes @ 0x0
  7375                           
  7376  0070                     ?_LED_Test:	
  7377                           ; 0 bytes @ 0x0
  7378                           
  7379  0070                     ?_LED_Task:	
  7380                           ; 0 bytes @ 0x0
  7381                           
  7382  0070                     ?_main:	
  7383                           ; 0 bytes @ 0x0
  7384                           
  7385  0070                     ?_oneByte_HexSrtingToBinary:	
  7386                           ; 0 bytes @ 0x0
  7387                           
  7388  0070                     ?_memset:	
  7389                           ; 1 bytes @ 0x0
  7390                           
  7391  0070                     ?_EUSART_Read:	
  7392                           ; 1 bytes @ 0x0
  7393                           
  7394  0070                     ?_SPI_Exchange8bit:	
  7395                           ; 1 bytes @ 0x0
  7396                           
  7397  0070                     ?_strcmp:	
  7398                           ; 1 bytes @ 0x0
  7399                           
  7400  0070                     ?_strlen:	
  7401                           ; 2 bytes @ 0x0
  7402                           
  7403  0070                     ?___wmul:	
  7404                           ; 2 bytes @ 0x0
  7405                           
  7406  0070                     EUSART_Read@readValue:	
  7407                           ; 2 bytes @ 0x0
  7408                           
  7409  0070                     EUSART_Write@txData:	
  7410                           ; 1 bytes @ 0x0
  7411                           
  7412  0070                     PIN_MANAGER_Initialize@state:	
  7413                           ; 1 bytes @ 0x0
  7414                           
  7415  0070                     SPI_Exchange8bit@data:	
  7416                           ; 1 bytes @ 0x0
  7417                           
  7418  0070                     ___wmul@multiplier:	
  7419                           ; 1 bytes @ 0x0
  7420                           
  7421  0070                     memset@c:	
  7422                           ; 2 bytes @ 0x0
  7423                           
  7424  0070                     strcmp@s1:	
  7425                           ; 2 bytes @ 0x0
  7426                           
  7427  0070                     strlen@s:	
  7428                           ; 2 bytes @ 0x0
  7429                           
  7430                           
  7431                           ; 2 bytes @ 0x0
  7432  0070                     	ds	1
  7433  0071                     ??_ledSendByte:	
  7434  0071                     ??_putch:	
  7435                           ; 0 bytes @ 0x1
  7436                           
  7437  0071                     ??_SYSTEM_Initialize:	
  7438                           ; 0 bytes @ 0x1
  7439                           
  7440  0071                     putch@txData:	
  7441                           ; 0 bytes @ 0x1
  7442                           
  7443  0071                     ledSendByte@data:	
  7444                           ; 1 bytes @ 0x1
  7445                           
  7446                           
  7447                           ; 1 bytes @ 0x1
  7448  0071                     	ds	1
  7449  0072                     ?_ledSetColor:	
  7450  0072                     ??_strlen:	
  7451                           ; 0 bytes @ 0x2
  7452                           
  7453  0072                     ??_LED_Test:	
  7454                           ; 0 bytes @ 0x2
  7455                           
  7456  0072                     ?_printf:	
  7457                           ; 0 bytes @ 0x2
  7458                           
  7459  0072                     oneByte_HexSrtingToBinary@i:	
  7460                           ; 2 bytes @ 0x2
  7461                           
  7462  0072                     strcmp@s2:	
  7463                           ; 1 bytes @ 0x2
  7464                           
  7465  0072                     printf@f:	
  7466                           ; 1 bytes @ 0x2
  7467                           
  7468  0072                     ___wmul@multiplicand:	
  7469                           ; 2 bytes @ 0x2
  7470                           
  7471  0072                     memset@n:	
  7472                           ; 2 bytes @ 0x2
  7473                           
  7474  0072                     ledSetColor@ledColor:	
  7475                           ; 2 bytes @ 0x2
  7476                           
  7477                           
  7478                           ; 3 bytes @ 0x2
  7479  0072                     	ds	1
  7480  0073                     ??_strcmp:	
  7481  0073                     oneByte_HexSrtingToBinary@data:	
  7482                           ; 0 bytes @ 0x3
  7483                           
  7484  0073                     strcmp@t0:	
  7485                           ; 1 bytes @ 0x3
  7486                           
  7487  0073                     strlen@cp:	
  7488                           ; 1 bytes @ 0x3
  7489                           
  7490                           
  7491                           ; 2 bytes @ 0x3
  7492  0073                     	ds	1
  7493  0074                     ??_printf:	
  7494  0074                     ??_memset:	
  7495                           ; 0 bytes @ 0x4
  7496                           
  7497  0074                     ??___wmul:	
  7498                           ; 0 bytes @ 0x4
  7499                           
  7500  0074                     memset@p1:	
  7501                           ; 0 bytes @ 0x4
  7502                           
  7503  0074                     strcmp@t2:	
  7504                           ; 1 bytes @ 0x4
  7505                           
  7506  0074                     ___wmul@product:	
  7507                           ; 1 bytes @ 0x4
  7508                           
  7509                           
  7510                           ; 2 bytes @ 0x4
  7511  0074                     	ds	1
  7512  0075                     ??_ledSetColor:	
  7513  0075                     ??_LED_Task:	
  7514                           ; 0 bytes @ 0x5
  7515                           
  7516  0075                     LED_Test@i:	
  7517                           ; 0 bytes @ 0x5
  7518                           
  7519  0075                     memset@p:	
  7520                           ; 1 bytes @ 0x5
  7521                           
  7522  0075                     strcmp@t1:	
  7523                           ; 1 bytes @ 0x5
  7524                           
  7525  0075                     LED_Task@i:	
  7526                           ; 1 bytes @ 0x5
  7527                           
  7528                           
  7529                           ; 2 bytes @ 0x5
  7530  0075                     	ds	1
  7531  0076                     ?_command_GetnumberofCommands:	
  7532  0076                     ?_strncmp:	
  7533                           ; 1 bytes @ 0x6
  7534                           
  7535  0076                     LED_Test@j:	
  7536                           ; 2 bytes @ 0x6
  7537                           
  7538  0076                     printf@c:	
  7539                           ; 1 bytes @ 0x6
  7540                           
  7541  0076                     command_GetnumberofCommands@commandArray:	
  7542                           ; 1 bytes @ 0x6
  7543                           
  7544  0076                     strncmp@s1:	
  7545                           ; 2 bytes @ 0x6
  7546                           
  7547                           
  7548                           ; 2 bytes @ 0x6
  7549  0076                     	ds	1
  7550  0077                     LED_Task@i_858:	
  7551                           
  7552                           ; 2 bytes @ 0x7
  7553  0077                     	ds	1
  7554  0078                     ??_command_GetnumberofCommands:	
  7555  0078                     strncmp@s2:	
  7556                           ; 0 bytes @ 0x8
  7557                           
  7558                           
  7559                           ; 2 bytes @ 0x8
  7560  0078                     	ds	2
  7561  007A                     strncmp@len:	
  7562                           
  7563                           ; 2 bytes @ 0xA
  7564  007A                     	ds	1
  7565  007B                     command_GetnumberofCommands@i:	
  7566                           
  7567                           ; 1 bytes @ 0xB
  7568  007B                     	ds	1
  7569  007C                     ??_strncmp:	
  7570                           
  7571                           ; 0 bytes @ 0xC
  7572  007C                     	ds	1
  7573  007D                     ?_setCommandProcess:	
  7574  007D                     ?_getCommandProcess:	
  7575                           ; 0 bytes @ 0xD
  7576                           
  7577  007D                     ?_testCommandProcess:	
  7578                           ; 0 bytes @ 0xD
  7579                           
  7580  007D                     setCommandProcess@input:	
  7581                           ; 0 bytes @ 0xD
  7582                           
  7583  007D                     getCommandProcess@input:	
  7584                           ; 1 bytes @ 0xD
  7585                           
  7586  007D                     testCommandProcess@input:	
  7587                           ; 1 bytes @ 0xD
  7588                           
  7589                           
  7590                           ; 1 bytes @ 0xD
  7591  007D                     	ds	1
  7592  007E                     ??_setCommandProcess:	
  7593  007E                     ??_getCommandProcess:	
  7594                           ; 0 bytes @ 0xE
  7595                           
  7596  007E                     ??_testCommandProcess:	
  7597                           ; 0 bytes @ 0xE
  7598                           
  7599                           
  7600                           	psect	cstackBANK0
  7601  0059                     __pcstackBANK0:	
  7602                           ; 0 bytes @ 0xE
  7603                           
  7604  0059                     ??_COMM_Task:	
  7605                           
  7606                           ; 0 bytes @ 0x0
  7607  0059                     	ds	1
  7608  005A                     COMM_Task@i:	
  7609                           
  7610                           ; 1 bytes @ 0x1
  7611  005A                     	ds	1
  7612  005B                     COMM_Task@receiveData:	
  7613                           
  7614                           ; 1 bytes @ 0x2
  7615  005B                     	ds	1
  7616  005C                     ??_main:	
  7617                           
  7618                           ; 0 bytes @ 0x3
  7619  005C                     	ds	3
  7620                           
  7621                           	psect	swtext1
  7622  0510                     __pswtext1:	
  7623  0510                     S2218:	
  7624  0510  3180  2896         	ljmp	l2040
  7625  0512  3180  28C5         	ljmp	l2056
  7626  0514  3180  28FD         	ljmp	l2076
  7627  0516  3180  28FD         	ljmp	l2076
  7628  0518  3180  28FD         	ljmp	l2076
  7629                           
  7630                           	psect	text12
  7631  0000                     __ptext12:	
  7632 ;; *************** function _ledSetColor *****************
  7633 ;; Defined at:
  7634 ;;		line 88 in file "../src/LED.c"
  7635 ;; Parameters:    Size  Location     Type
  7636 ;;  ledColor        3    2[COMMON] struct .
  7637 ;; Auto vars:     Size  Location     Type
  7638 ;;		None
  7639 ;; Return value:  Size  Location     Type
  7640 ;;		None               void
  7641 ;; Registers used:
  7642 ;;		wreg, status,2, status,0, pclath, cstack
  7643 ;; Tracked objects:
  7644 ;;		On entry : 0/0
  7645 ;;		On exit  : 1F/4
  7646 ;;		Unchanged: 0/0
  7647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7648 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7651 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7652 ;;Total ram usage:        3 bytes
  7653 ;; Hardware stack levels used:    1
  7654 ;; Hardware stack levels required when called:    4
  7655 ;; This function calls:
  7656 ;;		_ledSendByte
  7657 ;; This function is called by:
  7658 ;;		_LED_Task
  7659 ;; This function uses a non-reentrant model
  7660 ;;
  7661                           
  7662  0000                     _ledSetColor:	
  7663                           ;psect for function _ledSetColor
  7664                           
  7665  0000                     __end_of_ledSetColor:	
  7666                           ;LED.c: 147: SPI_Exchange8bit(data);
  7667                           
  7668                           ;incstack = 0
  7669                           ; Regs used in _ledSendByte: [wreg+status,2+status,0+pclath+cstack]
  7670                           ;ledSendByte@data stored from wreg
  7671                           
  7672                           ;psect for function _ledSendByte
  7673                           
  7674                           ;LED.c: 92: ledSendByte(ledColor.Blue);
  7675                           
  7676                           ;LED.c: 147: SPI_Exchange8bit(data);
  7677                           
  7678                           ;incstack = 0
  7679                           ; Regs used in _ledSendByte: [wreg+status,2+status,0+pclath+cstack]
  7680                           ;ledSendByte@data stored from wreg
  7681                           
  7682                           ;psect for function _ledSendByte
  7683                           
  7684                           ;LED.c: 91: ledSendByte(ledColor.Red);
  7685                           
  7686                           ;LED.c: 147: SPI_Exchange8bit(data);
  7687                           
  7688                           ;incstack = 0
  7689                           ; Regs used in _ledSendByte: [wreg+status,2+status,0+pclath+cstack]
  7690                           ;ledSendByte@data stored from wreg
  7691                           
  7692                           ;psect for function _ledSendByte
  7693                           
  7694                           ;LED.c: 90: ledSendByte(ledColor.Green);
  7695                           
  7696                           ;incstack = 0
  7697                           ; Regs used in _ledSetColor: [wreg+status,2+status,0+pclath+cstack]
  7698                           
  7699                           
  7700                           	psect	text13
  7701  01CD                     __ptext13:	
  7702 ;; *************** function _COMM_Task *****************
  7703 ;; Defined at:
  7704 ;;		line 189 in file "../src/serialCommand.c"
  7705 ;; Parameters:    Size  Location     Type
  7706 ;;		None
  7707 ;; Auto vars:     Size  Location     Type
  7708 ;;  i               1    1[BANK0 ] unsigned char 
  7709 ;;  receiveData     1    2[BANK0 ] unsigned char 
  7710 ;; Return value:  Size  Location     Type
  7711 ;;		None               void
  7712 ;; Registers used:
  7713 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7714 ;; Tracked objects:
  7715 ;;		On entry : 0/5
  7716 ;;		On exit  : 0/0
  7717 ;;		Unchanged: 0/0
  7718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7720 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7721 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7722 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7723 ;;Total ram usage:        3 bytes
  7724 ;; Hardware stack levels used:    1
  7725 ;; Hardware stack levels required when called:    6
  7726 ;; This function calls:
  7727 ;;		Absolute function
  7728 ;;		_EUSART_Read
  7729 ;;		___wmul
  7730 ;;		_command_GetnumberofCommands
  7731 ;;		_getCommandProcess
  7732 ;;		_memset
  7733 ;;		_printf
  7734 ;;		_setCommandProcess
  7735 ;;		_strncmp
  7736 ;;		_testCommandProcess
  7737 ;; This function is called by:
  7738 ;;		_main
  7739 ;; This function uses a non-reentrant model
  7740 ;;
  7741                           
  7742                           
  7743                           ;psect for function _COMM_Task
  7744  01CD                     _COMM_Task:	
  7745                           
  7746                           ;serialCommand.c: 191: uint8_t receiveData;
  7747                           ;serialCommand.c: 192: static COMM_RECEIVE_STATE UART_ReceiveState = COMM_IDEL;
  7748                           ;serialCommand.c: 193: static uint8_t receiveCounter;
  7749                           ;serialCommand.c: 195: if((eusartRxCount))
  7750                           
  7751                           ;incstack = 0
  7752                           ; Regs used in _COMM_Task: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7753  01CD  0020               	movlb	0	; select bank0
  7754  01CE  0842               	movf	_eusartRxCount,w	;volatile
  7755  01CF  1903               	btfsc	3,2
  7756  01D0  0008               	return
  7757                           
  7758                           ;serialCommand.c: 196: {
  7759                           ;serialCommand.c: 197: receiveData = EUSART_Read();
  7760  01D1  24A7  3181         	fcall	_EUSART_Read
  7761  01D3  0020               	movlb	0	; select bank0
  7762  01D4  00DB               	movwf	COMM_Task@receiveData
  7763                           
  7764                           ;serialCommand.c: 201: switch(UART_ReceiveState)
  7765  01D5  083E               	movf	COMM_Task@UART_ReceiveState,w
  7766                           
  7767                           ; Switch size 1, requested type "speed"
  7768                           ; Number of cases is 3, Range of values is 0 to 2
  7769                           ; switch strategies available:
  7770                           ; Name         Instructions Cycles
  7771                           ; simple_byte           10     6 (average)
  7772                           ; direct_byte           12     6 (fixed)
  7773                           ; jumptable            260     6 (fixed)
  7774                           ;	Chosen strategy is simple_byte
  7775  01D6  3A00               	xorlw	0	; case 0
  7776  01D7  1903               	skipnz
  7777  01D8  29E1               	goto	l2096
  7778  01D9  3A01               	xorlw	1	; case 1
  7779  01DA  1903               	skipnz
  7780  01DB  2A07               	goto	l2114
  7781  01DC  3A03               	xorlw	3	; case 2
  7782  01DD  1903               	skipnz
  7783  01DE  2A87               	goto	l2138
  7784  01DF  2A7F               	goto	l2132
  7785  01E0  0008               	return
  7786  01E1                     l2096:	
  7787  01E1  3010               	movlw	16
  7788                           
  7789                           ;serialCommand.c: 204: memset(inputCommand,0,16);
  7790  01E2  01F0               	clrf	memset@c
  7791  01E3  01F1               	clrf	memset@c+1
  7792  01E4  00F2               	movwf	memset@n
  7793  01E5  3049               	movlw	(low (_inputCommand| 0))& (0+255)
  7794  01E6  01F3               	clrf	memset@n+1
  7795  01E7  24E1  3181         	fcall	_memset
  7796                           
  7797                           ;serialCommand.c: 206: if(receiveData == 'S' || receiveData == 'G' ||receiveData == 'T')
  7798  01E9  3053               	movlw	83
  7799  01EA  0020               	movlb	0	; select bank0
  7800  01EB  065B               	xorwf	COMM_Task@receiveData,w
  7801  01EC  1903               	btfsc	3,2
  7802  01ED  29F6               	goto	l598
  7803  01EE  3047               	movlw	71
  7804  01EF  065B               	xorwf	COMM_Task@receiveData,w
  7805  01F0  1903               	btfsc	3,2
  7806  01F1  29F6               	goto	l598
  7807  01F2  3054               	movlw	84
  7808  01F3  065B               	xorwf	COMM_Task@receiveData,w
  7809  01F4  1D03               	btfss	3,2
  7810  01F5  29FC               	goto	l2108
  7811  01F6                     l598:	
  7812                           
  7813                           ;serialCommand.c: 207: {
  7814                           ;serialCommand.c: 208: UART_ReceiveState = COMM_PROCESS_COMMAND;
  7815  01F6  01BE               	clrf	COMM_Task@UART_ReceiveState
  7816  01F7  0ABE               	incf	COMM_Task@UART_ReceiveState,f
  7817                           
  7818                           ;serialCommand.c: 209: inputCommand[0] = receiveData;
  7819  01F8  085B               	movf	COMM_Task@receiveData,w
  7820  01F9  00C9               	movwf	_inputCommand
  7821                           
  7822                           ;serialCommand.c: 210: receiveCounter = 0;
  7823  01FA  01BF               	clrf	COMM_Task@receiveCounter
  7824                           
  7825                           ;serialCommand.c: 211: }
  7826  01FB  0008               	return
  7827  01FC                     l2108:	
  7828                           
  7829                           ;serialCommand.c: 212: else if (receiveData == '\r'||receiveData =='\n')
  7830  01FC  300D               	movlw	13
  7831  01FD  065B               	xorwf	COMM_Task@receiveData,w
  7832  01FE  1903               	btfsc	3,2
  7833  01FF  0008               	return
  7834  0200  300A               	movlw	10
  7835  0201  065B               	xorwf	COMM_Task@receiveData,w
  7836  0202  1903               	btfsc	3,2
  7837  0203  0008               	return
  7838  0204                     l2112:	
  7839                           
  7840                           ;serialCommand.c: 216: else
  7841                           ;serialCommand.c: 217: {
  7842                           ;serialCommand.c: 218: UART_ReceiveState = COMM_PROCESS_TRASH;
  7843  0204  3002               	movlw	2
  7844  0205  00BE               	movwf	COMM_Task@UART_ReceiveState
  7845  0206  0008               	return
  7846  0207                     l2114:	
  7847                           
  7848                           ;serialCommand.c: 222: inputCommand[++receiveCounter] = receiveData;
  7849  0207  0ABF               	incf	COMM_Task@receiveCounter,f
  7850  0208  083F               	movf	COMM_Task@receiveCounter,w
  7851  0209  3E49               	addlw	(low (_inputCommand| 0))& (0+255)
  7852  020A  0086               	movwf	6
  7853  020B  0187               	clrf	7
  7854  020C  085B               	movf	COMM_Task@receiveData,w
  7855  020D  0081               	movwf	1
  7856                           
  7857                           ;serialCommand.c: 223: if(receiveData == '\n')
  7858  020E  300A               	movlw	10
  7859  020F  065B               	xorwf	COMM_Task@receiveData,w
  7860  0210  1D03               	btfss	3,2
  7861  0211  2A82               	goto	l2134
  7862                           
  7863                           ;serialCommand.c: 224: {
  7864                           ;serialCommand.c: 225: uint8_t i = 0;
  7865  0212  01DA               	clrf	COMM_Task@i
  7866  0213                     l2120:	
  7867                           
  7868                           ;serialCommand.c: 227: {
  7869                           ;serialCommand.c: 228: if(strncmp(inputCommand,commands[i].name,commands[i].nameLength)>
      +                          =0)
  7870  0213  3049               	movlw	low _inputCommand
  7871  0214  00F6               	movwf	strncmp@s1
  7872  0215  3000               	movlw	high _inputCommand
  7873  0216  00F7               	movwf	strncmp@s1+1
  7874  0217  0020               	movlb	0	; select bank0
  7875  0218  085A               	movf	COMM_Task@i,w
  7876  0219  00F0               	movwf	___wmul@multiplier
  7877  021A  3007               	movlw	7
  7878  021B  01F1               	clrf	___wmul@multiplier+1
  7879  021C  00F2               	movwf	___wmul@multiplicand
  7880  021D  01F3               	clrf	___wmul@multiplicand+1
  7881  021E  2291  3181         	fcall	___wmul
  7882  0220  0871               	movf	?___wmul+1,w
  7883  0221  0085               	movwf	5
  7884  0222  0870               	movf	?___wmul,w
  7885  0223  0084               	movwf	4
  7886  0224  3006               	movlw	low (_commands| (0+32768))
  7887  0225  0784               	addwf	4,f
  7888  0226  3086               	movlw	high (_commands| (0+32768))
  7889  0227  3D85               	addwfc	5,f
  7890  0228  3F00               	moviw [0]fsr0
  7891  0229  00F8               	movwf	strncmp@s2
  7892  022A  3F01               	moviw [1]fsr0
  7893  022B  00F9               	movwf	strncmp@s2+1
  7894  022C  0020               	movlb	0	; select bank0
  7895  022D  085A               	movf	COMM_Task@i,w
  7896  022E  00F0               	movwf	___wmul@multiplier
  7897  022F  3007               	movlw	7
  7898  0230  01F1               	clrf	___wmul@multiplier+1
  7899  0231  00F2               	movwf	___wmul@multiplicand
  7900  0232  01F3               	clrf	___wmul@multiplicand+1
  7901  0233  2291  3181         	fcall	___wmul
  7902  0235  0871               	movf	?___wmul+1,w
  7903  0236  0085               	movwf	5
  7904  0237  0870               	movf	?___wmul,w
  7905  0238  0084               	movwf	4
  7906  0239  3008               	movlw	low ((_commands+2)| (0+32768))
  7907  023A  0784               	addwf	4,f
  7908  023B  3086               	movlw	high ((_commands+2)| (0+32768))
  7909  023C  3D85               	addwfc	5,f
  7910  023D  0800               	movf	0,w	;code access
  7911  023E  00FA               	movwf	strncmp@len
  7912  023F  01FB               	clrf	strncmp@len+1
  7913  0240  246E  3181         	fcall	_strncmp
  7914  0242  1BF7               	btfsc	?_strncmp+1,7
  7915  0243  2A5C               	goto	l2124
  7916                           
  7917                           ;serialCommand.c: 229: {
  7918                           ;serialCommand.c: 230: commands[i].execute(inputCommand);
  7919  0244  3049               	movlw	(low (_inputCommand| 0))& (0+255)
  7920  0245  00FD               	movwf	testCommandProcess@input
  7921  0246  0020               	movlb	0	; select bank0
  7922  0247  085A               	movf	COMM_Task@i,w
  7923  0248  00F0               	movwf	___wmul@multiplier
  7924  0249  3007               	movlw	7
  7925  024A  01F1               	clrf	___wmul@multiplier+1
  7926  024B  00F2               	movwf	___wmul@multiplicand
  7927  024C  01F3               	clrf	___wmul@multiplicand+1
  7928  024D  2291               	fcall	___wmul
  7929  024E  0871               	movf	?___wmul+1,w
  7930  024F  0085               	movwf	5
  7931  0250  0870               	movf	?___wmul,w
  7932  0251  0084               	movwf	4
  7933  0252  3009               	movlw	low ((_commands+3)| (0+32768))
  7934  0253  0784               	addwf	4,f
  7935  0254  3086               	movlw	high ((_commands+3)| (0+32768))
  7936  0255  3D85               	addwfc	5,f
  7937  0256  3F01               	moviw [1]fsr0
  7938  0257  008A               	movwf	10
  7939  0258  3F00               	moviw [0]fsr0
  7940  0259  000A               	callw
  7941  025A  3181               	pagesel	$
  7942                           
  7943                           ;serialCommand.c: 231: break;
  7944  025B  2A71               	goto	l2128
  7945  025C                     l2124:	
  7946                           
  7947                           ;serialCommand.c: 232: }
  7948                           ;serialCommand.c: 233: i++;
  7949  025C  0020               	movlb	0	; select bank0
  7950  025D  0ADA               	incf	COMM_Task@i,f
  7951                           
  7952                           ;serialCommand.c: 234: }while(commands[i].nameLength!=0);
  7953  025E  085A               	movf	COMM_Task@i,w
  7954  025F  00F0               	movwf	___wmul@multiplier
  7955  0260  3007               	movlw	7
  7956  0261  01F1               	clrf	___wmul@multiplier+1
  7957  0262  00F2               	movwf	___wmul@multiplicand
  7958  0263  01F3               	clrf	___wmul@multiplicand+1
  7959  0264  2291  3181         	fcall	___wmul
  7960  0266  0871               	movf	?___wmul+1,w
  7961  0267  0085               	movwf	5
  7962  0268  0870               	movf	?___wmul,w
  7963  0269  0084               	movwf	4
  7964  026A  3008               	movlw	low ((_commands+2)| (0+32768))
  7965  026B  0784               	addwf	4,f
  7966  026C  3086               	movlw	high ((_commands+2)| (0+32768))
  7967  026D  3D85               	addwfc	5,f
  7968  026E  0012               	moviw fsr0++
  7969  026F  1D03               	btfss	3,2
  7970  0270  2A13               	goto	l2120
  7971  0271                     l2128:	
  7972                           
  7973                           ;serialCommand.c: 235: if(i>=command_GetnumberofCommands(&commands))
  7974  0271  3006               	movlw	low (_commands| (0+32768))
  7975  0272  00F6               	movwf	command_GetnumberofCommands@commandArray
  7976  0273  3086               	movlw	high (_commands| (0+32768))
  7977  0274  00F7               	movwf	command_GetnumberofCommands@commandArray+1
  7978  0275  24BD  3181         	fcall	_command_GetnumberofCommands
  7979  0277  025A               	subwf	COMM_Task@i,w
  7980  0278  1C03               	skipc
  7981  0279  2A7F               	goto	l2132
  7982                           
  7983                           ;serialCommand.c: 236: printf("Invalid Command \r\n");
  7984  027A  30FE               	movlw	low (STR_14| (0+32768))
  7985  027B  00F2               	movwf	printf@f
  7986  027C  3086               	movlw	high (STR_14| (0+32768))
  7987  027D  00F3               	movwf	printf@f+1
  7988  027E  23D8               	fcall	_printf
  7989  027F                     l2132:	
  7990                           
  7991                           ;serialCommand.c: 237: UART_ReceiveState = COMM_IDEL;
  7992  027F  0020               	movlb	0	; select bank0
  7993  0280  01BE               	clrf	COMM_Task@UART_ReceiveState
  7994                           
  7995                           ;serialCommand.c: 238: }
  7996  0281  0008               	return
  7997  0282                     l2134:	
  7998                           
  7999                           ;serialCommand.c: 239: else if(receiveCounter>=16-1)
  8000  0282  300F               	movlw	15
  8001  0283  023F               	subwf	COMM_Task@receiveCounter,w
  8002  0284  1C03               	skipc
  8003  0285  0008               	return
  8004  0286  2A04               	goto	l2112
  8005  0287                     l2138:	
  8006                           
  8007                           ;serialCommand.c: 245: if(receiveData == '\n')
  8008  0287  300A               	movlw	10
  8009  0288  065B               	xorwf	COMM_Task@receiveData,w
  8010  0289  1D03               	btfss	3,2
  8011  028A  0008               	return
  8012  028B  30FE               	movlw	low (STR_14| (0+32768))
  8013                           
  8014                           ;serialCommand.c: 246: {
  8015                           ;serialCommand.c: 247: UART_ReceiveState = COMM_IDEL;
  8016  028C  01BE               	clrf	COMM_Task@UART_ReceiveState
  8017                           
  8018                           ;serialCommand.c: 248: printf("Invalid Command \r\n");
  8019  028D  00F2               	movwf	printf@f
  8020  028E  3086               	movlw	high (STR_14| (0+32768))
  8021  028F  00F3               	movwf	printf@f+1
  8022  0290  2BD8               	ljmp	l1796
  8023  0291                     __end_of_COMM_Task:	
  8024  0291                     __ptext29:	
  8025 ;; *************** function ___wmul *****************
  8026 ;; Defined at:
  8027 ;;		line 15 in file "/Applications/microchip/xc8/v1.34/sources/common/Umul16.c"
  8028 ;; Parameters:    Size  Location     Type
  8029 ;;  multiplier      2    0[COMMON] unsigned int 
  8030 ;;  multiplicand    2    2[COMMON] unsigned int 
  8031 ;; Auto vars:     Size  Location     Type
  8032 ;;  product         2    4[COMMON] unsigned int 
  8033 ;; Return value:  Size  Location     Type
  8034 ;;                  2    0[COMMON] unsigned int 
  8035 ;; Registers used:
  8036 ;;		wreg, status,2, status,0
  8037 ;; Tracked objects:
  8038 ;;		On entry : 0/0
  8039 ;;		On exit  : 0/0
  8040 ;;		Unchanged: 0/0
  8041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8042 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8043 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8045 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8046 ;;Total ram usage:        6 bytes
  8047 ;; Hardware stack levels used:    1
  8048 ;; Hardware stack levels required when called:    2
  8049 ;; This function calls:
  8050 ;;		Nothing
  8051 ;; This function is called by:
  8052 ;;		_command_GetnumberofCommands
  8053 ;;		_COMM_Task
  8054 ;; This function uses a non-reentrant model
  8055 ;;
  8056                           
  8057                           
  8058                           ;psect for function ___wmul
  8059  0291                     ___wmul:	
  8060                           
  8061                           ;incstack = 0
  8062                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8063  0291  01F4               	clrf	___wmul@product
  8064  0292  01F5               	clrf	___wmul@product+1
  8065  0293                     l1866:	
  8066  0293  1C70               	btfss	___wmul@multiplier,0
  8067  0294  2A99               	goto	l1870
  8068  0295  0872               	movf	___wmul@multiplicand,w
  8069  0296  07F4               	addwf	___wmul@product,f
  8070  0297  0873               	movf	___wmul@multiplicand+1,w
  8071  0298  3DF5               	addwfc	___wmul@product+1,f
  8072  0299                     l1870:	
  8073  0299  35F2               	lslf	___wmul@multiplicand,f
  8074  029A  0DF3               	rlf	___wmul@multiplicand+1,f
  8075  029B  36F1               	lsrf	___wmul@multiplier+1,f
  8076  029C  0CF0               	rrf	___wmul@multiplier,f
  8077  029D  0870               	movf	___wmul@multiplier,w
  8078  029E  0471               	iorwf	___wmul@multiplier+1,w
  8079  029F  1D03               	btfss	3,2
  8080  02A0  2A93               	goto	l1866
  8081  02A1  0875               	movf	___wmul@product+1,w
  8082  02A2  00F1               	movwf	?___wmul+1
  8083  02A3  0874               	movf	___wmul@product,w
  8084  02A4  00F0               	movwf	?___wmul
  8085  02A5  0008               	return
  8086  02A6                     __end_of___wmul:	
  8087  02A6                     __ptext16:	
  8088 ;; *************** function _testCommandProcess *****************
  8089 ;; Defined at:
  8090 ;;		line 149 in file "../src/serialCommand.c"
  8091 ;; Parameters:    Size  Location     Type
  8092 ;;  input           1   13[COMMON] PTR unsigned char 
  8093 ;;		 -> inputCommand(16), 
  8094 ;; Auto vars:     Size  Location     Type
  8095 ;;		None
  8096 ;; Return value:  Size  Location     Type
  8097 ;;		None               void
  8098 ;; Registers used:
  8099 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8100 ;; Tracked objects:
  8101 ;;		On entry : 0/0
  8102 ;;		On exit  : 0/0
  8103 ;;		Unchanged: 0/0
  8104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8105 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8108 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8109 ;;Total ram usage:        1 bytes
  8110 ;; Hardware stack levels used:    1
  8111 ;; Hardware stack levels required when called:    5
  8112 ;; This function calls:
  8113 ;;		_LED_Test
  8114 ;;		_printf
  8115 ;;		_strcmp
  8116 ;; This function is called by:
  8117 ;;		_COMM_Task
  8118 ;; This function uses a non-reentrant model
  8119 ;;
  8120                           
  8121                           
  8122                           ;psect for function _testCommandProcess
  8123  02A6                     _testCommandProcess:	
  8124                           
  8125                           ;serialCommand.c: 151: if(strcmp(CMD_TEST_LED,input)==0)
  8126                           
  8127                           ;incstack = 0
  8128                           ; Regs used in _testCommandProcess: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8129  02A6  3085               	movlw	low (_CMD_TEST_LED| (0+32768))
  8130  02A7  00F0               	movwf	strcmp@s1
  8131  02A8  3086               	movlw	high (_CMD_TEST_LED| (0+32768))
  8132  02A9  00F1               	movwf	strcmp@s1+1
  8133  02AA  087D               	movf	testCommandProcess@input,w
  8134  02AB  00F2               	movwf	strcmp@s2
  8135  02AC  239C  3181         	fcall	_strcmp
  8136  02AE  0870               	movf	?_strcmp,w
  8137  02AF  0471               	iorwf	?_strcmp+1,w
  8138  02B0  1D03               	btfss	3,2
  8139  02B1  2AB4               	goto	l1996
  8140                           
  8141                           ;serialCommand.c: 152: {
  8142                           ;serialCommand.c: 153: LED_Test();
  8143  02B2  3180  2841         	ljmp	l1732
  8144  02B4                     l1996:	
  8145                           ;serialCommand.c: 154: }
  8146                           
  8147                           
  8148                           ;serialCommand.c: 155: else if(strcmp(CMD_TEST_SRAM,input)==0)
  8149  02B4  3079               	movlw	low (_CMD_TEST_SRAM| (0+32768))
  8150  02B5  00F0               	movwf	strcmp@s1
  8151  02B6  3086               	movlw	high (_CMD_TEST_SRAM| (0+32768))
  8152  02B7  00F1               	movwf	strcmp@s1+1
  8153  02B8  087D               	movf	testCommandProcess@input,w
  8154  02B9  00F2               	movwf	strcmp@s2
  8155  02BA  239C  3181         	fcall	_strcmp
  8156  02BC  0870               	movf	?_strcmp,w
  8157  02BD  0471               	iorwf	?_strcmp+1,w
  8158  02BE  1903               	btfsc	3,2
  8159  02BF  0008               	return
  8160                           
  8161                           ;serialCommand.c: 159: else
  8162                           ;serialCommand.c: 160: {
  8163                           ;serialCommand.c: 161: printf("Invalid Command \r\n");
  8164  02C0  30FE               	movlw	low (STR_14| (0+32768))
  8165  02C1  00F2               	movwf	printf@f
  8166  02C2  3086               	movlw	high (STR_14| (0+32768))
  8167  02C3  00F3               	movwf	printf@f+1
  8168  02C4  2BD8               	ljmp	l1796
  8169  02C5                     __end_of_testCommandProcess:	
  8170  02C5                     __ptext14:	
  8171 ;; *************** function _getCommandProcess *****************
  8172 ;; Defined at:
  8173 ;;		line 117 in file "../src/serialCommand.c"
  8174 ;; Parameters:    Size  Location     Type
  8175 ;;  input           1   13[COMMON] PTR unsigned char 
  8176 ;;		 -> inputCommand(16), 
  8177 ;; Auto vars:     Size  Location     Type
  8178 ;;		None
  8179 ;; Return value:  Size  Location     Type
  8180 ;;		None               void
  8181 ;; Registers used:
  8182 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8183 ;; Tracked objects:
  8184 ;;		On entry : 0/0
  8185 ;;		On exit  : 0/0
  8186 ;;		Unchanged: 0/0
  8187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8188 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8191 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8192 ;;Total ram usage:        1 bytes
  8193 ;; Hardware stack levels used:    1
  8194 ;; Hardware stack levels required when called:    5
  8195 ;; This function calls:
  8196 ;;		_printf
  8197 ;;		_strcmp
  8198 ;; This function is called by:
  8199 ;;		_COMM_Task
  8200 ;; This function uses a non-reentrant model
  8201 ;;
  8202                           
  8203                           
  8204                           ;psect for function _getCommandProcess
  8205  02C5                     _getCommandProcess:	
  8206                           
  8207                           ;serialCommand.c: 119: if(strcmp(CMD_GET_STATE,input)==0)
  8208                           
  8209                           ;incstack = 0
  8210                           ; Regs used in _getCommandProcess: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8211  02C5  3050               	movlw	low (_CMD_GET_STATE| (0+32768))
  8212  02C6  00F0               	movwf	strcmp@s1
  8213  02C7  3086               	movlw	high (_CMD_GET_STATE| (0+32768))
  8214  02C8  00F1               	movwf	strcmp@s1+1
  8215  02C9  087D               	movf	getCommandProcess@input,w
  8216  02CA  00F2               	movwf	strcmp@s2
  8217  02CB  239C  3181         	fcall	_strcmp
  8218  02CD  0870               	movf	?_strcmp,w
  8219  02CE  0471               	iorwf	?_strcmp+1,w
  8220  02CF  1903               	btfsc	3,2
  8221  02D0  2AF0               	goto	l1984
  8222  02D1  2AFB               	goto	l1986
  8223  02D2                     l1970:	
  8224                           
  8225                           ;serialCommand.c: 124: printf("LED is OFF\r\n");
  8226  02D2  3020               	movlw	low (STR_16| (0+32768))
  8227  02D3  00F2               	movwf	printf@f
  8228  02D4  3087               	movlw	high (STR_16| (0+32768))
  8229  02D5  00F3               	movwf	printf@f+1
  8230  02D6  2BD8               	ljmp	l1796
  8231  02D7                     l1972:	
  8232                           ;serialCommand.c: 125: break;
  8233                           
  8234                           
  8235                           ;serialCommand.c: 127: printf("Direct color\r\n");
  8236  02D7  3011               	movlw	low (STR_17| (0+32768))
  8237  02D8  00F2               	movwf	printf@f
  8238  02D9  3087               	movlw	high (STR_17| (0+32768))
  8239  02DA  00F3               	movwf	printf@f+1
  8240  02DB  2BD8               	ljmp	l1796
  8241  02DC                     l1974:	
  8242                           ;serialCommand.c: 128: break;
  8243                           
  8244                           
  8245                           ;serialCommand.c: 130: printf("Starry\r\n");
  8246  02DC  302D               	movlw	low (STR_18| (0+32768))
  8247  02DD  00F2               	movwf	printf@f
  8248  02DE  3087               	movlw	high (STR_18| (0+32768))
  8249  02DF  00F3               	movwf	printf@f+1
  8250  02E0  2BD8               	ljmp	l1796
  8251  02E1                     l1976:	
  8252                           ;serialCommand.c: 131: break;
  8253                           
  8254                           
  8255                           ;serialCommand.c: 133: printf("Xmas\r\n");
  8256  02E1  304E               	movlw	low (STR_19| (0+32768))
  8257  02E2  00F2               	movwf	printf@f
  8258  02E3  3087               	movlw	high (STR_19| (0+32768))
  8259  02E4  00F3               	movwf	printf@f+1
  8260  02E5  2BD8               	ljmp	l1796
  8261  02E6                     l1978:	
  8262                           ;serialCommand.c: 134: break;
  8263                           
  8264                           
  8265                           ;serialCommand.c: 136: printf("Party\r\n");
  8266  02E6  3046               	movlw	low (STR_20| (0+32768))
  8267  02E7  00F2               	movwf	printf@f
  8268  02E8  3087               	movlw	high (STR_20| (0+32768))
  8269  02E9  00F3               	movwf	printf@f+1
  8270  02EA  2BD8               	ljmp	l1796
  8271  02EB                     l1980:	
  8272                           ;serialCommand.c: 137: break;
  8273                           
  8274                           
  8275                           ;serialCommand.c: 139: printf("ERROR\r\n");
  8276  02EB  303E               	movlw	low (STR_21| (0+32768))
  8277  02EC  00F2               	movwf	printf@f
  8278  02ED  3087               	movlw	high (STR_21| (0+32768))
  8279  02EE  00F3               	movwf	printf@f+1
  8280  02EF  2BD8               	ljmp	l1796
  8281  02F0                     l1984:	
  8282                           ;serialCommand.c: 140: break;
  8283                           
  8284  02F0  0020               	movlb	0	; select bank0
  8285  02F1  0841               	movf	_LED_mode,w
  8286                           
  8287                           ; Switch size 1, requested type "speed"
  8288                           ; Number of cases is 5, Range of values is 0 to 4
  8289                           ; switch strategies available:
  8290                           ; Name         Instructions Cycles
  8291                           ; direct_byte           16     6 (fixed)
  8292                           ; simple_byte           16     9 (average)
  8293                           ; jumptable            260     6 (fixed)
  8294                           ;	Chosen strategy is direct_byte
  8295  02F2  0084               	movwf	4
  8296  02F3  3005               	movlw	5
  8297  02F4  0204               	subwf	4,w
  8298  02F5  1803               	skipnc
  8299  02F6  2AEB               	goto	l1980
  8300  02F7  3185               	movlp	high S2220
  8301  02F8  3504               	lslf	4,w
  8302  02F9  3E1A               	addlw	low S2220
  8303  02FA  0082               	movwf	2
  8304  02FB                     l1986:	
  8305                           
  8306                           ;serialCommand.c: 143: else
  8307                           ;serialCommand.c: 144: {
  8308                           ;serialCommand.c: 145: printf("Invalid Command \r\n");
  8309  02FB  30FE               	movlw	low (STR_14| (0+32768))
  8310  02FC  00F2               	movwf	printf@f
  8311  02FD  3086               	movlw	high (STR_14| (0+32768))
  8312  02FE  00F3               	movwf	printf@f+1
  8313  02FF  2BD8               	ljmp	l1796
  8314  0300                     __end_of_getCommandProcess:	
  8315  0300                     __ptext15:	
  8316 ;; *************** function _setCommandProcess *****************
  8317 ;; Defined at:
  8318 ;;		line 71 in file "../src/serialCommand.c"
  8319 ;; Parameters:    Size  Location     Type
  8320 ;;  input           1   13[COMMON] PTR unsigned char 
  8321 ;;		 -> inputCommand(16), 
  8322 ;; Auto vars:     Size  Location     Type
  8323 ;;		None
  8324 ;; Return value:  Size  Location     Type
  8325 ;;		None               void
  8326 ;; Registers used:
  8327 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8328 ;; Tracked objects:
  8329 ;;		On entry : 0/0
  8330 ;;		On exit  : 0/0
  8331 ;;		Unchanged: 0/0
  8332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8333 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8336 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8337 ;;Total ram usage:        1 bytes
  8338 ;; Hardware stack levels used:    1
  8339 ;; Hardware stack levels required when called:    5
  8340 ;; This function calls:
  8341 ;;		_oneByte_HexSrtingToBinary
  8342 ;;		_printf
  8343 ;;		_strcmp
  8344 ;;		_strlen
  8345 ;;		_strncmp
  8346 ;; This function is called by:
  8347 ;;		_COMM_Task
  8348 ;; This function uses a non-reentrant model
  8349 ;;
  8350                           
  8351                           
  8352                           ;psect for function _setCommandProcess
  8353  0300                     _setCommandProcess:	
  8354                           
  8355                           ;serialCommand.c: 73: if(strcmp(CMD_SET_OFF,input)==0)
  8356                           
  8357                           ;incstack = 0
  8358                           ; Regs used in _setCommandProcess: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8359  0300  306C               	movlw	low (_CMD_SET_OFF| (0+32768))
  8360  0301  00F0               	movwf	strcmp@s1
  8361  0302  3086               	movlw	high (_CMD_SET_OFF| (0+32768))
  8362  0303  00F1               	movwf	strcmp@s1+1
  8363  0304  087D               	movf	setCommandProcess@input,w
  8364  0305  00F2               	movwf	strcmp@s2
  8365  0306  239C  3181         	fcall	_strcmp
  8366  0308  0870               	movf	?_strcmp,w
  8367  0309  0471               	iorwf	?_strcmp+1,w
  8368  030A  1D03               	btfss	3,2
  8369  030B  2B13               	goto	l1936
  8370                           
  8371                           ;serialCommand.c: 74: {
  8372                           ;serialCommand.c: 75: LED_mode = LED_OFF;
  8373  030C  0020               	movlb	0	; select bank0
  8374  030D  3036               	movlw	low (STR_9| (0+32768))
  8375  030E  01C1               	clrf	_LED_mode
  8376                           
  8377                           ;serialCommand.c: 76: printf("DONE!\r\n");
  8378  030F  00F2               	movwf	printf@f
  8379  0310  3087               	movlw	high (STR_9| (0+32768))
  8380  0311  00F3               	movwf	printf@f+1
  8381  0312  2BD8               	ljmp	l1796
  8382  0313                     l1936:	
  8383                           ;serialCommand.c: 77: }
  8384                           
  8385                           
  8386                           ;serialCommand.c: 78: else if(strcmp(CMD_SET_STARRY,input)==0)
  8387  0313  3022               	movlw	low (_CMD_SET_STARRY| (0+32768))
  8388  0314  00F0               	movwf	strcmp@s1
  8389  0315  3086               	movlw	high (_CMD_SET_STARRY| (0+32768))
  8390  0316  00F1               	movwf	strcmp@s1+1
  8391  0317  087D               	movf	setCommandProcess@input,w
  8392  0318  00F2               	movwf	strcmp@s2
  8393  0319  239C  3181         	fcall	_strcmp
  8394  031B  0870               	movf	?_strcmp,w
  8395  031C  0471               	iorwf	?_strcmp+1,w
  8396  031D  1D03               	btfss	3,2
  8397  031E  2B27               	goto	l1942
  8398                           
  8399                           ;serialCommand.c: 79: {
  8400                           ;serialCommand.c: 80: LED_mode = LED_STARRY;
  8401  031F  3002               	movlw	2
  8402  0320  0020               	movlb	0	; select bank0
  8403  0321  00C1               	movwf	_LED_mode
  8404                           
  8405                           ;serialCommand.c: 81: printf("DONE!\r\n");
  8406  0322  3036               	movlw	low (STR_9| (0+32768))
  8407  0323  00F2               	movwf	printf@f
  8408  0324  3087               	movlw	high (STR_9| (0+32768))
  8409  0325  00F3               	movwf	printf@f+1
  8410  0326  2BD8               	ljmp	l1796
  8411  0327                     l1942:	
  8412                           ;serialCommand.c: 82: }
  8413                           
  8414                           
  8415                           ;serialCommand.c: 83: else if(strcmp(CMD_SET_XMAS,input)==0)
  8416  0327  305E               	movlw	low (_CMD_SET_XMAS| (0+32768))
  8417  0328  00F0               	movwf	strcmp@s1
  8418  0329  3086               	movlw	high (_CMD_SET_XMAS| (0+32768))
  8419  032A  00F1               	movwf	strcmp@s1+1
  8420  032B  087D               	movf	setCommandProcess@input,w
  8421  032C  00F2               	movwf	strcmp@s2
  8422  032D  239C  3181         	fcall	_strcmp
  8423  032F  0870               	movf	?_strcmp,w
  8424  0330  0471               	iorwf	?_strcmp+1,w
  8425  0331  1D03               	btfss	3,2
  8426  0332  2B3B               	goto	l1948
  8427                           
  8428                           ;serialCommand.c: 84: {
  8429                           ;serialCommand.c: 85: LED_mode = LED_XMAS;
  8430  0333  3003               	movlw	3
  8431  0334  0020               	movlb	0	; select bank0
  8432  0335  00C1               	movwf	_LED_mode
  8433                           
  8434                           ;serialCommand.c: 86: printf("DONE!\r\n");
  8435  0336  3036               	movlw	low (STR_9| (0+32768))
  8436  0337  00F2               	movwf	printf@f
  8437  0338  3087               	movlw	high (STR_9| (0+32768))
  8438  0339  00F3               	movwf	printf@f+1
  8439  033A  2BD8               	ljmp	l1796
  8440  033B                     l1948:	
  8441                           ;serialCommand.c: 87: }
  8442                           
  8443                           
  8444                           ;serialCommand.c: 88: else if(strcmp(CMD_SET_PARTY,input)==0)
  8445  033B  3041               	movlw	low (_CMD_SET_PARTY| (0+32768))
  8446  033C  00F0               	movwf	strcmp@s1
  8447  033D  3086               	movlw	high (_CMD_SET_PARTY| (0+32768))
  8448  033E  00F1               	movwf	strcmp@s1+1
  8449  033F  087D               	movf	setCommandProcess@input,w
  8450  0340  00F2               	movwf	strcmp@s2
  8451  0341  239C  3181         	fcall	_strcmp
  8452  0343  0870               	movf	?_strcmp,w
  8453  0344  0471               	iorwf	?_strcmp+1,w
  8454  0345  1D03               	btfss	3,2
  8455  0346  2B4F               	goto	l1954
  8456                           
  8457                           ;serialCommand.c: 89: {
  8458                           ;serialCommand.c: 90: LED_mode = LED_PARTY;
  8459  0347  3004               	movlw	4
  8460  0348  0020               	movlb	0	; select bank0
  8461  0349  00C1               	movwf	_LED_mode
  8462                           
  8463                           ;serialCommand.c: 91: printf("DONE!\r\n");
  8464  034A  3036               	movlw	low (STR_9| (0+32768))
  8465  034B  00F2               	movwf	printf@f
  8466  034C  3087               	movlw	high (STR_9| (0+32768))
  8467  034D  00F3               	movwf	printf@f+1
  8468  034E  2BD8               	ljmp	l1796
  8469  034F                     l1954:	
  8470                           ;serialCommand.c: 92: }
  8471                           
  8472                           
  8473                           ;serialCommand.c: 93: else if(strncmp(CMD_SET_DIRECT,input,strlen(CMD_SET_DIRECT))==0)
  8474  034F  3032               	movlw	low (_CMD_SET_DIRECT| (0+32768))
  8475  0350  00F6               	movwf	strncmp@s1
  8476  0351  3086               	movlw	high (_CMD_SET_DIRECT| (0+32768))
  8477  0352  00F7               	movwf	strncmp@s1+1
  8478  0353  087D               	movf	setCommandProcess@input,w
  8479  0354  00F8               	movwf	strncmp@s2
  8480  0355  3032               	movlw	low (_CMD_SET_DIRECT| (0+32768))
  8481  0356  01F9               	clrf	strncmp@s2+1
  8482  0357  00F0               	movwf	strlen@s
  8483  0358  3086               	movlw	high (_CMD_SET_DIRECT| (0+32768))
  8484  0359  00F1               	movwf	strlen@s+1
  8485  035A  2456  3181         	fcall	_strlen
  8486  035C  0871               	movf	?_strlen+1,w
  8487  035D  00FB               	movwf	strncmp@len+1
  8488  035E  0870               	movf	?_strlen,w
  8489  035F  00FA               	movwf	strncmp@len
  8490  0360  246E  3181         	fcall	_strncmp
  8491  0362  0876               	movf	?_strncmp,w
  8492  0363  0477               	iorwf	?_strncmp+1,w
  8493  0364  1D03               	btfss	3,2
  8494  0365  2B97               	goto	l1964
  8495                           
  8496                           ;serialCommand.c: 94: {
  8497                           ;serialCommand.c: 95: input = input + strlen(CMD_SET_DIRECT);
  8498  0366  3032               	movlw	low (_CMD_SET_DIRECT| (0+32768))
  8499  0367  00F0               	movwf	strlen@s
  8500  0368  3086               	movlw	high (_CMD_SET_DIRECT| (0+32768))
  8501  0369  00F1               	movwf	strlen@s+1
  8502  036A  2456  3181         	fcall	_strlen
  8503  036C  0870               	movf	?_strlen,w
  8504  036D  07FD               	addwf	setCommandProcess@input,f
  8505                           
  8506                           ;serialCommand.c: 97: if(strlen(input) == 8)
  8507  036E  087D               	movf	setCommandProcess@input,w
  8508  036F  00F0               	movwf	strlen@s
  8509  0370  01F1               	clrf	strlen@s+1
  8510  0371  2456  3181         	fcall	_strlen
  8511  0373  3008               	movlw	8
  8512  0374  0670               	xorwf	?_strlen,w
  8513  0375  0471               	iorwf	?_strlen+1,w
  8514  0376  1D03               	btfss	3,2
  8515  0377  2B92               	goto	l1962
  8516                           
  8517                           ;serialCommand.c: 98: {
  8518                           ;serialCommand.c: 99: LED_SetColor.Red = oneByte_HexSrtingToBinary(input);
  8519  0378  087D               	movf	setCommandProcess@input,w
  8520  0379  23EA  3181         	fcall	_oneByte_HexSrtingToBinary
  8521  037B  0020               	movlb	0	; select bank0
  8522  037C  00B8               	movwf	_LED_SetColor
  8523                           
  8524                           ;serialCommand.c: 100: LED_SetColor.Green = oneByte_HexSrtingToBinary(input+2);
  8525  037D  087D               	movf	setCommandProcess@input,w
  8526  037E  3E02               	addlw	2
  8527  037F  23EA  3181         	fcall	_oneByte_HexSrtingToBinary
  8528  0381  0020               	movlb	0	; select bank0
  8529  0382  00B9               	movwf	_LED_SetColor+1
  8530                           
  8531                           ;serialCommand.c: 101: LED_SetColor.Blue = oneByte_HexSrtingToBinary(input+4);
  8532  0383  087D               	movf	setCommandProcess@input,w
  8533  0384  3E04               	addlw	4
  8534  0385  23EA  3181         	fcall	_oneByte_HexSrtingToBinary
  8535  0387  0020               	movlb	0	; select bank0
  8536  0388  00BA               	movwf	_LED_SetColor+2
  8537                           
  8538                           ;serialCommand.c: 102: printf("DONE!\r\n");
  8539  0389  3036               	movlw	low (STR_9| (0+32768))
  8540  038A  00F2               	movwf	printf@f
  8541  038B  3087               	movlw	high (STR_9| (0+32768))
  8542  038C  00F3               	movwf	printf@f+1
  8543  038D  23D8               	fcall	_printf
  8544                           
  8545                           ;serialCommand.c: 103: LED_mode = LED_DIRECT;
  8546  038E  0020               	movlb	0	; select bank0
  8547  038F  01C1               	clrf	_LED_mode
  8548  0390  0AC1               	incf	_LED_mode,f
  8549                           
  8550                           ;serialCommand.c: 104: }
  8551  0391  0008               	return
  8552  0392                     l1962:	
  8553                           
  8554                           ;serialCommand.c: 105: else
  8555                           ;serialCommand.c: 106: {
  8556                           ;serialCommand.c: 107: printf("Invalid Command \r\n");
  8557  0392  30FE               	movlw	low (STR_14| (0+32768))
  8558  0393  00F2               	movwf	printf@f
  8559  0394  3086               	movlw	high (STR_14| (0+32768))
  8560  0395  00F3               	movwf	printf@f+1
  8561  0396  2BD8               	ljmp	l1796
  8562  0397                     l1964:	
  8563                           
  8564                           ;serialCommand.c: 110: else
  8565                           ;serialCommand.c: 111: {
  8566                           ;serialCommand.c: 112: printf("Invalid Command \r\n");
  8567  0397  30FE               	movlw	low (STR_14| (0+32768))
  8568  0398  00F2               	movwf	printf@f
  8569  0399  3086               	movlw	high (STR_14| (0+32768))
  8570  039A  00F3               	movwf	printf@f+1
  8571  039B  2BD8               	ljmp	l1796
  8572  039C                     __end_of_setCommandProcess:	
  8573  039C                     __ptext24:	
  8574 ;; *************** function _strcmp *****************
  8575 ;; Defined at:
  8576 ;;		line 5 in file "/Applications/microchip/xc8/v1.34/sources/common/strcmp.c"
  8577 ;; Parameters:    Size  Location     Type
  8578 ;;  s1              2    0[COMMON] PTR const unsigned char 
  8579 ;;		 -> CMD_TEST_SRAM(12), CMD_TEST_LED(11), CMD_GET_STATE(14), CMD_SET_PARTY(15), 
  8580 ;;		 -> CMD_SET_XMAS(14), CMD_SET_STARRY(16), CMD_SET_OFF(13), 
  8581 ;;  s2              1    2[COMMON] PTR const unsigned char 
  8582 ;;		 -> inputCommand(16), 
  8583 ;; Auto vars:     Size  Location     Type
  8584 ;;  t1              1    5[COMMON] unsigned char 
  8585 ;;  t2              1    4[COMMON] unsigned char 
  8586 ;;  t0              1    3[COMMON] unsigned char 
  8587 ;; Return value:  Size  Location     Type
  8588 ;;                  2    0[COMMON] int 
  8589 ;; Registers used:
  8590 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  8591 ;; Tracked objects:
  8592 ;;		On entry : 0/0
  8593 ;;		On exit  : 0/0
  8594 ;;		Unchanged: 0/0
  8595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8596 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8597 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8599 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8600 ;;Total ram usage:        6 bytes
  8601 ;; Hardware stack levels used:    1
  8602 ;; Hardware stack levels required when called:    2
  8603 ;; This function calls:
  8604 ;;		Nothing
  8605 ;; This function is called by:
  8606 ;;		_setCommandProcess
  8607 ;;		_getCommandProcess
  8608 ;;		_testCommandProcess
  8609 ;; This function uses a non-reentrant model
  8610 ;;
  8611                           
  8612                           
  8613                           ;psect for function _strcmp
  8614  039C                     _strcmp:	
  8615  039C                     l1760:	
  8616                           ;incstack = 0
  8617                           ; Regs used in _strcmp: [wreg-fsr1h+status,2+status,0+pclath]
  8618                           
  8619  039C  0870               	movf	strcmp@s1,w
  8620  039D  0084               	movwf	4
  8621  039E  0871               	movf	strcmp@s1+1,w
  8622  039F  0085               	movwf	5
  8623  03A0  0800               	movf	0,w	;code access
  8624  03A1  00F3               	movwf	strcmp@t0
  8625  03A2  0872               	movf	strcmp@s2,w
  8626  03A3  0086               	movwf	6
  8627  03A4  0187               	clrf	7
  8628  03A5  0801               	movf	1,w
  8629  03A6  00F5               	movwf	strcmp@t1
  8630  03A7  0873               	movf	strcmp@t0,w
  8631  03A8  1903               	btfsc	3,2
  8632  03A9  2BD0               	goto	l1792
  8633  03AA  3002               	movlw	2
  8634  03AB  07F0               	addwf	strcmp@s1,f
  8635  03AC  1803               	skipnc
  8636  03AD  0AF1               	incf	strcmp@s1+1,f
  8637  03AE  0873               	movf	strcmp@t0,w
  8638  03AF  0675               	xorwf	strcmp@t1,w
  8639  03B0  1D03               	btfss	3,2
  8640  03B1  2BD0               	goto	l1792
  8641  03B2  30FF               	movlw	255
  8642  03B3  0770               	addwf	strcmp@s1,w
  8643  03B4  0084               	movwf	4
  8644  03B5  30FF               	movlw	255
  8645  03B6  3D71               	addwfc	strcmp@s1+1,w
  8646  03B7  0085               	movwf	5
  8647  03B8  0800               	movf	0,w	;code access
  8648  03B9  00F4               	movwf	strcmp@t2
  8649  03BA  0872               	movf	strcmp@s2,w
  8650  03BB  0086               	movwf	6
  8651  03BC  3F41               	moviw [1]fsr1
  8652  03BD  00F5               	movwf	strcmp@t1
  8653  03BE  0874               	movf	strcmp@t2,w
  8654  03BF  1D03               	btfss	3,2
  8655  03C0  2BC9               	goto	l1782
  8656  03C1                     l1778:	
  8657  03C1  0874               	movf	strcmp@t2,w
  8658  03C2  00F0               	movwf	?_strcmp
  8659  03C3  01F1               	clrf	?_strcmp+1
  8660  03C4  0875               	movf	strcmp@t1,w
  8661  03C5  02F0               	subwf	?_strcmp,f
  8662  03C6  1C03               	skipc
  8663  03C7  03F1               	decf	?_strcmp+1,f
  8664  03C8  0008               	return
  8665  03C9                     l1782:	
  8666  03C9  0AF2               	incf	strcmp@s2,f
  8667  03CA  0AF2               	incf	strcmp@s2,f
  8668  03CB  0875               	movf	strcmp@t1,w
  8669  03CC  0674               	xorwf	strcmp@t2,w
  8670  03CD  1D03               	btfss	3,2
  8671  03CE  2BC1               	goto	l1778
  8672  03CF  2B9C               	goto	l1760
  8673  03D0                     l1792:	
  8674  03D0  0873               	movf	strcmp@t0,w
  8675  03D1  00F0               	movwf	?_strcmp
  8676  03D2  01F1               	clrf	?_strcmp+1
  8677  03D3  0875               	movf	strcmp@t1,w
  8678  03D4  02F0               	subwf	?_strcmp,f
  8679  03D5  1C03               	skipc
  8680  03D6  03F1               	decf	?_strcmp+1,f
  8681  03D7  0008               	return
  8682  03D8                     __end_of_strcmp:	
  8683  03D8                     __ptext25:	
  8684 ;; *************** function _printf *****************
  8685 ;; Defined at:
  8686 ;;		line 464 in file "/Applications/microchip/xc8/v1.34/sources/common/doprnt.c"
  8687 ;; Parameters:    Size  Location     Type
  8688 ;;  f               2    2[COMMON] PTR const unsigned char 
  8689 ;;		 -> STR_25(19), STR_24(19), STR_23(19), STR_22(19), 
  8690 ;;		 -> STR_21(8), STR_20(8), STR_19(7), STR_18(9), 
  8691 ;;		 -> STR_17(15), STR_16(13), STR_15(19), STR_14(19), 
  8692 ;;		 -> STR_13(8), STR_12(8), STR_11(8), STR_10(8), 
  8693 ;;		 -> STR_9(8), 
  8694 ;; Auto vars:     Size  Location     Type
  8695 ;;  tmpval          4    0        struct .
  8696 ;;  cp              2    0        PTR const unsigned char 
  8697 ;;  len             2    0        unsigned int 
  8698 ;;  val             2    0        unsigned int 
  8699 ;;  c               1    6[COMMON] char 
  8700 ;;  flag            1    0        unsigned char 
  8701 ;;  prec            1    0        char 
  8702 ;;  ap              1    0        PTR void [1]
  8703 ;;		 -> ?_printf(2), 
  8704 ;; Return value:  Size  Location     Type
  8705 ;;                  2    2[COMMON] int 
  8706 ;; Registers used:
  8707 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8708 ;; Tracked objects:
  8709 ;;		On entry : 0/0
  8710 ;;		On exit  : 0/0
  8711 ;;		Unchanged: 0/0
  8712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8713 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8714 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8715 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8716 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8717 ;;Total ram usage:        5 bytes
  8718 ;; Hardware stack levels used:    1
  8719 ;; Hardware stack levels required when called:    4
  8720 ;; This function calls:
  8721 ;;		_putch
  8722 ;; This function is called by:
  8723 ;;		_setCommandProcess
  8724 ;;		_getCommandProcess
  8725 ;;		_testCommandProcess
  8726 ;;		_COMM_Task
  8727 ;; This function uses a non-reentrant model
  8728 ;;
  8729                           
  8730                           
  8731                           ;psect for function _printf
  8732  03D8                     _printf:	
  8733  03D8                     l1796:	
  8734                           ;incstack = 0
  8735                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8736                           
  8737  03D8                     l1800:	
  8738                           ;doprnt.c: 542: continue;
  8739                           
  8740                           ;doprnt.c: 536: while(c = *f++) {
  8741                           
  8742  03D8  0873               	movf	printf@f+1,w
  8743  03D9  00F5               	movwf	??_printf+1
  8744  03DA  0872               	movf	printf@f,w
  8745  03DB  00F4               	movwf	??_printf
  8746  03DC  0AF2               	incf	printf@f,f
  8747  03DD  1903               	skipnz
  8748  03DE  0AF3               	incf	printf@f+1,f
  8749  03DF  0084               	movwf	4
  8750  03E0  0875               	movf	??_printf+1,w
  8751  03E1  0085               	movwf	5
  8752  03E2  0800               	movf	0,w	;code access
  8753  03E3  00F6               	movwf	printf@c
  8754  03E4  0876               	movf	printf@c,w
  8755  03E5  1903               	btfsc	3,2
  8756  03E6  0008               	return
  8757                           
  8758                           ;doprnt.c: 540: {
  8759                           ;doprnt.c: 541: (putch(c) );
  8760  03E7  246C  3181         	fcall	_putch
  8761  03E9  2BD8               	goto	l1800
  8762  03EA                     __end_of_printf:	
  8763  03EA                     __ptext22:	
  8764 ;; *************** function _oneByte_HexSrtingToBinary *****************
  8765 ;; Defined at:
  8766 ;;		line 165 in file "../src/serialCommand.c"
  8767 ;; Parameters:    Size  Location     Type
  8768 ;;  data            1    wreg     PTR unsigned char 
  8769 ;;		 -> inputCommand(16), 
  8770 ;; Auto vars:     Size  Location     Type
  8771 ;;  data            1    3[COMMON] PTR unsigned char 
  8772 ;;		 -> inputCommand(16), 
  8773 ;;  i               1    2[COMMON] unsigned char 
  8774 ;; Return value:  Size  Location     Type
  8775 ;;                  1    wreg      unsigned char 
  8776 ;; Registers used:
  8777 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  8778 ;; Tracked objects:
  8779 ;;		On entry : 0/0
  8780 ;;		On exit  : 0/0
  8781 ;;		Unchanged: 0/0
  8782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8784 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8785 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8786 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8787 ;;Total ram usage:        4 bytes
  8788 ;; Hardware stack levels used:    1
  8789 ;; Hardware stack levels required when called:    2
  8790 ;; This function calls:
  8791 ;;		Nothing
  8792 ;; This function is called by:
  8793 ;;		_setCommandProcess
  8794 ;; This function uses a non-reentrant model
  8795 ;;
  8796                           
  8797                           
  8798                           ;psect for function _oneByte_HexSrtingToBinary
  8799  03EA                     _oneByte_HexSrtingToBinary:	
  8800                           
  8801                           ;incstack = 0
  8802                           ; Regs used in _oneByte_HexSrtingToBinary: [wreg-fsr1h+status,2+status,0]
  8803                           ;oneByte_HexSrtingToBinary@data stored from wreg
  8804  03EA  00F3               	movwf	oneByte_HexSrtingToBinary@data
  8805                           
  8806                           ;serialCommand.c: 167: for(uint8_t i=0; i<2; i++)
  8807  03EB  01F2               	clrf	oneByte_HexSrtingToBinary@i
  8808  03EC                     l1836:	
  8809                           
  8810                           ;serialCommand.c: 168: {
  8811                           ;serialCommand.c: 169: if(data[i]>='0' && data[i]<='9')
  8812  03EC  0872               	movf	oneByte_HexSrtingToBinary@i,w
  8813  03ED  0773               	addwf	oneByte_HexSrtingToBinary@data,w
  8814  03EE  00F0               	movwf	??_oneByte_HexSrtingToBinary
  8815  03EF  0086               	movwf	6
  8816  03F0  3030               	movlw	48
  8817  03F1  0187               	clrf	7
  8818  03F2  0201               	subwf	1,w
  8819  03F3  0872               	movf	oneByte_HexSrtingToBinary@i,w
  8820  03F4  1C03               	skipc
  8821  03F5  2C09               	goto	L3
  8822  03F6  0773               	addwf	oneByte_HexSrtingToBinary@data,w
  8823  03F7  00F0               	movwf	??_oneByte_HexSrtingToBinary
  8824  03F8  0086               	movwf	6
  8825  03F9  303A               	movlw	58
  8826  03FA  0201               	subwf	1,w
  8827                           
  8828                           ;serialCommand.c: 170: {
  8829                           ;serialCommand.c: 171: data[i] = data[i]-'0';
  8830  03FB  0872               	movf	oneByte_HexSrtingToBinary@i,w
  8831  03FC  1803               	skipnc
  8832  03FD  2C09               	goto	L3
  8833  03FE  0773               	addwf	oneByte_HexSrtingToBinary@data,w
  8834  03FF  00F0               	movwf	??_oneByte_HexSrtingToBinary
  8835  0400  0086               	movwf	6
  8836  0401  0872               	movf	oneByte_HexSrtingToBinary@i,w
  8837  0402  0773               	addwf	oneByte_HexSrtingToBinary@data,w
  8838  0403  00F1               	movwf	??_oneByte_HexSrtingToBinary+1
  8839  0404  0084               	movwf	4
  8840  0405  0185               	clrf	5
  8841  0406  0800               	movf	0,w
  8842  0407  3ED0               	addlw	208
  8843  0408  2C40               	goto	L2
  8844  0409                     L3:	
  8845                           ;serialCommand.c: 173: else if(data[i]>='A' && data[i]<='F')
  8846                           
  8847                           ;serialCommand.c: 172: }
  8848                           
  8849  0409  0773               	addwf	oneByte_HexSrtingToBinary@data,w
  8850  040A  00F0               	movwf	??_oneByte_HexSrtingToBinary
  8851  040B  0086               	movwf	6
  8852  040C  3041               	movlw	65
  8853  040D  0187               	clrf	7
  8854  040E  0201               	subwf	1,w
  8855  040F  0872               	movf	oneByte_HexSrtingToBinary@i,w
  8856  0410  1C03               	skipc
  8857  0411  2C25               	goto	L4
  8858  0412  0773               	addwf	oneByte_HexSrtingToBinary@data,w
  8859  0413  00F0               	movwf	??_oneByte_HexSrtingToBinary
  8860  0414  0086               	movwf	6
  8861  0415  3047               	movlw	71
  8862  0416  0201               	subwf	1,w
  8863                           
  8864                           ;serialCommand.c: 174: {
  8865                           ;serialCommand.c: 175: data[i] = data[i] -'A' +10;
  8866  0417  0872               	movf	oneByte_HexSrtingToBinary@i,w
  8867  0418  1803               	skipnc
  8868  0419  2C25               	goto	L4
  8869  041A  0773               	addwf	oneByte_HexSrtingToBinary@data,w
  8870  041B  00F0               	movwf	??_oneByte_HexSrtingToBinary
  8871  041C  0086               	movwf	6
  8872  041D  0872               	movf	oneByte_HexSrtingToBinary@i,w
  8873  041E  0773               	addwf	oneByte_HexSrtingToBinary@data,w
  8874  041F  00F1               	movwf	??_oneByte_HexSrtingToBinary+1
  8875  0420  0084               	movwf	4
  8876  0421  0185               	clrf	5
  8877  0422  0800               	movf	0,w
  8878  0423  3EC9               	addlw	201
  8879  0424  2C40               	goto	L2
  8880  0425                     L4:	
  8881                           ;serialCommand.c: 177: else if(data[i]>='a' && data[i]<='f')
  8882                           
  8883                           ;serialCommand.c: 176: }
  8884                           
  8885  0425  0773               	addwf	oneByte_HexSrtingToBinary@data,w
  8886  0426  00F0               	movwf	??_oneByte_HexSrtingToBinary
  8887  0427  0086               	movwf	6
  8888  0428  3061               	movlw	97
  8889  0429  0187               	clrf	7
  8890  042A  0201               	subwf	1,w
  8891  042B  0872               	movf	oneByte_HexSrtingToBinary@i,w
  8892  042C  1C03               	skipc
  8893  042D  2C42               	goto	L5
  8894  042E  0773               	addwf	oneByte_HexSrtingToBinary@data,w
  8895  042F  00F0               	movwf	??_oneByte_HexSrtingToBinary
  8896  0430  0086               	movwf	6
  8897  0431  3067               	movlw	103
  8898  0432  0201               	subwf	1,w
  8899                           
  8900                           ;serialCommand.c: 178: {
  8901                           ;serialCommand.c: 179: data[i] = data[i] -'a' +10;
  8902  0433  0872               	movf	oneByte_HexSrtingToBinary@i,w
  8903  0434  1803               	skipnc
  8904  0435  2C42               	goto	L5
  8905  0436  0773               	addwf	oneByte_HexSrtingToBinary@data,w
  8906  0437  00F0               	movwf	??_oneByte_HexSrtingToBinary
  8907  0438  0086               	movwf	6
  8908  0439  0872               	movf	oneByte_HexSrtingToBinary@i,w
  8909  043A  0773               	addwf	oneByte_HexSrtingToBinary@data,w
  8910  043B  00F1               	movwf	??_oneByte_HexSrtingToBinary+1
  8911  043C  0084               	movwf	4
  8912  043D  0185               	clrf	5
  8913  043E  0800               	movf	0,w
  8914  043F  3EA9               	addlw	169
  8915  0440                     L2:	
  8916  0440  0081               	movwf	1
  8917                           
  8918                           ;serialCommand.c: 180: }
  8919  0441  2C47               	goto	l1856
  8920  0442                     L5:	
  8921                           ;serialCommand.c: 181: else
  8922                           ;serialCommand.c: 182: {
  8923                           ;serialCommand.c: 183: data[i] = 0;
  8924                           
  8925  0442  0773               	addwf	oneByte_HexSrtingToBinary@data,w
  8926  0443  00F0               	movwf	??_oneByte_HexSrtingToBinary
  8927  0444  0086               	movwf	6
  8928  0445  0187               	clrf	7
  8929  0446  0181               	clrf	1
  8930  0447                     l1856:	
  8931  0447  3002               	movlw	2
  8932  0448  0AF2               	incf	oneByte_HexSrtingToBinary@i,f
  8933  0449  0272               	subwf	oneByte_HexSrtingToBinary@i,w
  8934  044A  1C03               	skipc
  8935  044B  2BEC               	goto	l1836
  8936                           
  8937                           ;serialCommand.c: 184: }
  8938                           ;serialCommand.c: 185: }
  8939                           ;serialCommand.c: 186: return ((uint8_t)(data[0]<<4)+(uint8_t)data[1]);
  8940  044C  0A73               	incf	oneByte_HexSrtingToBinary@data,w
  8941  044D  0086               	movwf	6
  8942  044E  0187               	clrf	7
  8943  044F  0873               	movf	oneByte_HexSrtingToBinary@data,w
  8944  0450  0084               	movwf	4
  8945  0451  0185               	clrf	5
  8946  0452  0E00               	swapf	0,w
  8947  0453  39F0               	andlw	240
  8948  0454  0701               	addwf	1,w
  8949  0455  0008               	return
  8950  0456                     __end_of_oneByte_HexSrtingToBinary:	
  8951  0456                     __ptext21:	
  8952 ;; *************** function _strlen *****************
  8953 ;; Defined at:
  8954 ;;		line 4 in file "/Applications/microchip/xc8/v1.34/sources/common/strlen.c"
  8955 ;; Parameters:    Size  Location     Type
  8956 ;;  s               2    0[COMMON] PTR const unsigned char 
  8957 ;;		 -> inputCommand(16), CMD_SET_DIRECT(15), 
  8958 ;; Auto vars:     Size  Location     Type
  8959 ;;  cp              2    3[COMMON] PTR const unsigned char 
  8960 ;;		 -> inputCommand(16), CMD_SET_DIRECT(15), 
  8961 ;; Return value:  Size  Location     Type
  8962 ;;                  2    0[COMMON] unsigned int 
  8963 ;; Registers used:
  8964 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8965 ;; Tracked objects:
  8966 ;;		On entry : 0/0
  8967 ;;		On exit  : 0/0
  8968 ;;		Unchanged: 0/0
  8969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8970 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8971 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8972 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8973 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8974 ;;Total ram usage:        5 bytes
  8975 ;; Hardware stack levels used:    1
  8976 ;; Hardware stack levels required when called:    2
  8977 ;; This function calls:
  8978 ;;		Nothing
  8979 ;; This function is called by:
  8980 ;;		_setCommandProcess
  8981 ;; This function uses a non-reentrant model
  8982 ;;
  8983                           
  8984                           
  8985                           ;psect for function _strlen
  8986  0456                     _strlen:	
  8987                           
  8988                           ;incstack = 0
  8989                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  8990  0456  0870               	movf	strlen@s,w
  8991  0457  00F3               	movwf	strlen@cp
  8992  0458  0871               	movf	strlen@s+1,w
  8993  0459  00F4               	movwf	strlen@cp+1
  8994  045A                     l1806:	
  8995  045A  0873               	movf	strlen@cp,w
  8996  045B  0084               	movwf	4
  8997  045C  0874               	movf	strlen@cp+1,w
  8998  045D  0085               	movwf	5
  8999  045E  0012               	moviw fsr0++
  9000  045F  1903               	btfsc	3,2
  9001  0460  2C65               	goto	l1808
  9002  0461  0AF3               	incf	strlen@cp,f
  9003  0462  1903               	skipnz
  9004  0463  0AF4               	incf	strlen@cp+1,f
  9005  0464  2C5A               	goto	l1806
  9006  0465                     l1808:	
  9007  0465  0870               	movf	strlen@s,w
  9008  0466  0273               	subwf	strlen@cp,w
  9009  0467  00F0               	movwf	?_strlen
  9010  0468  0871               	movf	strlen@s+1,w
  9011  0469  3B74               	subwfb	strlen@cp+1,w
  9012  046A  00F1               	movwf	?_strlen+1
  9013  046B  0008               	return
  9014  046C                     __end_of_strlen:	
  9015  046C                     __ptext26:	
  9016 ;; *************** function _putch *****************
  9017 ;; Defined at:
  9018 ;;		line 151 in file "mcc_generated_files/eusart.c"
  9019 ;; Parameters:    Size  Location     Type
  9020 ;;  txData          1    wreg     unsigned char 
  9021 ;; Auto vars:     Size  Location     Type
  9022 ;;  txData          1    1[COMMON] unsigned char 
  9023 ;; Return value:  Size  Location     Type
  9024 ;;		None               void
  9025 ;; Registers used:
  9026 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9027 ;; Tracked objects:
  9028 ;;		On entry : 0/0
  9029 ;;		On exit  : 1F/1
  9030 ;;		Unchanged: 0/0
  9031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9033 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9035 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9036 ;;Total ram usage:        1 bytes
  9037 ;; Hardware stack levels used:    1
  9038 ;; Hardware stack levels required when called:    3
  9039 ;; This function calls:
  9040 ;;		_EUSART_Write
  9041 ;; This function is called by:
  9042 ;;		_printf
  9043 ;; This function uses a non-reentrant model
  9044 ;;
  9045                           
  9046                           
  9047                           ;psect for function _putch
  9048  046C                     _putch:	
  9049                           
  9050                           ;incstack = 0
  9051                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9052                           ;putch@txData stored from wreg
  9053  046C  00F1               	movwf	putch@txData
  9054                           
  9055                           ;eusart.c: 152: EUSART_Write(txData);
  9056  046D  2CF3               	ljmp	_EUSART_Write
  9057  046E                     __end_of_putch:	
  9058  046E                     __ptext20:	
  9059 ;; *************** function _strncmp *****************
  9060 ;; Defined at:
  9061 ;;		line 4 in file "/Applications/microchip/xc8/v1.34/sources/common/strncmp.c"
  9062 ;; Parameters:    Size  Location     Type
  9063 ;;  s1              2    6[COMMON] PTR const unsigned char 
  9064 ;;		 -> inputCommand(16), CMD_SET_DIRECT(15), 
  9065 ;;  s2              2    8[COMMON] PTR const unsigned char 
  9066 ;;		 -> inputCommand(16), STR_7(1), STR_5(5), STR_3(7), 
  9067 ;;		 -> STR_1(7), 
  9068 ;;  len             2   10[COMMON] unsigned int 
  9069 ;; Auto vars:     Size  Location     Type
  9070 ;;		None
  9071 ;; Return value:  Size  Location     Type
  9072 ;;                  2    6[COMMON] int 
  9073 ;; Registers used:
  9074 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  9075 ;; Tracked objects:
  9076 ;;		On entry : 0/0
  9077 ;;		On exit  : 0/0
  9078 ;;		Unchanged: 0/0
  9079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9080 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9082 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9083 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9084 ;;Total ram usage:        7 bytes
  9085 ;; Hardware stack levels used:    1
  9086 ;; Hardware stack levels required when called:    2
  9087 ;; This function calls:
  9088 ;;		Nothing
  9089 ;; This function is called by:
  9090 ;;		_setCommandProcess
  9091 ;;		_COMM_Task
  9092 ;; This function uses a non-reentrant model
  9093 ;;
  9094                           
  9095                           
  9096                           ;psect for function _strncmp
  9097  046E                     _strncmp:	
  9098  046E                     l1824:	
  9099                           ;incstack = 0
  9100                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  9101                           
  9102  046E  3001               	movlw	1
  9103  046F  02FA               	subwf	strncmp@len,f
  9104  0470  3000               	movlw	0
  9105  0471  3BFB               	subwfb	strncmp@len+1,f
  9106  0472  0F7A               	incfsz	strncmp@len,w
  9107  0473  2C77               	goto	l1814
  9108  0474  0A7B               	incf	strncmp@len+1,w
  9109  0475  1903               	btfsc	3,2
  9110  0476  2CA4               	goto	l1826
  9111  0477                     l1814:	
  9112  0477  0876               	movf	strncmp@s1,w
  9113  0478  0084               	movwf	4
  9114  0479  0877               	movf	strncmp@s1+1,w
  9115  047A  0085               	movwf	5
  9116  047B  0012               	moviw fsr0++
  9117  047C  1903               	btfsc	3,2
  9118  047D  2C8C               	goto	l1818
  9119  047E  0878               	movf	strncmp@s2,w
  9120  047F  0084               	movwf	4
  9121  0480  0879               	movf	strncmp@s2+1,w
  9122  0481  0085               	movwf	5
  9123  0482  0800               	movf	0,w	;code access
  9124  0483  00FC               	movwf	??_strncmp
  9125  0484  0876               	movf	strncmp@s1,w
  9126  0485  0084               	movwf	4
  9127  0486  0877               	movf	strncmp@s1+1,w
  9128  0487  0085               	movwf	5
  9129  0488  0800               	movf	0,w	;code access
  9130  0489  067C               	xorwf	??_strncmp,w
  9131  048A  1903               	skipnz
  9132  048B  2C9D               	goto	l1822
  9133  048C                     l1818:	
  9134  048C  0876               	movf	strncmp@s1,w
  9135  048D  0084               	movwf	4
  9136  048E  0877               	movf	strncmp@s1+1,w
  9137  048F  0085               	movwf	5
  9138  0490  0800               	movf	0,w	;code access
  9139  0491  00FC               	movwf	??_strncmp
  9140  0492  0878               	movf	strncmp@s2,w
  9141  0493  0084               	movwf	4
  9142  0494  0879               	movf	strncmp@s2+1,w
  9143  0495  0085               	movwf	5
  9144  0496  0800               	movf	0,w	;code access
  9145  0497  027C               	subwf	??_strncmp,w
  9146  0498  00F6               	movwf	?_strncmp
  9147  0499  01F7               	clrf	?_strncmp+1
  9148  049A  1C03               	skipc
  9149  049B  03F7               	decf	?_strncmp+1,f
  9150  049C  0008               	return
  9151  049D                     l1822:	
  9152  049D  0AF6               	incf	strncmp@s1,f
  9153  049E  1903               	skipnz
  9154  049F  0AF7               	incf	strncmp@s1+1,f
  9155  04A0  0AF8               	incf	strncmp@s2,f
  9156  04A1  1903               	skipnz
  9157  04A2  0AF9               	incf	strncmp@s2+1,f
  9158  04A3  2C6E               	goto	l1824
  9159  04A4                     l1826:	
  9160  04A4  01F6               	clrf	?_strncmp
  9161  04A5  01F7               	clrf	?_strncmp+1
  9162  04A6  0008               	return
  9163  04A7                     __end_of_strncmp:	
  9164  04A7                     __ptext30:	
  9165 ;; *************** function _EUSART_Read *****************
  9166 ;; Defined at:
  9167 ;;		line 112 in file "mcc_generated_files/eusart.c"
  9168 ;; Parameters:    Size  Location     Type
  9169 ;;		None
  9170 ;; Auto vars:     Size  Location     Type
  9171 ;;  readValue       1    0[COMMON] unsigned char 
  9172 ;; Return value:  Size  Location     Type
  9173 ;;                  1    wreg      unsigned char 
  9174 ;; Registers used:
  9175 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9176 ;; Tracked objects:
  9177 ;;		On entry : 1F/0
  9178 ;;		On exit  : 1F/1
  9179 ;;		Unchanged: 0/0
  9180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9182 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9184 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9185 ;;Total ram usage:        1 bytes
  9186 ;; Hardware stack levels used:    1
  9187 ;; Hardware stack levels required when called:    2
  9188 ;; This function calls:
  9189 ;;		Nothing
  9190 ;; This function is called by:
  9191 ;;		_COMM_Task
  9192 ;; This function uses a non-reentrant model
  9193 ;;
  9194                           
  9195                           
  9196                           ;psect for function _EUSART_Read
  9197  04A7                     _EUSART_Read:	
  9198  04A7                     l1896:	
  9199                           ;eusart.c: 115: while (0 == eusartRxCount) {
  9200                           
  9201                           ;incstack = 0
  9202                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  9203                           
  9204  04A7  0842               	movf	_eusartRxCount,w	;volatile
  9205  04A8  1903               	btfsc	3,2
  9206  04A9  2CA7               	goto	l1896
  9207                           
  9208                           ;eusart.c: 116: }
  9209                           ;eusart.c: 118: PIE1bits.RCIE = 0;
  9210  04AA  0021               	movlb	1	; select bank1
  9211  04AB  1290               	bcf	16,5	;volatile
  9212                           
  9213                           ;eusart.c: 120: readValue = eusartRxBuffer[eusartRxTail++];
  9214  04AC  0020               	movlb	0	; select bank0
  9215  04AD  0844               	movf	_eusartRxTail,w
  9216  04AE  3E20               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  9217  04AF  0086               	movwf	6
  9218  04B0  0187               	clrf	7
  9219  04B1  0801               	movf	1,w
  9220  04B2  00F0               	movwf	EUSART_Read@readValue
  9221  04B3  3010               	movlw	16
  9222  04B4  0AC4               	incf	_eusartRxTail,f
  9223                           
  9224                           ;eusart.c: 121: if (sizeof (eusartRxBuffer) <= eusartRxTail) {
  9225  04B5  0244               	subwf	_eusartRxTail,w
  9226  04B6  1803               	btfsc	3,0
  9227                           
  9228                           ;eusart.c: 122: eusartRxTail = 0;
  9229  04B7  01C4               	clrf	_eusartRxTail
  9230                           
  9231                           ;eusart.c: 123: }
  9232                           ;eusart.c: 124: eusartRxCount--;
  9233  04B8  03C2               	decf	_eusartRxCount,f	;volatile
  9234                           
  9235                           ;eusart.c: 125: PIE1bits.RCIE = 1;
  9236  04B9  0021               	movlb	1	; select bank1
  9237  04BA  1690               	bsf	16,5	;volatile
  9238                           
  9239                           ;eusart.c: 127: return readValue;
  9240  04BB  0870               	movf	EUSART_Read@readValue,w
  9241  04BC  0008               	return
  9242  04BD                     __end_of_EUSART_Read:	
  9243  04BD                     __ptext28:	
  9244 ;; *************** function _command_GetnumberofCommands *****************
  9245 ;; Defined at:
  9246 ;;		line 55 in file "../src/serialCommand.c"
  9247 ;; Parameters:    Size  Location     Type
  9248 ;;  commandArray    2    6[COMMON] PTR const struct command
  9249 ;;		 -> commands(28), 
  9250 ;; Auto vars:     Size  Location     Type
  9251 ;;  i               1   11[COMMON] unsigned char 
  9252 ;; Return value:  Size  Location     Type
  9253 ;;                  1    wreg      unsigned char 
  9254 ;; Registers used:
  9255 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9256 ;; Tracked objects:
  9257 ;;		On entry : 0/0
  9258 ;;		On exit  : 1F/0
  9259 ;;		Unchanged: 0/0
  9260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9261 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9262 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9263 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9264 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9265 ;;Total ram usage:        6 bytes
  9266 ;; Hardware stack levels used:    1
  9267 ;; Hardware stack levels required when called:    3
  9268 ;; This function calls:
  9269 ;;		___wmul
  9270 ;; This function is called by:
  9271 ;;		_COMM_Task
  9272 ;; This function uses a non-reentrant model
  9273 ;;
  9274                           
  9275                           
  9276                           ;psect for function _command_GetnumberofCommands
  9277  04BD                     _command_GetnumberofCommands:	
  9278                           
  9279                           ;serialCommand.c: 57: static uint8_t numberofCommands = 0;
  9280                           ;serialCommand.c: 58: uint8_t i = 0;
  9281                           
  9282                           ;incstack = 0
  9283                           ; Regs used in _command_GetnumberofCommands: [wreg-fsr0h+status,2+status,0+pclath+cstack
      +                          ]
  9284  04BD  01FB               	clrf	command_GetnumberofCommands@i
  9285                           
  9286                           ;serialCommand.c: 60: if(numberofCommands==0)
  9287  04BE  0020               	movlb	0	; select bank0
  9288  04BF  0848               	movf	command_GetnumberofCommands@numberofCommands,w
  9289  04C0  1903               	btfsc	3,2
  9290  04C1  2CC4               	goto	l1924
  9291  04C2  2CDF               	goto	l536
  9292  04C3                     l1922:	
  9293                           
  9294                           ;serialCommand.c: 63: {
  9295                           ;serialCommand.c: 64: i++;
  9296  04C3  0AFB               	incf	command_GetnumberofCommands@i,f
  9297  04C4                     l1924:	
  9298  04C4  087B               	movf	command_GetnumberofCommands@i,w
  9299  04C5  00F0               	movwf	___wmul@multiplier
  9300  04C6  3007               	movlw	7
  9301  04C7  01F1               	clrf	___wmul@multiplier+1
  9302  04C8  00F2               	movwf	___wmul@multiplicand
  9303  04C9  01F3               	clrf	___wmul@multiplicand+1
  9304  04CA  2291  3181         	fcall	___wmul
  9305  04CC  0870               	movf	?___wmul,w
  9306  04CD  0776               	addwf	command_GetnumberofCommands@commandArray,w
  9307  04CE  00F8               	movwf	??_command_GetnumberofCommands
  9308  04CF  0871               	movf	?___wmul+1,w
  9309  04D0  3D77               	addwfc	command_GetnumberofCommands@commandArray+1,w
  9310  04D1  00F9               	movwf	??_command_GetnumberofCommands+1
  9311  04D2  3002               	movlw	2
  9312  04D3  0778               	addwf	??_command_GetnumberofCommands,w
  9313  04D4  0084               	movwf	4
  9314  04D5  0879               	movf	??_command_GetnumberofCommands+1,w
  9315  04D6  1803               	skipnc
  9316  04D7  0A79               	incf	??_command_GetnumberofCommands+1,w
  9317  04D8  0085               	movwf	5
  9318  04D9  0012               	moviw fsr0++
  9319  04DA  1D03               	btfss	3,2
  9320  04DB  2CC3               	goto	l1922
  9321                           
  9322                           ;serialCommand.c: 65: }
  9323                           ;serialCommand.c: 66: numberofCommands = i;
  9324  04DC  087B               	movf	command_GetnumberofCommands@i,w
  9325  04DD  0020               	movlb	0	; select bank0
  9326  04DE  00C8               	movwf	command_GetnumberofCommands@numberofCommands
  9327  04DF                     l536:	
  9328                           
  9329                           ;serialCommand.c: 67: }
  9330                           ;serialCommand.c: 68: return numberofCommands;
  9331  04DF  0848               	movf	command_GetnumberofCommands@numberofCommands,w
  9332  04E0  0008               	return
  9333  04E1                     __end_of_command_GetnumberofCommands:	
  9334  04E1                     __ptext23:	
  9335 ;; *************** function _memset *****************
  9336 ;; Defined at:
  9337 ;;		line 8 in file "/Applications/microchip/xc8/v1.34/sources/common/memset.c"
  9338 ;; Parameters:    Size  Location     Type
  9339 ;;  p1              1    wreg     PTR void 
  9340 ;;		 -> inputCommand(16), 
  9341 ;;  c               2    0[COMMON] int 
  9342 ;;  n               2    2[COMMON] unsigned int 
  9343 ;; Auto vars:     Size  Location     Type
  9344 ;;  p1              1    4[COMMON] PTR void 
  9345 ;;		 -> inputCommand(16), 
  9346 ;;  p               1    5[COMMON] PTR unsigned char 
  9347 ;;		 -> inputCommand(16), 
  9348 ;; Return value:  Size  Location     Type
  9349 ;;                  1    wreg      PTR void 
  9350 ;; Registers used:
  9351 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9352 ;; Tracked objects:
  9353 ;;		On entry : 0/0
  9354 ;;		On exit  : 0/0
  9355 ;;		Unchanged: 0/0
  9356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9357 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9358 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9360 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9361 ;;Total ram usage:        6 bytes
  9362 ;; Hardware stack levels used:    1
  9363 ;; Hardware stack levels required when called:    2
  9364 ;; This function calls:
  9365 ;;		Nothing
  9366 ;; This function is called by:
  9367 ;;		_COMM_Task
  9368 ;; This function uses a non-reentrant model
  9369 ;;
  9370                           
  9371                           
  9372                           ;psect for function _memset
  9373  04E1                     _memset:	
  9374                           
  9375                           ;incstack = 0
  9376                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  9377                           ;memset@p1 stored from wreg
  9378  04E1  00F4               	movwf	memset@p1
  9379  04E2  00F5               	movwf	memset@p
  9380  04E3                     l2008:	
  9381  04E3  3001               	movlw	1
  9382  04E4  02F2               	subwf	memset@n,f
  9383  04E5  3000               	movlw	0
  9384  04E6  3BF3               	subwfb	memset@n+1,f
  9385  04E7  0F72               	incfsz	memset@n,w
  9386  04E8  2CEC               	goto	l2004
  9387  04E9  0A73               	incf	memset@n+1,w
  9388  04EA  1903               	btfsc	3,2
  9389  04EB  0008               	return
  9390  04EC                     l2004:	
  9391  04EC  0875               	movf	memset@p,w
  9392  04ED  0086               	movwf	6
  9393  04EE  0187               	clrf	7
  9394  04EF  0870               	movf	memset@c,w
  9395  04F0  0081               	movwf	1
  9396  04F1  0AF5               	incf	memset@p,f
  9397  04F2  2CE3               	goto	l2008
  9398  04F3                     __end_of_memset:	
  9399  04F3                     __ptext27:	
  9400 ;; *************** function _EUSART_Write *****************
  9401 ;; Defined at:
  9402 ;;		line 130 in file "mcc_generated_files/eusart.c"
  9403 ;; Parameters:    Size  Location     Type
  9404 ;;  txData          1    wreg     unsigned char 
  9405 ;; Auto vars:     Size  Location     Type
  9406 ;;  txData          1    0[COMMON] unsigned char 
  9407 ;; Return value:  Size  Location     Type
  9408 ;;		None               void
  9409 ;; Registers used:
  9410 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9411 ;; Tracked objects:
  9412 ;;		On entry : 0/0
  9413 ;;		On exit  : 1F/1
  9414 ;;		Unchanged: 0/0
  9415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9417 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9419 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9420 ;;Total ram usage:        1 bytes
  9421 ;; Hardware stack levels used:    1
  9422 ;; Hardware stack levels required when called:    2
  9423 ;; This function calls:
  9424 ;;		Nothing
  9425 ;; This function is called by:
  9426 ;;		_putch
  9427 ;; This function uses a non-reentrant model
  9428 ;;
  9429                           
  9430                           
  9431                           ;psect for function _EUSART_Write
  9432  04F3                     _EUSART_Write:	
  9433                           
  9434                           ;incstack = 0
  9435                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  9436                           ;EUSART_Write@txData stored from wreg
  9437  04F3  00F0               	movwf	EUSART_Write@txData
  9438  04F4                     l1704:	
  9439                           ;eusart.c: 131: while (0 == eusartTxBufferRemaining) {
  9440                           
  9441  04F4  0020               	movlb	0	; select bank0
  9442  04F5  0845               	movf	_eusartTxBufferRemaining,w	;volatile
  9443  04F6  1903               	btfsc	3,2
  9444  04F7  2CF4               	goto	l1704
  9445                           
  9446                           ;eusart.c: 132: }
  9447                           ;eusart.c: 134: if (0 == PIE1bits.TXIE) {
  9448  04F8  0021               	movlb	1	; select bank1
  9449  04F9  1A10               	btfsc	16,4	;volatile
  9450  04FA  2CFF               	goto	l110
  9451                           
  9452                           ;eusart.c: 135: TX1REG = txData;
  9453  04FB  0870               	movf	EUSART_Write@txData,w
  9454  04FC  0023               	movlb	3	; select bank3
  9455  04FD  009A               	movwf	26	;volatile
  9456                           
  9457                           ;eusart.c: 136: } else {
  9458  04FE  2D0D               	goto	l1718
  9459  04FF                     l110:	
  9460                           
  9461                           ;eusart.c: 137: PIE1bits.TXIE = 0;
  9462  04FF  1210               	bcf	16,4	;volatile
  9463                           
  9464                           ;eusart.c: 138: eusartTxBuffer[eusartTxHead++] = txData;
  9465  0500  0020               	movlb	0	; select bank0
  9466  0501  0846               	movf	_eusartTxHead,w
  9467  0502  3E30               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  9468  0503  0086               	movwf	6
  9469  0504  0187               	clrf	7
  9470  0505  0870               	movf	EUSART_Write@txData,w
  9471  0506  0081               	movwf	1
  9472  0507  3008               	movlw	8
  9473  0508  0AC6               	incf	_eusartTxHead,f
  9474                           
  9475                           ;eusart.c: 139: if (sizeof (eusartTxBuffer) <= eusartTxHead) {
  9476  0509  0246               	subwf	_eusartTxHead,w
  9477  050A  1803               	btfsc	3,0
  9478                           
  9479                           ;eusart.c: 140: eusartTxHead = 0;
  9480  050B  01C6               	clrf	_eusartTxHead
  9481                           
  9482                           ;eusart.c: 141: }
  9483                           ;eusart.c: 142: eusartTxBufferRemaining--;
  9484  050C  03C5               	decf	_eusartTxBufferRemaining,f	;volatile
  9485  050D                     l1718:	
  9486                           
  9487                           ;eusart.c: 143: }
  9488                           ;eusart.c: 144: PIE1bits.TXIE = 1;
  9489  050D  0021               	movlb	1	; select bank1
  9490  050E  1610               	bsf	16,4	;volatile
  9491  050F  0008               	return
  9492  0510                     __end_of_EUSART_Write:	
  9493                           
  9494                           	psect	swtext2
  9495  051A                     __pswtext2:	
  9496  051A                     S2220:	
  9497  051A  3182  2AD2         	ljmp	l1970
  9498  051C  3182  2AD7         	ljmp	l1972
  9499  051E  3182  2ADC         	ljmp	l1974
  9500  0520  3182  2AE1         	ljmp	l1976
  9501  0522  3182  2AE6         	ljmp	l1978
  9502                           
  9503                           	psect	text18
  9504  0000                     __ptext18:	
  9505 ;; *************** function _ledSendByte *****************
  9506 ;; Defined at:
  9507 ;;		line 109 in file "../src/LED.c"
  9508 ;; Parameters:    Size  Location     Type
  9509 ;;  data            1    wreg     unsigned char 
  9510 ;; Auto vars:     Size  Location     Type
  9511 ;;  data            1    1[COMMON] unsigned char 
  9512 ;; Return value:  Size  Location     Type
  9513 ;;		None               void
  9514 ;; Registers used:
  9515 ;;		wreg, status,2, status,0, pclath, cstack
  9516 ;; Tracked objects:
  9517 ;;		On entry : 0/0
  9518 ;;		On exit  : 1F/4
  9519 ;;		Unchanged: 0/0
  9520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9522 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9524 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9525 ;;Total ram usage:        1 bytes
  9526 ;; Hardware stack levels used:    1
  9527 ;; Hardware stack levels required when called:    3
  9528 ;; This function calls:
  9529 ;;		_SPI_Exchange8bit
  9530 ;; This function is called by:
  9531 ;;		_LED_Test
  9532 ;;		_ledSetColor
  9533 ;; This function uses a non-reentrant model
  9534 ;;
  9535                           
  9536  0000                     _ledSendByte:	
  9537                           ;psect for function _ledSendByte
  9538                           
  9539  0000                     __end_of_ledSendByte:	
  9540                           ;LED.c: 147: SPI_Exchange8bit(data);
  9541                           
  9542                           ;incstack = 0
  9543                           ; Regs used in _ledSendByte: [wreg+status,2+status,0+pclath+cstack]
  9544                           ;ledSendByte@data stored from wreg
  9545                           
  9546                           
  9547                           	psect	intentry
  9548  0004                     __pintentry:	
  9549 ;; *************** function _INTERRUPT_InterruptManager *****************
  9550 ;; Defined at:
  9551 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  9552 ;; Parameters:    Size  Location     Type
  9553 ;;		None
  9554 ;; Auto vars:     Size  Location     Type
  9555 ;;		None
  9556 ;; Return value:  Size  Location     Type
  9557 ;;		None               void
  9558 ;; Registers used:
  9559 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9560 ;; Tracked objects:
  9561 ;;		On entry : 0/0
  9562 ;;		On exit  : 18/0
  9563 ;;		Unchanged: 0/0
  9564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9569 ;;Total ram usage:        0 bytes
  9570 ;; Hardware stack levels used:    1
  9571 ;; Hardware stack levels required when called:    1
  9572 ;; This function calls:
  9573 ;;		_EUSART_Receive_ISR
  9574 ;;		_EUSART_Transmit_ISR
  9575 ;;		_PIN_MANAGER_IOC
  9576 ;; This function is called by:
  9577 ;;		Interrupt level 1
  9578 ;; This function uses a non-reentrant model
  9579 ;;
  9580                           
  9581  0004                     _INTERRUPT_InterruptManager:	
  9582                           
  9583                           ;incstack = 0
  9584                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  9585  0004  3180               	pagesel	$
  9586                           
  9587                           ;interrupt_manager.c: 54: if (PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1) {
  9588  0005  0021               	movlb	1	; select bank1
  9589  0006  1E90               	btfss	16,5	;volatile
  9590  0007  280E               	goto	i1l145
  9591  0008  0020               	movlb	0	; select bank0
  9592  0009  1E90               	btfss	16,5	;volatile
  9593  000A  280E               	goto	i1l145
  9594                           
  9595                           ;interrupt_manager.c: 55: EUSART_Receive_ISR();
  9596  000B  3187  27A2         	fcall	_EUSART_Receive_ISR
  9597                           
  9598                           ;interrupt_manager.c: 56: } else if (PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1) {
  9599  000D  0009               	retfie
  9600  000E                     i1l145:	
  9601  000E  0021               	movlb	1	; select bank1
  9602  000F  1E10               	btfss	16,4	;volatile
  9603  0010  2817               	goto	i1l147
  9604  0011  0020               	movlb	0	; select bank0
  9605  0012  1E10               	btfss	16,4	;volatile
  9606  0013  2817               	goto	i1l147
  9607                           
  9608                           ;interrupt_manager.c: 57: EUSART_Transmit_ISR();
  9609  0014  3187  278C         	fcall	_EUSART_Transmit_ISR
  9610                           
  9611                           ;interrupt_manager.c: 58: } else if (INTCONbits.IOCIE == 1 && INTCONbits.IOCIF == 1) {
  9612  0016  0009               	retfie
  9613  0017                     i1l147:	
  9614  0017  198B               	btfsc	11,3	;volatile
  9615  0018  1C0B               	btfss	11,0	;volatile
  9616  0019  0009               	retfie
  9617                           
  9618                           ;interrupt_manager.c: 59: PIN_MANAGER_IOC();
  9619  001A  3187  2768         	fcall	_PIN_MANAGER_IOC
  9620                           
  9621                           ;interrupt_manager.c: 62: INTCONbits.IOCIF = 0;
  9622  001C  100B               	bcf	11,0	;volatile
  9623  001D  0009               	retfie
  9624  001E                     __end_of_INTERRUPT_InterruptManager:	
  9625                           
  9626                           	psect	text32
  9627  0768                     __ptext32:	
  9628 ;; *************** function _PIN_MANAGER_IOC *****************
  9629 ;; Defined at:
  9630 ;;		line 99 in file "mcc_generated_files/pin_manager.c"
  9631 ;; Parameters:    Size  Location     Type
  9632 ;;		None
  9633 ;; Auto vars:     Size  Location     Type
  9634 ;;		None
  9635 ;; Return value:  Size  Location     Type
  9636 ;;		None               void
  9637 ;; Registers used:
  9638 ;;		None
  9639 ;; Tracked objects:
  9640 ;;		On entry : 1E/1
  9641 ;;		On exit  : 1F/7
  9642 ;;		Unchanged: 0/0
  9643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9648 ;;Total ram usage:        0 bytes
  9649 ;; Hardware stack levels used:    1
  9650 ;; This function calls:
  9651 ;;		Nothing
  9652 ;; This function is called by:
  9653 ;;		_INTERRUPT_InterruptManager
  9654 ;; This function uses a non-reentrant model
  9655 ;;
  9656                           
  9657                           
  9658                           ;psect for function _PIN_MANAGER_IOC
  9659  0768                     _PIN_MANAGER_IOC:	
  9660                           
  9661                           ;pin_manager.c: 100: if ((IOCBP6 == 1) && (IOCBF6 == 1)) {
  9662                           
  9663                           ;incstack = 0
  9664                           ; Regs used in _PIN_MANAGER_IOC: []
  9665  0768  0027               	movlb	7	; select bank7
  9666  0769  1B14               	btfsc	20,6	;volatile
  9667  076A  1F16               	btfss	22,6	;volatile
  9668  076B  2F6E               	goto	i1l264
  9669                           
  9670                           ;pin_manager.c: 104: IOCBF6 = 0;
  9671  076C  1316               	bcf	22,6	;volatile
  9672                           
  9673                           ;pin_manager.c: 105: } else if ((IOCBP7 == 1) && (IOCBF7 == 1)) {
  9674  076D  0008               	return
  9675  076E                     i1l264:	
  9676  076E  1B94               	btfsc	20,7	;volatile
  9677  076F  1F96               	btfss	22,7	;volatile
  9678  0770  2F73               	goto	i1l266
  9679                           
  9680                           ;pin_manager.c: 109: IOCBF7 = 0;
  9681  0771  1396               	bcf	22,7	;volatile
  9682                           
  9683                           ;pin_manager.c: 110: } else if ((IOCCP3 == 1) && (IOCCF3 == 1)) {
  9684  0772  0008               	return
  9685  0773                     i1l266:	
  9686  0773  1997               	btfsc	23,3	;volatile
  9687  0774  1D99               	btfss	25,3	;volatile
  9688  0775  2F78               	goto	i1l268
  9689                           
  9690                           ;pin_manager.c: 114: IOCCF3 = 0;
  9691  0776  1199               	bcf	25,3	;volatile
  9692                           
  9693                           ;pin_manager.c: 115: } else if ((IOCCP4 == 1) && (IOCCF4 == 1)) {
  9694  0777  0008               	return
  9695  0778                     i1l268:	
  9696  0778  1A17               	btfsc	23,4	;volatile
  9697  0779  1E19               	btfss	25,4	;volatile
  9698  077A  2F7D               	goto	i1l270
  9699                           
  9700                           ;pin_manager.c: 119: IOCCF4 = 0;
  9701  077B  1219               	bcf	25,4	;volatile
  9702                           
  9703                           ;pin_manager.c: 120: } else if ((IOCCP5 == 1) && (IOCCF5 == 1)) {
  9704  077C  0008               	return
  9705  077D                     i1l270:	
  9706  077D  1A97               	btfsc	23,5	;volatile
  9707  077E  1E99               	btfss	25,5	;volatile
  9708  077F  2F82               	goto	i1l272
  9709                           
  9710                           ;pin_manager.c: 124: IOCCF5 = 0;
  9711  0780  1299               	bcf	25,5	;volatile
  9712                           
  9713                           ;pin_manager.c: 125: } else if ((IOCCP6 == 1) && (IOCCF6 == 1)) {
  9714  0781  0008               	return
  9715  0782                     i1l272:	
  9716  0782  1B17               	btfsc	23,6	;volatile
  9717  0783  1F19               	btfss	25,6	;volatile
  9718  0784  2F87               	goto	i1l274
  9719                           
  9720                           ;pin_manager.c: 129: IOCCF6 = 0;
  9721  0785  1319               	bcf	25,6	;volatile
  9722                           
  9723                           ;pin_manager.c: 130: } else if ((IOCCP7 == 1) && (IOCCF7 == 1)) {
  9724  0786  0008               	return
  9725  0787                     i1l274:	
  9726  0787  1B97               	btfsc	23,7	;volatile
  9727  0788  1F99               	btfss	25,7	;volatile
  9728  0789  0008               	return
  9729                           
  9730                           ;pin_manager.c: 134: IOCCF7 = 0;
  9731  078A  1399               	bcf	25,7	;volatile
  9732  078B  0008               	return
  9733  078C                     __end_of_PIN_MANAGER_IOC:	
  9734                           
  9735                           	psect	text33
  9736  078C                     __ptext33:	
  9737 ;; *************** function _EUSART_Transmit_ISR *****************
  9738 ;; Defined at:
  9739 ;;		line 155 in file "mcc_generated_files/eusart.c"
  9740 ;; Parameters:    Size  Location     Type
  9741 ;;		None
  9742 ;; Auto vars:     Size  Location     Type
  9743 ;;		None
  9744 ;; Return value:  Size  Location     Type
  9745 ;;		None               void
  9746 ;; Registers used:
  9747 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9748 ;; Tracked objects:
  9749 ;;		On entry : 1F/0
  9750 ;;		On exit  : 1E/0
  9751 ;;		Unchanged: 0/0
  9752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9757 ;;Total ram usage:        0 bytes
  9758 ;; Hardware stack levels used:    1
  9759 ;; This function calls:
  9760 ;;		Nothing
  9761 ;; This function is called by:
  9762 ;;		_INTERRUPT_InterruptManager
  9763 ;; This function uses a non-reentrant model
  9764 ;;
  9765                           
  9766                           
  9767                           ;psect for function _EUSART_Transmit_ISR
  9768  078C                     _EUSART_Transmit_ISR:	
  9769                           
  9770                           ;eusart.c: 158: if (sizeof (eusartTxBuffer) > eusartTxBufferRemaining) {
  9771                           
  9772                           ;incstack = 0
  9773                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  9774  078C  3008               	movlw	8
  9775  078D  0245               	subwf	_eusartTxBufferRemaining,w
  9776  078E  1803               	skipnc
  9777  078F  2F9F               	goto	i1l122
  9778                           
  9779                           ;eusart.c: 159: TX1REG = eusartTxBuffer[eusartTxTail++];
  9780  0790  0847               	movf	_eusartTxTail,w
  9781  0791  3E30               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  9782  0792  0086               	movwf	6
  9783  0793  0187               	clrf	7
  9784  0794  0801               	movf	1,w
  9785  0795  0023               	movlb	3	; select bank3
  9786  0796  009A               	movwf	26	;volatile
  9787  0797  0020               	movlb	0	; select bank0
  9788  0798  3008               	movlw	8
  9789  0799  0AC7               	incf	_eusartTxTail,f
  9790                           
  9791                           ;eusart.c: 160: if (sizeof (eusartTxBuffer) <= eusartTxTail) {
  9792  079A  0247               	subwf	_eusartTxTail,w
  9793  079B  1803               	btfsc	3,0
  9794                           
  9795                           ;eusart.c: 161: eusartTxTail = 0;
  9796  079C  01C7               	clrf	_eusartTxTail
  9797                           
  9798                           ;eusart.c: 162: }
  9799                           ;eusart.c: 163: eusartTxBufferRemaining++;
  9800  079D  0AC5               	incf	_eusartTxBufferRemaining,f	;volatile
  9801                           
  9802                           ;eusart.c: 164: } else {
  9803  079E  0008               	return
  9804  079F                     i1l122:	
  9805                           
  9806                           ;eusart.c: 165: PIE1bits.TXIE = 0;
  9807  079F  0021               	movlb	1	; select bank1
  9808  07A0  1210               	bcf	16,4	;volatile
  9809  07A1  0008               	return
  9810  07A2                     __end_of_EUSART_Transmit_ISR:	
  9811                           
  9812                           	psect	text34
  9813  07A2                     __ptext34:	
  9814 ;; *************** function _EUSART_Receive_ISR *****************
  9815 ;; Defined at:
  9816 ;;		line 169 in file "mcc_generated_files/eusart.c"
  9817 ;; Parameters:    Size  Location     Type
  9818 ;;		None
  9819 ;; Auto vars:     Size  Location     Type
  9820 ;;		None
  9821 ;; Return value:  Size  Location     Type
  9822 ;;		None               void
  9823 ;; Registers used:
  9824 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9825 ;; Tracked objects:
  9826 ;;		On entry : 1F/0
  9827 ;;		On exit  : 1F/0
  9828 ;;		Unchanged: 0/0
  9829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9834 ;;Total ram usage:        0 bytes
  9835 ;; Hardware stack levels used:    1
  9836 ;; This function calls:
  9837 ;;		Nothing
  9838 ;; This function is called by:
  9839 ;;		_INTERRUPT_InterruptManager
  9840 ;; This function uses a non-reentrant model
  9841 ;;
  9842                           
  9843                           
  9844                           ;psect for function _EUSART_Receive_ISR
  9845  07A2                     _EUSART_Receive_ISR:	
  9846                           
  9847                           ;eusart.c: 170: if (1 == RC1STAbits.OERR) {
  9848                           
  9849                           ;incstack = 0
  9850                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  9851  07A2  0023               	movlb	3	; select bank3
  9852  07A3  1C9D               	btfss	29,1	;volatile
  9853  07A4  2FA7               	goto	i1l2026
  9854                           
  9855                           ;eusart.c: 173: RC1STAbits.CREN = 0;
  9856  07A5  121D               	bcf	29,4	;volatile
  9857                           
  9858                           ;eusart.c: 174: RC1STAbits.CREN = 1;
  9859  07A6  161D               	bsf	29,4	;volatile
  9860  07A7                     i1l2026:	
  9861                           
  9862                           ;eusart.c: 175: }
  9863                           ;eusart.c: 178: eusartRxBuffer[eusartRxHead++] = RC1REG;
  9864  07A7  0020               	movlb	0	; select bank0
  9865  07A8  0843               	movf	_eusartRxHead,w
  9866  07A9  3E20               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  9867  07AA  0086               	movwf	6
  9868  07AB  0187               	clrf	7
  9869  07AC  0023               	movlb	3	; select bank3
  9870  07AD  0819               	movf	25,w	;volatile
  9871  07AE  0081               	movwf	1
  9872  07AF  0020               	movlb	0	; select bank0
  9873  07B0  3010               	movlw	16
  9874  07B1  0AC3               	incf	_eusartRxHead,f
  9875                           
  9876                           ;eusart.c: 179: if (sizeof (eusartRxBuffer) <= eusartRxHead) {
  9877  07B2  0243               	subwf	_eusartRxHead,w
  9878  07B3  1803               	btfsc	3,0
  9879                           
  9880                           ;eusart.c: 180: eusartRxHead = 0;
  9881  07B4  01C3               	clrf	_eusartRxHead
  9882                           
  9883                           ;eusart.c: 181: }
  9884                           ;eusart.c: 182: eusartRxCount++;
  9885  07B5  0AC2               	incf	_eusartRxCount,f	;volatile
  9886  07B6  0008               	return
  9887  07B7                     __end_of_EUSART_Receive_ISR:	
  9888  007E                     btemp	set	126	;btemp
  9889  007E                     wtemp	set	126
  9890  007E                     wtemp0	set	126
  9891  0080                     wtemp1	set	128
  9892  0082                     wtemp2	set	130
  9893  0084                     wtemp3	set	132
  9894  0086                     wtemp4	set	134
  9895  0088                     wtemp5	set	136
  9896  007F                     wtemp6	set	127
  9897  007E                     ttemp	set	126
  9898  007E                     ttemp0	set	126
  9899  0081                     ttemp1	set	129
  9900  0084                     ttemp2	set	132
  9901  0087                     ttemp3	set	135
  9902  007F                     ttemp4	set	127
  9903  007E                     ltemp	set	126
  9904  007E                     ltemp0	set	126
  9905  0082                     ltemp1	set	130
  9906  0086                     ltemp2	set	134
  9907  0080                     ltemp3	set	128


Data Sizes:
    Strings     216
    Constant    144
    Data        0
    BSS         57
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      6      63
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           32      0       0

Pointer List with Targets:

    Absolute function$0	PTR unsigned char  size(1) Largest target is 16
		 -> inputCommand(BANK0[16]), 

    S902$2$0	PTR unsigned char  size(1) Largest target is 16
		 -> inputCommand(BANK0[16]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 16
		 -> inputCommand(BANK0[16]), STR_7(CODE[1]), STR_5(CODE[5]), STR_3(CODE[7]), 
		 -> STR_1(CODE[7]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 16
		 -> inputCommand(BANK0[16]), CMD_SET_DIRECT(CODE[15]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 16
		 -> inputCommand(BANK0[16]), CMD_SET_DIRECT(CODE[15]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 16
		 -> inputCommand(BANK0[16]), CMD_SET_DIRECT(CODE[15]), 

    strcmp@s2	PTR const unsigned char  size(1) Largest target is 16
		 -> inputCommand(BANK0[16]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 16
		 -> CMD_TEST_SRAM(CODE[12]), CMD_TEST_LED(CODE[11]), CMD_GET_STATE(CODE[14]), CMD_SET_PARTY(CODE[15]), 
		 -> CMD_SET_XMAS(CODE[14]), CMD_SET_STARRY(CODE[16]), CMD_SET_OFF(CODE[13]), 

    memset@p1	PTR void  size(1) Largest target is 16
		 -> inputCommand(BANK0[16]), 

    memset@p	PTR unsigned char  size(1) Largest target is 16
		 -> inputCommand(BANK0[16]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), STR_22(CODE[19]), 
		 -> STR_21(CODE[8]), STR_20(CODE[8]), STR_19(CODE[7]), STR_18(CODE[9]), 
		 -> STR_17(CODE[15]), STR_16(CODE[13]), STR_15(CODE[19]), STR_14(CODE[19]), 
		 -> STR_13(CODE[8]), STR_12(CODE[8]), STR_11(CODE[8]), STR_10(CODE[8]), 
		 -> STR_9(CODE[8]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 

    sp__memset	PTR void  size(1) Largest target is 16
		 -> inputCommand(BANK0[16]), 

    oneByte_HexSrtingToBinary@data	PTR unsigned char  size(1) Largest target is 16
		 -> inputCommand(BANK0[16]), 

    testCommandProcess@input	PTR unsigned char  size(1) Largest target is 16
		 -> inputCommand(BANK0[16]), 

    getCommandProcess@input	PTR unsigned char  size(1) Largest target is 16
		 -> inputCommand(BANK0[16]), 

    setCommandProcess@input	PTR unsigned char  size(1) Largest target is 16
		 -> inputCommand(BANK0[16]), 

    command_GetnumberofCommands@commandArray.helpMessage	PTR const unsigned char  size(2) Largest target is 46
		 -> STR_8(CODE[1]), STR_6(CODE[34]), STR_4(CODE[30]), STR_2(CODE[46]), 

    command_GetnumberofCommands@commandArray.execute	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), testCommandProcess(), getCommandProcess(), setCommandProcess(), 

    command_GetnumberofCommands@commandArray.name	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_7(CODE[1]), STR_5(CODE[5]), STR_3(CODE[7]), STR_1(CODE[7]), 

    command_GetnumberofCommands@commandArray	PTR const struct commandStruct size(2) Largest target is 28
		 -> commands(CODE[28]), 

    command_GetMinimumNameLength@commandArray.helpMessage	PTR const unsigned char  size(2) Largest target is 46
		 -> STR_8(CODE[1]), STR_6(CODE[34]), STR_4(CODE[30]), STR_2(CODE[46]), 

    command_GetMinimumNameLength@commandArray.execute	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), testCommandProcess(), getCommandProcess(), setCommandProcess(), 

    command_GetMinimumNameLength@commandArray.name	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_7(CODE[1]), STR_5(CODE[5]), STR_3(CODE[7]), STR_1(CODE[7]), 

    S902commandStruct$helpMessage	PTR const unsigned char  size(2) Largest target is 46
		 -> STR_8(CODE[1]), STR_6(CODE[34]), STR_4(CODE[30]), STR_2(CODE[46]), 

    commands.helpMessage	PTR const unsigned char  size(2) Largest target is 46
		 -> STR_8(CODE[1]), STR_6(CODE[34]), STR_4(CODE[30]), STR_2(CODE[46]), 

    S902commandStruct$execute	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), testCommandProcess(), getCommandProcess(), setCommandProcess(), 

    commands.execute	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 0
		 -> Absolute function(), testCommandProcess(), getCommandProcess(), setCommandProcess(), 

    S902commandStruct$name	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_7(CODE[1]), STR_5(CODE[5]), STR_3(CODE[7]), STR_1(CODE[7]), 

    commands.name	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_7(CODE[1]), STR_5(CODE[5]), STR_3(CODE[7]), STR_1(CODE[7]), 


Critical Paths under _main in COMMON

    _SYSTEM_Initialize->_PIN_MANAGER_Initialize
    _LED_Task->_ledSetColor
    _ledSetColor->_ledSendByte
    _COMM_Task->_getCommandProcess
    _COMM_Task->_setCommandProcess
    _COMM_Task->_testCommandProcess
    _LED_Test->_ledSendByte
    _ledSendByte->_SPI_Exchange8bit
    _setCommandProcess->_strncmp
    _strncmp->___wmul
    _printf->_putch
    _putch->_EUSART_Write
    _command_GetnumberofCommands->___wmul

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_COMM_Task

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   14784
                                              3 BANK0      3     3      0
                          _COMM_Task
                           _LED_Task
                           _LED_Test
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      15
                    _ADC1_Initialize
                    _CLC4_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                     _SPI_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (3) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_Task                                             4     4      0     383
                                              5 COMMON     4     4      0
                        _ledSetColor
 ---------------------------------------------------------------------------------
 (2) _ledSetColor                                          3     0      3     291
                                              2 COMMON     3     0      3
                        _ledSendByte
 ---------------------------------------------------------------------------------
 (1) _COMM_Task                                            3     3      0   14206
                                              0 BANK0      3     3      0
                   Absolute function *
                        _EUSART_Read
                             ___wmul
        _command_GetnumberofCommands
                  _getCommandProcess *
                             _memset
                             _printf
                  _setCommandProcess *
                            _strncmp
                 _testCommandProcess *
 ---------------------------------------------------------------------------------
 (2) _testCommandProcess                                   1     0      1    2743
                                             13 COMMON     1     0      1
                           _LED_Test
                             ___wmul (ARG)
                             _printf
                             _strcmp
 ---------------------------------------------------------------------------------
 (1) _LED_Test                                             5     5      0     180
                                              2 COMMON     5     5      0
                        _ledSendByte
 ---------------------------------------------------------------------------------
 (2) _ledSendByte                                          1     1      0      44
                                              1 COMMON     1     1      0
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (3) _SPI_Exchange8bit                                     1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _setCommandProcess                                    1     0      1    4251
                                             13 COMMON     1     0      1
                             ___wmul (ARG)
          _oneByte_HexSrtingToBinary
                             _printf
                             _strcmp
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                              7     1      6     518
                                              6 COMMON     7     1      6
                             ___wmul (ARG)
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _strlen                                               5     3      2     282
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (3) _oneByte_HexSrtingToBinary                            4     4      0     776
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (2) _memset                                               6     2      4     254
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _getCommandProcess                                    1     0      1    2498
                                             13 COMMON     1     0      1
                             ___wmul (ARG)
                             _printf
                             _strcmp
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     3      3    1277
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (3) _printf                                              18    16      2    1199
                                              2 COMMON     5     3      2
                              _putch
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      66
                                              1 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (5) _EUSART_Write                                         1     1      0      44
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _command_GetnumberofCommands                          6     4      2    1270
                                              6 COMMON     6     4      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1138
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read                                          1     1      0      24
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) Absolute function(Fake)                               1     0      1       0
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0       0
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (7) _PIN_MANAGER_IOC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _COMM_Task
     Absolute function(Fake) *
     _EUSART_Read *
     ___wmul *
     _command_GetnumberofCommands *
       ___wmul
     _getCommandProcess *
       ___wmul (ARG)
       _printf (ARG)
         _putch
           _EUSART_Write
       _strcmp (ARG)
     _memset *
     _printf *
       _putch
         _EUSART_Write
     _setCommandProcess *
       ___wmul (ARG)
       _oneByte_HexSrtingToBinary (ARG)
       _printf (ARG)
         _putch
           _EUSART_Write
       _strcmp (ARG)
       _strlen (ARG)
       _strncmp (ARG)
         ___wmul (ARG)
         _strlen (ARG)
     _strncmp *
       ___wmul (ARG)
       _strlen (ARG)
     _testCommandProcess *
       _LED_Test
         _ledSendByte
           _SPI_Exchange8bit
       ___wmul (ARG)
       _printf (ARG)
         _putch
           _EUSART_Write
       _strcmp (ARG)
   _LED_Task
     _ledSetColor
       _ledSendByte
         _SPI_Exchange8bit
   _LED_Test
     _ledSendByte
       _SPI_Exchange8bit
   _SYSTEM_Initialize
     _ADC1_Initialize
     _CLC4_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM3_Initialize
     _SPI_Initialize
     _TMR2_Initialize
       _TMR2_Start

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR
   _PIN_MANAGER_IOC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3E0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6      3F       5       78.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      4D      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           20      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              20      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      4D      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Oct 17 12:33:40 2015

                             _SPI_Initialize 019A                                            pc 0002  
                                __CFG_CP$OFF 0000                          ___wmul@multiplicand 0072  
                                __CFG_LVP$ON 0000                                          l110 04FF  
                                        l309 0110                                          l181 0149  
                                        l435 00D1                                          l445 000B  
                                        l455 0004                                          l536 04DF  
                       ??_testCommandProcess 007E                                          l598 01F6  
                                        _GIE 005F                                          u290 0198  
                            _TMR2_Initialize 01A0                                 __CFG_BORV$LO 0000  
                                        wreg 0009                                 __CFG_IESO$ON 0000  
                                       S2220 051A                                         S2218 0510  
                               ?_EUSART_Read 0070                                 __CFG_ZCD$OFF 0000  
                                       l2004 04EC                                         l2008 04E3  
                                       l2120 0213                                         l2112 0204  
                                       l2040 0096                                         l2114 0207  
                                       l2050 009C                                         l2132 027F  
                                       l2124 025C                                         l2108 01FC  
                                       l1076 01CB                                         l2134 0282  
                                       l2128 0271                                         l2056 00C5  
                                       l2138 0287                                         l2076 00FD  
                                       l2068 00D4                                         l1364 01C0  
                                       l2172 002F                                         l2086 00FF  
                                       l1704 04F4                                         l1800 03D8  
                                       l2096 01E1                                         l1730 0001  
                                       l1732 0041          __end_of_command_GetnumberofCommands 04E1  
                                       l1718 050D                                         l1806 045A  
                                       l1822 049D                                         l1814 0477  
                _command_GetnumberofCommands 04BD                                         l1760 039C  
                                       l1808 0465                                         l1824 046E  
                                       l1744 0043                                         l1922 04C3  
                                       l1826 04A4                                         l1818 048C  
                                       l1738 0042                                         l1914 0000  
                                       l1924 04C4                                         l1836 03EC  
                                       l1748 0079                                         l1870 0299  
                                       l1782 03C9                                         l1942 0327  
                                       l1792 03D0                                         l1856 0447  
                                       l1936 0313                                         l1866 0293  
                                       l1778 03C1                                         l1962 0392  
                                       l1954 034F                                         l1970 02D2  
                                       l1796 03D8                                         l1964 0397  
                                       l1948 033B                                         l1980 02EB  
                                       l1972 02D7                                         l1974 02DC  
                                       l1896 04A7                                         l1976 02E1  
                                       l1984 02F0                                         l1978 02E6  
                                       l1986 02FB                                         l1996 02B4  
                                       STR_1 075C                                         STR_2 0690  
                                       STR_3 0755                                         STR_4 06E0  
                                       STR_5 0763                                         STR_6 06BE  
                                       STR_7 0710                                         STR_8 0710  
                                       STR_9 0736                                         _LATA 010C  
                                       _LATB 010D                                         _LATC 010E  
                                       u1527 003A                                         u1537 006D  
                                       _T2PR 001B                           __size_of_COMM_Task 00C4  
                                       _PLLR 04D6                                         _WPUB 020D  
                                       _WPUC 020E                                 __CFG_WRT$OFF 0000  
                              __CFG_FCMEN$ON 0000                                         _main 002A  
                                       fsr0h 0005                                         fsr1h 0007  
                                       fsr0l 0004                                         indf0 0000  
                                       indf1 0001                                         fsr1l 0006  
                                       btemp 007E                                __CFG_BOREN$ON 0000  
                                       ltemp 007E                                         start 001E  
                                       ttemp 007E                                         wtemp 007E  
                     __end_of_SPI_Initialize 01A0                                __CFG_MCLRE$ON 0000  
                              __CFG_PLLEN$ON 0000                                ?_EUSART_Write 0070  
             __size_of_OSCILLATOR_Initialize 0008                             __end_of_LED_Task 010B  
                           __end_of_LED_Test 0095                __end_of_OSCILLATOR_Initialize 014C  
                       __end_of_CMD_TEST_LED 0690                                        ?_main 0070  
                       __end_of_CMD_SET_XMAS 066C                                        STR_10 0736  
                                      STR_11 0736                                        STR_12 0736  
                                      STR_20 0746                                        STR_13 0736  
                                      STR_21 073E                                        STR_22 06FE  
                                      STR_14 06FE                                        STR_23 06FE  
                                      STR_15 06FE                                        STR_24 06FE  
                                      STR_16 0720                                        STR_25 06FE  
                                      STR_17 0711                                __CFG_WDTE$OFF 0000  
                                      STR_18 072D                                        STR_19 074E  
                                      _T2CON 001C                                        _T2HLT 001D  
                                      i1l122 079F                                        _T2TMR 001A  
                                      i1l145 000E                                        _T2RST 001F  
                                      i1l147 0017                                        i1l270 077D  
                                      i1l272 0782                                        i1l264 076E  
                                      i1l274 0787                                        i1l266 0773  
                                      i1l268 0778                                        _TRISA 008C  
                                      _TRISB 008D                                        _TRISC 008E  
                                      _RXPPS 0E24                 command_GetnumberofCommands@i 007B  
                          ??_CLC4_Initialize 0070                      COMM_Task@receiveCounter 003F  
                    __end_of_PIN_MANAGER_IOC 078C                                  ?_TMR2_Start 0070  
                                      _putch 046C                oneByte_HexSrtingToBinary@data 0073  
                    __end_of_PWM3_Initialize 01CB                                        pclath 000A  
                                      ltemp0 007E                                        ltemp1 0082  
                                      ltemp2 0086                                        ltemp3 0080  
                                      ttemp0 007E                                        ttemp1 0081  
                                      ttemp2 0084                                        ttemp3 0087  
                                      ttemp4 007F                                        status 0003  
                                      wtemp0 007E                                        wtemp1 0080  
                                      wtemp2 0082                                        wtemp3 0084  
                                      wtemp4 0086                                        wtemp5 0088  
                                      wtemp6 007F  command_GetnumberofCommands@numberofCommands 0048  
                      __end_of_CMD_GET_STATE 065E                              __end_of_strncmp 04A7  
                            ?_SPI_Initialize 0070                              __initialization 0020  
                               __end_of_main 0041                               ??_EUSART_Write 0070  
                    __end_of_TMR2_Initialize 01AB                               __CFG_LPBOR$OFF 0000  
                ?_INTERRUPT_InterruptManager 0070                            __end_of_COMM_Task 0291  
                                     ??_main 005C                     __end_of_SPI_Exchange8bit 0114  
                      __end_of_CMD_SET_PARTY 0650                                       _ADCON0 009D  
                                     _ADCON1 009E                                       _ADCON2 009F  
                      __end_of_CMD_TEST_SRAM 0685                                       _ADRESH 009C  
                                     _ADRESL 009B                                       _ANSELA 018C  
                                     ?_putch 0070                                       _ANSELB 018D  
                                     _ANSELC 018E                                       _IOCBF6 1CB6  
                                     _IOCCF3 1CCB                                       _IOCBF7 1CB7  
                                     _IOCCF4 1CCC                                       _IOCCF5 1CCD  
                                     _IOCCF6 1CCE                                       _IOCCF7 1CCF  
                                     _IOCBP6 1CA6                                       _IOCCP3 1CBB  
                                     _IOCBP7 1CA7                                       _IOCCP4 1CBC  
                                     _IOCCP5 1CBD                                       _IOCCP6 1CBE  
                                     _IOCCP7 1CBF                                       _RC1REG 0199  
                                     _RC0PPS 0EA0                                       _RC1PPS 0EA1  
                                     _RA5PPS 0E95                                       _RC1STA 019D  
                                     _RB4PPS 0E9C                                       i1l2026 07A7  
                                     _OSCCON 0099                                       _SPBRGH 019C  
                                     _SPBRGL 019B                                       _TX1REG 019A  
                                     _TX1STA 019E                                       _SSPBUF 0211  
                       __size_of_ledSetColor 0000                         __size_of_ledSendByte 0000  
                             __CFG_PWRTE$OFF 0000                             __end_of_commands 0622  
                                     ___wmul 0291                               __CFG_STVREN$ON 0000  
         __size_of_oneByte_HexSrtingToBinary 006C                          __size_of_TMR2_Start 0002  
                        _EUSART_Transmit_ISR 078C                                       _memset 04E1  
                                     _printf 03D8                     __size_of_ADC1_Initialize 0009  
                                     _strcmp 039C                                       _strlen 0456  
                        ledSetColor@ledColor 0072                             ?_PIN_MANAGER_IOC 0070  
                                  ??_strncmp 007C                         ?_EUSART_Transmit_ISR 0070  
                           ?_PWM3_Initialize 0070                         __size_of_EUSART_Read 0016  
                          _SYSTEM_Initialize 0114                      __end_of__initialization 0028  
                                  ?_LED_Task 0070                                    ?_LED_Test 0070  
                         ?_SYSTEM_Initialize 0070                               __pcstackCOMMON 0070  
                        ??_SYSTEM_Initialize 0071                               _CMD_SET_DIRECT 0632  
                                  LED_Task@i 0075                                    LED_Test@i 0075  
                                  LED_Test@j 0076                                __end_of_putch 046E  
                           ?_TMR2_Initialize 0070            __end_of_oneByte_HexSrtingToBinary 0456  
                             _CMD_SET_STARRY 0622                               _OPTION_REGbits 0095  
                  __end_of_SYSTEM_Initialize 0123                        ??_EUSART_Transmit_ISR 0070  
                                    ??_putch 0071                                   __pbssBANK0 0020  
                       __end_of_EUSART_Write 0510                                 _CMD_TEST_LED 0685  
                                 ??_LED_Task 0075                                   ??_LED_Test 0072  
                               _CMD_SET_XMAS 065E                  __size_of_EUSART_Receive_ISR 0015  
                                 __pmaintext 002A      command_GetnumberofCommands@commandArray 0076  
                     __end_of_CMD_SET_DIRECT 0641                                      ?___wmul 0070  
                            __CFG_PPS1WAY$ON 0000                              _CLC4_Initialize 01AB  
                                 __pintentry 0004                       __end_of_CMD_SET_STARRY 0632  
                                    _CLC4CON 0F2E                                      ?_memset 0070  
                                    _CLC4POL 0F2F                                      ?_printf 0072  
                                 _ledFullOff 0600                                      ?_strcmp 0070  
                                    ?_strlen 0070                  __size_of_testCommandProcess 001F  
                              _eusartRxCount 0042                              __CFG_WDTCCS$SWC 0000  
                                    _OSCSTAT 009A                                      _OSCTUNE 0098  
                                    _PWM3DCH 0618                                      _PWM3DCL 0617  
                                    _PWM3CON 0619                                      _SSP1ADD 0212  
                                    _PPSLOCK 0E0F                            ??_ADC1_Initialize 0070  
                               ??_TMR2_Start 0070                            _getCommandProcess 02C5  
                          _setCommandProcess 0300                             ??_SPI_Initialize 0070  
                         ?_getCommandProcess 007D                           ?_setCommandProcess 007D  
                          __end_of_ledFullOn 0606                          ??_getCommandProcess 007E  
                        ??_setCommandProcess 007E                              __size_of___wmul 0015  
                         __end_of_TMR2_Start 01CD                       getCommandProcess@input 007D  
                            __size_of_memset 0012                                      __ptext1 0114  
                                    __ptext2 01A0                                      __ptext3 01CB  
                                    __ptext4 019A                                      __ptext5 01C0  
                                    __ptext6 014C                                      __ptext7 0144  
                                    __ptext8 012C                                      __ptext9 01AB  
                            __size_of_printf 0012                              __size_of_strcmp 003C  
                            __size_of_strlen 0016                        _OSCILLATOR_Initialize 0144  
                                  _T2CONbits 001C                                    _COMM_Task 01CD  
                   ??_PIN_MANAGER_Initialize 0070                                LED_Task@i_858 0077  
                  __end_of_getCommandProcess 0300                    __end_of_setCommandProcess 039C  
                          ?_SPI_Exchange8bit 0070                   __size_of_SYSTEM_Initialize 000F  
                     setCommandProcess@input 007D                                      clrloop0 07B8  
                                    _strncmp 046E                         end_of_initialization 0028  
                         ??_SPI_Exchange8bit 0070                         SPI_Exchange8bit@data 0070  
                                    memset@c 0070                                      memset@n 0072  
                                    memset@p 0075                      __end_of_CLC4_Initialize 01C0  
                          _EUSART_Initialize 012C                   COMM_Task@UART_ReceiveState 003E  
                         ?_EUSART_Initialize 0070                                      printf@c 0076  
                                    printf@f 0072                                 __pstringtext 0600  
                                    strlen@s 0070                          ??_EUSART_Initialize 0070  
                                 COMM_Task@i 005A                                    _SSPDATPPS 0E21  
                                  _SSPCLKPPS 0E20                                   ?_COMM_Task 0070  
                           __CFG_FOSC$INTOSC 0000                        __size_of_EUSART_Write 001D  
                              ??_ledSetColor 0075                                ??_ledSendByte 0071  
                  __end_of_EUSART_Initialize 0144                            __size_of_LED_Task 0076  
                          __size_of_LED_Test 0054                                 _LED_SetColor 0038  
                        __end_of_CMD_SET_OFF 0679                               __end_of___wmul 02A6  
                               _EUSART_Write 04F3                       ?_OSCILLATOR_Initialize 0070  
                             __end_of_memset 04F3                               __end_of_printf 03EA  
                             __end_of_strcmp 03D8                               __end_of_strlen 046C  
                        start_initialization 0020              __size_of_PIN_MANAGER_Initialize 004E  
                 __size_of_getCommandProcess 003B                   __size_of_setCommandProcess 009C  
                              ??_EUSART_Read 0070                                  putch@txData 0071  
               ?_command_GetnumberofCommands 0076                                _CMD_GET_STATE 0650  
                   __size_of_PIN_MANAGER_IOC 0024                             ?_CLC4_Initialize 0070  
                        __end_of_ledSetColor 0000                          __end_of_ledSendByte 0000  
                   __size_of_PWM3_Initialize 000B                                     ??___wmul 0074  
                                _CCPTMRSbits 029E                                     ??_memset 0074  
                            _ADC1_Initialize 0123                                     ??_printf 0074  
                                   ??_strcmp 0073                                     ??_strlen 0072  
                 ?_oneByte_HexSrtingToBinary 0070                                  ??_COMM_Task 0059  
                __end_of_EUSART_Transmit_ISR 07A2                                    ___latbits 0002  
                              __pcstackBANK0 0059                     __size_of_TMR2_Initialize 000B  
                           _LED_currentColor 003B                                _CMD_SET_PARTY 0641  
                              _CMD_TEST_SRAM 0679                   __end_of_EUSART_Receive_ISR 07B7  
                 __size_of_EUSART_Initialize 0018                ??_command_GetnumberofCommands 0078  
                        __end_of_EUSART_Read 04BD                                  _CMD_SET_OFF 066C  
                     _PIN_MANAGER_Initialize 014C                         EUSART_Read@readValue 0070  
                                  _ledFullOn 0603                                 _eusartRxHead 0043  
                               _eusartTxHead 0046                                 _eusartRxTail 0044  
                               _eusartTxTail 0047                   __end_of_testCommandProcess 02C5  
               ??_INTERRUPT_InterruptManager 0070                                    __pswtext1 0510  
                                  __pswtext2 051A                      _eusartTxBufferRemaining 0045  
                                   _BAUD1CON 019F                                     _CLC4GLS0 0F34  
                                   _CLC4GLS1 0F35                                     _CLC4GLS2 0F36  
                                   _CLC4GLS3 0F37                                     _CLC4SEL0 0F30  
                                   _CLC4SEL1 0F31                                     _CLC4SEL2 0F32  
                                   _CLC4SEL3 0F33                                     _T2CLKCON 001E  
                                   ?_strncmp 0076                               __size_of_putch 0002  
                                _ledSetColor 0000                                  _ledSendByte 0000  
                             _eusartRxBuffer 0020                               _eusartTxBuffer 0030  
                             ___wmul@product 0074                                     _LED_Task 0095  
                                   _LED_Test 0041                                 _inputCommand 0049  
                                  clear_ram0 07B7                                     _PIE1bits 0090  
                                   _LED_mode 0041          __size_of_INTERRUPT_InterruptManager 001A  
                    __end_of_ADC1_Initialize 012C                                     _PIR1bits 0010  
                  __size_of_SPI_Exchange8bit 0009                         __CFG_WDTCPS$WDTCPS1F 0000  
                                   _SSP1CON1 0215                                     _SSP1STAT 0214  
                          ??_PIN_MANAGER_IOC 0070         __size_of_command_GetnumberofCommands 0024  
                          ??_PWM3_Initialize 0070                            ___wmul@multiplier 0070  
                                _EUSART_Read 04A7                            ??_TMR2_Initialize 0070  
                         __end_of_ledFullOff 0603                      __size_of_SPI_Initialize 0006  
                    ??_OSCILLATOR_Initialize 0070                                     __ptext10 0123  
                                   __ptext11 0095                                     __ptext20 046E  
                                   __ptext12 0000                                     __ptext21 0456  
                                   __ptext13 01CD                                     __ptext30 04A7  
                                   __ptext22 03EA                                     __ptext14 02C5  
                                   __ptext23 04E1                                     __ptext15 0300  
                                   __ptext32 0768                                     __ptext24 039C  
                                   __ptext16 02A6                                     __ptext33 078C  
                                   __ptext25 03D8                                     __ptext17 0041  
                                   __ptext34 07A2                                     __ptext26 046C  
                                   __ptext18 0000                                     __ptext27 04F3  
                                   __ptext19 010B                                     __ptext28 04BD  
                                   __ptext29 0291                                 _SSP1CON1bits 0215  
                                   _commands 0606                             __size_of_strncmp 0039  
                              __size_of_main 0017                                   strncmp@len 007A  
                       __CFG_WDTCWS$WDTCWSSW 0000                                   _RC1STAbits 019D  
                 oneByte_HexSrtingToBinary@i 0072                             ?_ADC1_Initialize 0070  
         __end_of_INTERRUPT_InterruptManager 001E                   _INTERRUPT_InterruptManager 0004  
                             LED_Task@ledOFF 0040                                 _SSP1STATbits 0214  
                       COMM_Task@receiveData 005B                  PIN_MANAGER_Initialize@state 0070  
                ??_oneByte_HexSrtingToBinary 0070                                   _INTCONbits 000B  
                    testCommandProcess@input 007D                              ledSendByte@data 0071  
                                   memset@p1 0074                                     intlevel1 0000  
                    ?_PIN_MANAGER_Initialize 0070                            __CFG_CLKOUTEN$OFF 0000  
                                _PPSLOCKbits 0E0F                                    strncmp@s1 0076  
                                  strncmp@s2 0078                             _SPI_Exchange8bit 010B  
                         _EUSART_Receive_ISR 07A2                     __size_of_CLC4_Initialize 0015  
                        ?_EUSART_Receive_ISR 0070                                     strcmp@s1 0070  
                                   strcmp@t0 0073                                     strcmp@s2 0072  
                                   strcmp@t1 0075                                     strcmp@t2 0074  
                                   strlen@cp 0073                                   _TMR2_Start 01CB  
                         _testCommandProcess 02A6                           EUSART_Write@txData 0070  
               __size_of_EUSART_Transmit_ISR 0016                                 ?_ledSetColor 0072  
                               ?_ledSendByte 0070               __end_of_PIN_MANAGER_Initialize 019A  
                            _PIN_MANAGER_IOC 0768                         ??_EUSART_Receive_ISR 0070  
                  _oneByte_HexSrtingToBinary 03EA                          ?_testCommandProcess 007D  
                            _PWM3_Initialize 01C0  
